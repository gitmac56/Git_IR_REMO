ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.90
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 4


  57              	.LFB1:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also 
 126:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 132:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 132 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 133:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 134:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 135:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 136:Generated_Source\PSoC4/CyLib.c **** 
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 138:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 139:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 140:Generated_Source\PSoC4/CyLib.c **** 
 141:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 141 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 142:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 142 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 30000340 		.word	1073938480
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 5


 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 149:Generated_Source\PSoC4/CyLib.c ****     *
 150:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 151:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 152:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 153:Generated_Source\PSoC4/CyLib.c ****     *
 154:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 155:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 156:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 157:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 158:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 159:Generated_Source\PSoC4/CyLib.c ****     *
 160:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 161:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 164:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 165:Generated_Source\PSoC4/CyLib.c ****     *
 166:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 167:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 168:Generated_Source\PSoC4/CyLib.c ****     {
 169:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 170:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 171:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 172:Generated_Source\PSoC4/CyLib.c **** 
 173:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 174:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 176:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 177:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 178:Generated_Source\PSoC4/CyLib.c **** 
 179:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 180:Generated_Source\PSoC4/CyLib.c ****         {
 181:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/CyLib.c **** 
 183:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 184:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 186:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 188:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 191:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 192:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 193:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 194:Generated_Source\PSoC4/CyLib.c ****                 {
 195:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 196:Generated_Source\PSoC4/CyLib.c ****                     {
 197:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 198:Generated_Source\PSoC4/CyLib.c ****                         break;
 199:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 }
 201:Generated_Source\PSoC4/CyLib.c ****             #else
 202:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 203:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 204:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 205:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 206:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 207:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 208:Generated_Source\PSoC4/CyLib.c ****                 #else
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 210:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 211:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 212:Generated_Source\PSoC4/CyLib.c **** 
 213:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 214:Generated_Source\PSoC4/CyLib.c ****             
 215:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 216:Generated_Source\PSoC4/CyLib.c ****             
 217:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 218:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 220:Generated_Source\PSoC4/CyLib.c ****                 {
 221:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 222:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 223:Generated_Source\PSoC4/CyLib.c ****                 }
 224:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 225:Generated_Source\PSoC4/CyLib.c **** 
 226:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 230:Generated_Source\PSoC4/CyLib.c **** 
 231:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 238:Generated_Source\PSoC4/CyLib.c ****             
 239:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 240:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 244:Generated_Source\PSoC4/CyLib.c ****             
 245:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 248:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 249:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 250:Generated_Source\PSoC4/CyLib.c ****             }
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 254:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 259:Generated_Source\PSoC4/CyLib.c ****         }
 260:Generated_Source\PSoC4/CyLib.c ****     }
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 266:Generated_Source\PSoC4/CyLib.c ****     *
 267:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 268:Generated_Source\PSoC4/CyLib.c ****     *
 269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 270:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 273:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 277:Generated_Source\PSoC4/CyLib.c ****     {
 278:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 279:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 280:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 281:Generated_Source\PSoC4/CyLib.c **** 
 282:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 283:Generated_Source\PSoC4/CyLib.c ****         
 284:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 287:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 288:Generated_Source\PSoC4/CyLib.c ****             {
 289:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 290:Generated_Source\PSoC4/CyLib.c ****                 {
 291:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 292:Generated_Source\PSoC4/CyLib.c ****                     break;
 293:Generated_Source\PSoC4/CyLib.c ****                 }
 294:Generated_Source\PSoC4/CyLib.c ****             }
 295:Generated_Source\PSoC4/CyLib.c ****         #else
 296:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 297:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 298:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 299:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 300:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 301:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 302:Generated_Source\PSoC4/CyLib.c ****             #else
 303:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 304:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 305:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 308:Generated_Source\PSoC4/CyLib.c **** 
 309:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 310:Generated_Source\PSoC4/CyLib.c ****         
 311:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 312:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 313:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 315:Generated_Source\PSoC4/CyLib.c ****         #endif
 316:Generated_Source\PSoC4/CyLib.c ****     }
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c **** 
 319:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 321:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 326:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 329:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 336:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 337:Generated_Source\PSoC4/CyLib.c ****     }
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 346:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/CyLib.c ****     *
 348:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 349:Generated_Source\PSoC4/CyLib.c ****     *
 350:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 351:Generated_Source\PSoC4/CyLib.c ****     *
 352:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 353:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 356:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 357:Generated_Source\PSoC4/CyLib.c ****     *
 358:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 360:Generated_Source\PSoC4/CyLib.c ****     {
 361:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 362:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 363:Generated_Source\PSoC4/CyLib.c ****             
 364:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 365:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 366:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 367:Generated_Source\PSoC4/CyLib.c **** 
 368:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 369:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 370:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 372:Generated_Source\PSoC4/CyLib.c ****             {
 373:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 374:Generated_Source\PSoC4/CyLib.c ****                 {
 375:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 376:Generated_Source\PSoC4/CyLib.c ****                     break;
 377:Generated_Source\PSoC4/CyLib.c ****                 }
 378:Generated_Source\PSoC4/CyLib.c ****             }
 379:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 380:Generated_Source\PSoC4/CyLib.c ****         
 381:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 382:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 383:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 384:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 385:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 386:Generated_Source\PSoC4/CyLib.c **** 
 387:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 388:Generated_Source\PSoC4/CyLib.c ****            
 389:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 390:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 391:Generated_Source\PSoC4/CyLib.c ****             
 392:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 393:Generated_Source\PSoC4/CyLib.c ****             {
 394:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 395:Generated_Source\PSoC4/CyLib.c ****                 
 396:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 397:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 399:Generated_Source\PSoC4/CyLib.c ****                 
 400:Generated_Source\PSoC4/CyLib.c ****             }
 401:Generated_Source\PSoC4/CyLib.c ****             else
 402:Generated_Source\PSoC4/CyLib.c ****             {
 403:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 404:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 405:Generated_Source\PSoC4/CyLib.c **** 
 406:Generated_Source\PSoC4/CyLib.c ****             }
 407:Generated_Source\PSoC4/CyLib.c **** 
 408:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 409:Generated_Source\PSoC4/CyLib.c ****             {
 410:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 412:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 413:Generated_Source\PSoC4/CyLib.c ****             }
 414:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 415:Generated_Source\PSoC4/CyLib.c ****             {
 416:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 418:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 419:Generated_Source\PSoC4/CyLib.c ****             }
 420:Generated_Source\PSoC4/CyLib.c ****             else
 421:Generated_Source\PSoC4/CyLib.c ****             {
 422:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 423:Generated_Source\PSoC4/CyLib.c ****             }
 424:Generated_Source\PSoC4/CyLib.c ****             
 425:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c ****     }
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 432:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 433:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 434:Generated_Source\PSoC4/CyLib.c ****     *
 435:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 436:Generated_Source\PSoC4/CyLib.c ****     *
 437:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 438:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 444:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 445:Generated_Source\PSoC4/CyLib.c ****     {
 446:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 447:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 448:Generated_Source\PSoC4/CyLib.c ****             
 449:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 450:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 451:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 454:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 459:Generated_Source\PSoC4/CyLib.c ****                 {
 460:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 461:Generated_Source\PSoC4/CyLib.c ****                     break;
 462:Generated_Source\PSoC4/CyLib.c ****                 }
 463:Generated_Source\PSoC4/CyLib.c ****             }           
 464:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 465:Generated_Source\PSoC4/CyLib.c ****         
 466:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 469:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 470:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 471:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 474:Generated_Source\PSoC4/CyLib.c ****             {
 475:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 476:Generated_Source\PSoC4/CyLib.c ****             }
 477:Generated_Source\PSoC4/CyLib.c ****             
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 479:Generated_Source\PSoC4/CyLib.c ****             
 480:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 481:Generated_Source\PSoC4/CyLib.c ****     }
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 486:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 487:Generated_Source\PSoC4/CyLib.c ****     *
 488:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 489:Generated_Source\PSoC4/CyLib.c ****     *
 490:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 491:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 492:Generated_Source\PSoC4/CyLib.c ****     *
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 494:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 495:Generated_Source\PSoC4/CyLib.c ****     *
 496:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 498:Generated_Source\PSoC4/CyLib.c ****     {
 499:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 501:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 502:Generated_Source\PSoC4/CyLib.c ****     }
 503:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 508:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 509:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 512:Generated_Source\PSoC4/CyLib.c **** *
 513:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 514:Generated_Source\PSoC4/CyLib.c **** *
 515:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 516:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 517:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 518:Generated_Source\PSoC4/CyLib.c **** *
 519:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 520:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 521:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 522:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 524:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 525:Generated_Source\PSoC4/CyLib.c **** *
 526:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 527:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 528:Generated_Source\PSoC4/CyLib.c **** *
 529:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 532:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 533:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 534:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 535:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 536:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 537:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 540:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 541:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 12


  87              		.loc 1 541 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 542:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 543:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 544:Generated_Source\PSoC4/CyLib.c ****     
 545:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 546:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 547:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 549 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 552:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 556:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 557:Generated_Source\PSoC4/CyLib.c ****         
 558:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 561:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 562:Generated_Source\PSoC4/CyLib.c ****         
 563:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 564:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 565:Generated_Source\PSoC4/CyLib.c ****         
 566:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 567:Generated_Source\PSoC4/CyLib.c ****         {
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 570:Generated_Source\PSoC4/CyLib.c ****         }
 571:Generated_Source\PSoC4/CyLib.c ****         
 572:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 573:Generated_Source\PSoC4/CyLib.c ****     }
 574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 576 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0321     		movs	r1, #3
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 577:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 13


 580:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 581:Generated_Source\PSoC4/CyLib.c ****     {
 582:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 583:Generated_Source\PSoC4/CyLib.c ****     }
 584:Generated_Source\PSoC4/CyLib.c ****     else
 585:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 586:Generated_Source\PSoC4/CyLib.c ****     {
 587:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 587 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 588:Generated_Source\PSoC4/CyLib.c ****     }   
 589:Generated_Source\PSoC4/CyLib.c ****     
 590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 590 0
 112 0014 1460     		str	r4, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****     
 592:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 592 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 593:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 593 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 28000340 		.word	1073938472
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** 
 596:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 598:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 604:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 605:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 606:Generated_Source\PSoC4/CyLib.c **** *
 607:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 14


 608:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 609:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 610:Generated_Source\PSoC4/CyLib.c **** *
 611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 612:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 613:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 613 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 614:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 615:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 618:Generated_Source\PSoC4/CyLib.c ****         }
 619:Generated_Source\PSoC4/CyLib.c ****         else
 620:Generated_Source\PSoC4/CyLib.c ****         {
 621:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 622:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 624:Generated_Source\PSoC4/CyLib.c ****         }
 625:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 626:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 626 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 627:Generated_Source\PSoC4/CyLib.c ****         {
 628:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 144              		.loc 1 628 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 1B01     		lsls	r3, r3, #4
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 629:Generated_Source\PSoC4/CyLib.c ****         }
 630:Generated_Source\PSoC4/CyLib.c ****         else
 631:Generated_Source\PSoC4/CyLib.c ****         {
 632:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 154              		.loc 1 632 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 1B09     		lsrs	r3, r3, #4
 158 001a 0321     		movs	r1, #3
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 633:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 634:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 162              		.loc 1 634 0
 163 0022 1368     		ldr	r3, [r2]
 164 0024 3021     		movs	r1, #48
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 15


 165 0026 8B43     		bics	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 635:Generated_Source\PSoC4/CyLib.c ****         }
 636:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 637:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 637 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 28000340 		.word	1073938472
 175 0030 00000000 		.word	.LANCHOR0
 176              		.cfi_endproc
 177              	.LFE3:
 178              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 179              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkGetSysclkSource
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkGetSysclkSource, %function
 185              	CySysClkGetSysclkSource:
 186              	.LFB4:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 643:Generated_Source\PSoC4/CyLib.c **** *
 644:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 645:Generated_Source\PSoC4/CyLib.c **** *
 646:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 647:Generated_Source\PSoC4/CyLib.c **** *
 648:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 650:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 650 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 10B5     		push	{r4, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 651:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 652:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 653:Generated_Source\PSoC4/CyLib.c **** 
 654:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 195              		.loc 1 654 0
 196 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 197              	.LVL8:
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 657:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 658:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 16


 659:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 660:Generated_Source\PSoC4/CyLib.c ****     }
 661:Generated_Source\PSoC4/CyLib.c ****     else
 662:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 663:Generated_Source\PSoC4/CyLib.c ****     {
 664:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 198              		.loc 1 664 0
 199 0006 044B     		ldr	r3, .L16
 200 0008 1B68     		ldr	r3, [r3]
 201 000a 0324     		movs	r4, #3
 202 000c 1C40     		ands	r4, r3
 203              	.LVL9:
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 667:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 668:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 670:Generated_Source\PSoC4/CyLib.c ****         
 671:Generated_Source\PSoC4/CyLib.c ****     }
 672:Generated_Source\PSoC4/CyLib.c **** 
 673:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 204              		.loc 1 673 0
 205 000e FFF7FEFF 		bl	CyExitCriticalSection
 206              	.LVL10:
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 676:Generated_Source\PSoC4/CyLib.c **** }
 207              		.loc 1 676 0
 208 0012 2000     		movs	r0, r4
 209              		@ sp needed
 210              	.LVL11:
 211 0014 10BD     		pop	{r4, pc}
 212              	.L17:
 213 0016 C046     		.align	2
 214              	.L16:
 215 0018 28000340 		.word	1073938472
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 219              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 220              		.align	2
 221              		.global	CySysClkWriteSysclkDiv
 222              		.code	16
 223              		.thumb_func
 224              		.type	CySysClkWriteSysclkDiv, %function
 225              	CySysClkWriteSysclkDiv:
 226              	.LFB5:
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 680:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 681:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 682:Generated_Source\PSoC4/CyLib.c **** *
 683:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 684:Generated_Source\PSoC4/CyLib.c **** *
 685:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 686:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 17


 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 689:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 690:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 693:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 694:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 695:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 697:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 698:Generated_Source\PSoC4/CyLib.c **** *
 699:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 708:Generated_Source\PSoC4/CyLib.c **** *
 709:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 711:Generated_Source\PSoC4/CyLib.c **** {
 227              		.loc 1 711 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL12:
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236 0002 0400     		movs	r4, r0
 712:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 713:Generated_Source\PSoC4/CyLib.c **** 
 714:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 237              		.loc 1 714 0
 238 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 239              	.LVL13:
 715:Generated_Source\PSoC4/CyLib.c **** 
 716:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 240              		.loc 1 716 0
 241 0008 A401     		lsls	r4, r4, #6
 242              	.LVL14:
 243 000a FF23     		movs	r3, #255
 244 000c 2340     		ands	r3, r4
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 718:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 245              		.loc 1 718 0
 246 000e 0449     		ldr	r1, .L19
 247 0010 0A68     		ldr	r2, [r1]
 248 0012 C024     		movs	r4, #192
 249 0014 A243     		bics	r2, r4
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 250              		.loc 1 717 0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 18


 251 0016 1343     		orrs	r3, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 252              		.loc 1 716 0
 253 0018 0B60     		str	r3, [r1]
 719:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 254              		.loc 1 721 0
 255 001a FFF7FEFF 		bl	CyExitCriticalSection
 256              	.LVL15:
 722:Generated_Source\PSoC4/CyLib.c **** }
 257              		.loc 1 722 0
 258              		@ sp needed
 259 001e 10BD     		pop	{r4, pc}
 260              	.L20:
 261              		.align	2
 262              	.L19:
 263 0020 28000340 		.word	1073938472
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 267              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 268              		.align	2
 269              		.global	CySysClkWriteHfclkDiv
 270              		.code	16
 271              		.thumb_func
 272              		.type	CySysClkWriteHfclkDiv, %function
 273              	CySysClkWriteHfclkDiv:
 274              	.LFB7:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 727:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 730:Generated_Source\PSoC4/CyLib.c **** *
 731:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 732:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 735:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 736:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 737:Generated_Source\PSoC4/CyLib.c **** *
 738:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 739:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 740:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 741:Generated_Source\PSoC4/CyLib.c **** *
 742:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 743:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 744:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 745:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 746:Generated_Source\PSoC4/CyLib.c **** *
 747:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 748:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 749:Generated_Source\PSoC4/CyLib.c **** *
 750:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 19


 751:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 752:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 753:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 755:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 756:Generated_Source\PSoC4/CyLib.c **** *
 757:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 758:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 759:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 760:Generated_Source\PSoC4/CyLib.c **** *
 761:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 762:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 763:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 764:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 765:Generated_Source\PSoC4/CyLib.c **** *
 766:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 768:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 769:Generated_Source\PSoC4/CyLib.c ****     {
 770:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 772:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 773:Generated_Source\PSoC4/CyLib.c ****         #else
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 778:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 781:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 782:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 786:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 794:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c **** 
 802:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 20


 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 810:Generated_Source\PSoC4/CyLib.c ****                 {
 811:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 812:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 813:Generated_Source\PSoC4/CyLib.c ****                 }
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 816:Generated_Source\PSoC4/CyLib.c ****                 }
 817:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 823:Generated_Source\PSoC4/CyLib.c **** 
 824:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 828:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 829:Generated_Source\PSoC4/CyLib.c **** 
 830:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 831:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 832:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 833:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 836:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 837:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 842:Generated_Source\PSoC4/CyLib.c ****         {
 843:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 849:Generated_Source\PSoC4/CyLib.c ****             {
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 852:Generated_Source\PSoC4/CyLib.c ****             }
 853:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 854:Generated_Source\PSoC4/CyLib.c ****             {
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 857:Generated_Source\PSoC4/CyLib.c ****             }
 858:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 859:Generated_Source\PSoC4/CyLib.c ****             {
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 862:Generated_Source\PSoC4/CyLib.c ****             }
 863:Generated_Source\PSoC4/CyLib.c ****             else
 864:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 21


 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 867:Generated_Source\PSoC4/CyLib.c ****             }
 868:Generated_Source\PSoC4/CyLib.c **** 
 869:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 870:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 874:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 875:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 876:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 877:Generated_Source\PSoC4/CyLib.c ****             *
 878:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 879:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 880:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 881:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 882:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 883:Generated_Source\PSoC4/CyLib.c ****             {
 884:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 885:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 886:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 891:Generated_Source\PSoC4/CyLib.c ****             }
 892:Generated_Source\PSoC4/CyLib.c ****             else
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 895:Generated_Source\PSoC4/CyLib.c ****             }
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 899:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 900:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 901:Generated_Source\PSoC4/CyLib.c ****             *
 902:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 903:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 904:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 905:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 906:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 907:Generated_Source\PSoC4/CyLib.c ****             {
 908:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 909:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 910:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 914:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 916:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 917:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 920:Generated_Source\PSoC4/CyLib.c ****             {
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 22


 922:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 923:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 924:Generated_Source\PSoC4/CyLib.c ****             }
 925:Generated_Source\PSoC4/CyLib.c ****         }
 926:Generated_Source\PSoC4/CyLib.c ****         else
 927:Generated_Source\PSoC4/CyLib.c ****         {
 928:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 929:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLib.c ****         }
 931:Generated_Source\PSoC4/CyLib.c **** 
 932:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 933:Generated_Source\PSoC4/CyLib.c **** 
 934:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 935:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 936:Generated_Source\PSoC4/CyLib.c ****             {
 937:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 938:Generated_Source\PSoC4/CyLib.c ****             }
 939:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 942:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 943:Generated_Source\PSoC4/CyLib.c ****             {
 944:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 945:Generated_Source\PSoC4/CyLib.c ****             }
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #else
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 954:Generated_Source\PSoC4/CyLib.c ****     {
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 956:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 957:Generated_Source\PSoC4/CyLib.c **** 
 958:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 959:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 960:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 961:Generated_Source\PSoC4/CyLib.c ****         
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 963:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 964:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 967:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 968:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 969:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 970:Generated_Source\PSoC4/CyLib.c ****         #else
 971:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 973:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 974:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 975:Generated_Source\PSoC4/CyLib.c ****         {
 976:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 23


 979:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 980:Generated_Source\PSoC4/CyLib.c ****                 {
 981:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 982:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 983:Generated_Source\PSoC4/CyLib.c ****                 }
 984:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 989:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 990:Generated_Source\PSoC4/CyLib.c ****                     {
 991:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 992:Generated_Source\PSoC4/CyLib.c **** 
 993:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 994:Generated_Source\PSoC4/CyLib.c ****                     {
 995:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 996:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 997:Generated_Source\PSoC4/CyLib.c ****                     }
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1000:Generated_Source\PSoC4/CyLib.c ****                     }
1001:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1002:Generated_Source\PSoC4/CyLib.c **** 
1003:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c **** 
1006:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1007:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c **** 
1010:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1011:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1013:Generated_Source\PSoC4/CyLib.c ****                 {
1014:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1015:Generated_Source\PSoC4/CyLib.c ****                 }
1016:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1017:Generated_Source\PSoC4/CyLib.c ****                 {
1018:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1019:Generated_Source\PSoC4/CyLib.c ****                 }
1020:Generated_Source\PSoC4/CyLib.c ****                 else
1021:Generated_Source\PSoC4/CyLib.c ****                 {
1022:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1023:Generated_Source\PSoC4/CyLib.c ****                 }
1024:Generated_Source\PSoC4/CyLib.c ****             #else
1025:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1026:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1027:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1030:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1031:Generated_Source\PSoC4/CyLib.c **** 
1032:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1034:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1035:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 24


1036:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1039:Generated_Source\PSoC4/CyLib.c ****             {
1040:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1041:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1042:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1043:Generated_Source\PSoC4/CyLib.c **** 
1044:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1045:Generated_Source\PSoC4/CyLib.c **** 
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1048:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1049:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1050:Generated_Source\PSoC4/CyLib.c ****             }
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1053:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1054:Generated_Source\PSoC4/CyLib.c ****                 {
1055:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1056:Generated_Source\PSoC4/CyLib.c ****                 }
1057:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****         
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1066:Generated_Source\PSoC4/CyLib.c **** 
1067:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1068:Generated_Source\PSoC4/CyLib.c ****         }
1069:Generated_Source\PSoC4/CyLib.c ****         else
1070:Generated_Source\PSoC4/CyLib.c ****         {
1071:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1072:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1073:Generated_Source\PSoC4/CyLib.c ****         }
1074:Generated_Source\PSoC4/CyLib.c ****     }
1075:Generated_Source\PSoC4/CyLib.c **** 
1076:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1080:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1081:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1082:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1083:Generated_Source\PSoC4/CyLib.c ****     *
1084:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1085:Generated_Source\PSoC4/CyLib.c ****     *
1086:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1087:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1088:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1089:Generated_Source\PSoC4/CyLib.c ****     *
1090:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1091:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1092:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 25


1093:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1094:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1095:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1096:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1098:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1103:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1104:Generated_Source\PSoC4/CyLib.c ****     *
1105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1106:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1107:Generated_Source\PSoC4/CyLib.c ****     {
 275              		.loc 1 1107 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL16:
 280 0000 70B5     		push	{r4, r5, r6, lr}
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 4, -16
 283              		.cfi_offset 5, -12
 284              		.cfi_offset 6, -8
 285              		.cfi_offset 14, -4
 286 0002 0400     		movs	r4, r0
1108:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 287              		.loc 1 1110 0
 288 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 289              	.LVL17:
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 290              		.loc 1 1112 0
 291 0008 0549     		ldr	r1, .L22
 292 000a 0A68     		ldr	r2, [r1]
 293 000c 0C25     		movs	r5, #12
 294 000e AA43     		bics	r2, r5
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1114:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 295              		.loc 1 1114 0
 296 0010 A300     		lsls	r3, r4, #2
 297 0012 2C00     		movs	r4, r5
 298              	.LVL18:
 299 0014 1C40     		ands	r4, r3
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 300              		.loc 1 1113 0
 301 0016 1443     		orrs	r4, r2
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 302              		.loc 1 1112 0
 303 0018 0C60     		str	r4, [r1]
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 304              		.loc 1 1116 0
 305 001a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 26


 306              	.LVL19:
1117:Generated_Source\PSoC4/CyLib.c ****     }
 307              		.loc 1 1117 0
 308              		@ sp needed
 309 001e 70BD     		pop	{r4, r5, r6, pc}
 310              	.L23:
 311              		.align	2
 312              	.L22:
 313 0020 28000340 		.word	1073938472
 314              		.cfi_endproc
 315              	.LFE7:
 316              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 317              		.section	.text.CySysGetResetReason,"ax",%progbits
 318              		.align	2
 319              		.global	CySysGetResetReason
 320              		.code	16
 321              		.thumb_func
 322              		.type	CySysGetResetReason, %function
 323              	CySysGetResetReason:
 324              	.LFB8:
1118:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1125:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1128:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1129:Generated_Source\PSoC4/CyLib.c ****     *
1130:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1131:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1132:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1133:Generated_Source\PSoC4/CyLib.c ****     * called.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1140:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1143:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1144:Generated_Source\PSoC4/CyLib.c ****     *
1145:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1146:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1147:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1150:Generated_Source\PSoC4/CyLib.c ****     *
1151:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1152:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1153:Generated_Source\PSoC4/CyLib.c ****     {
1154:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 27


1155:Generated_Source\PSoC4/CyLib.c **** 
1156:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1157:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1159:Generated_Source\PSoC4/CyLib.c **** 
1160:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1161:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1162:Generated_Source\PSoC4/CyLib.c **** 
1163:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1164:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1165:Generated_Source\PSoC4/CyLib.c ****         
1166:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1169:Generated_Source\PSoC4/CyLib.c ****             
1170:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1171:Generated_Source\PSoC4/CyLib.c ****             {
1172:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1173:Generated_Source\PSoC4/CyLib.c ****             }
1174:Generated_Source\PSoC4/CyLib.c ****             else
1175:Generated_Source\PSoC4/CyLib.c ****             {
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1180:Generated_Source\PSoC4/CyLib.c ****             
1181:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1184:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1188:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1189:Generated_Source\PSoC4/CyLib.c ****                 {
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1191:Generated_Source\PSoC4/CyLib.c ****                 }
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1196:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1197:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1198:Generated_Source\PSoC4/CyLib.c **** 
1199:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1200:Generated_Source\PSoC4/CyLib.c ****                 {
1201:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1202:Generated_Source\PSoC4/CyLib.c ****                 }
1203:Generated_Source\PSoC4/CyLib.c **** 
1204:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1205:Generated_Source\PSoC4/CyLib.c ****                 {
1206:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1207:Generated_Source\PSoC4/CyLib.c ****                 }
1208:Generated_Source\PSoC4/CyLib.c ****                 
1209:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 28


1212:Generated_Source\PSoC4/CyLib.c ****                 
1213:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1215:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1216:Generated_Source\PSoC4/CyLib.c ****                 #else
1217:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1218:Generated_Source\PSoC4/CyLib.c ****                 #endif
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1221:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1222:Generated_Source\PSoC4/CyLib.c ****                 {
1223:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****                 
1226:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1228:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1229:Generated_Source\PSoC4/CyLib.c ****                                             
1230:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1231:Generated_Source\PSoC4/CyLib.c ****                 {
1232:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1233:Generated_Source\PSoC4/CyLib.c ****                 }
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1238:Generated_Source\PSoC4/CyLib.c ****                 
1239:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1240:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1241:Generated_Source\PSoC4/CyLib.c ****                 
1242:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1243:Generated_Source\PSoC4/CyLib.c ****                 {
1244:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1245:Generated_Source\PSoC4/CyLib.c ****                 }
1246:Generated_Source\PSoC4/CyLib.c ****                 
1247:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1249:Generated_Source\PSoC4/CyLib.c ****                 
1250:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1251:Generated_Source\PSoC4/CyLib.c ****                 {
1252:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1253:Generated_Source\PSoC4/CyLib.c ****                 }
1254:Generated_Source\PSoC4/CyLib.c ****                 
1255:Generated_Source\PSoC4/CyLib.c ****             }
1256:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1258:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1259:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1260:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1261:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1263:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1266:Generated_Source\PSoC4/CyLib.c ****         {
1267:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1268:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 29


1269:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1270:Generated_Source\PSoC4/CyLib.c ****             {
1271:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1274:Generated_Source\PSoC4/CyLib.c ****                 {
1275:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1276:Generated_Source\PSoC4/CyLib.c ****                     break;
1277:Generated_Source\PSoC4/CyLib.c ****                 }
1278:Generated_Source\PSoC4/CyLib.c ****             }
1279:Generated_Source\PSoC4/CyLib.c **** 
1280:Generated_Source\PSoC4/CyLib.c ****         }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1283:Generated_Source\PSoC4/CyLib.c ****     }
1284:Generated_Source\PSoC4/CyLib.c **** 
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1289:Generated_Source\PSoC4/CyLib.c ****     *
1290:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1293:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1294:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1297:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1298:Generated_Source\PSoC4/CyLib.c ****     {
1299:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1300:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1301:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1302:Generated_Source\PSoC4/CyLib.c **** 
1303:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1305:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1307:Generated_Source\PSoC4/CyLib.c ****         #else
1308:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1309:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1310:Generated_Source\PSoC4/CyLib.c ****     }
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1316:Generated_Source\PSoC4/CyLib.c ****     *
1317:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1318:Generated_Source\PSoC4/CyLib.c ****     *
1319:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1320:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is 
1323:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1324:Generated_Source\PSoC4/CyLib.c ****     *
1325:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 30


1326:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1327:Generated_Source\PSoC4/CyLib.c ****     *
1328:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO 
1329:Generated_Source\PSoC4/CyLib.c ****     * is running.
1330:Generated_Source\PSoC4/CyLib.c ****     *
1331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1333:Generated_Source\PSoC4/CyLib.c ****     {
1334:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1337:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1338:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1339:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1340:Generated_Source\PSoC4/CyLib.c **** 
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1342:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1343:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1344:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1345:Generated_Source\PSoC4/CyLib.c ****         #else
1346:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1347:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1350:Generated_Source\PSoC4/CyLib.c ****     }
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1353:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1354:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1355:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1358:Generated_Source\PSoC4/CyLib.c ****         *
1359:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1360:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1362:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1363:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1364:Generated_Source\PSoC4/CyLib.c ****         *
1365:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1366:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1367:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1368:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1369:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1370:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1373:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1374:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1375:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1376:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1377:Generated_Source\PSoC4/CyLib.c ****         *
1378:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1379:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1380:Generated_Source\PSoC4/CyLib.c ****         {
1381:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1382:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 31


1383:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1384:Generated_Source\PSoC4/CyLib.c ****             {
1385:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1386:Generated_Source\PSoC4/CyLib.c **** 
1387:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1388:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****             else
1393:Generated_Source\PSoC4/CyLib.c ****             {
1394:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1395:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1396:Generated_Source\PSoC4/CyLib.c ****             }
1397:Generated_Source\PSoC4/CyLib.c ****         }
1398:Generated_Source\PSoC4/CyLib.c **** 
1399:Generated_Source\PSoC4/CyLib.c ****     #else
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1402:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1403:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1406:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1409:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1410:Generated_Source\PSoC4/CyLib.c ****         *
1411:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1412:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1415:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1416:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1417:Generated_Source\PSoC4/CyLib.c ****         *
1418:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1419:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1422:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1423:Generated_Source\PSoC4/CyLib.c ****         *
1424:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1425:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1428:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 32


1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1445:Generated_Source\PSoC4/CyLib.c ****         *
1446:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1447:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         *
1452:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1453:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1454:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1455:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1456:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1457:Generated_Source\PSoC4/CyLib.c ****         *
1458:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1459:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1460:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1461:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1462:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1463:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1464:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1465:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1468:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1469:Generated_Source\PSoC4/CyLib.c ****         {
1470:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1472:Generated_Source\PSoC4/CyLib.c **** 
1473:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1476:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1477:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1481:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1482:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1483:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1484:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1485:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1488:Generated_Source\PSoC4/CyLib.c **** 
1489:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1490:Generated_Source\PSoC4/CyLib.c ****         }
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c **** 
1493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1496:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 33


1497:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1498:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1499:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO 
1502:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1505:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1506:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1507:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1508:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1511:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1512:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1513:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1514:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1517:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1518:Generated_Source\PSoC4/CyLib.c ****         *
1519:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1520:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1521:Generated_Source\PSoC4/CyLib.c ****         {
1522:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1525:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1526:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1527:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1528:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c **** 
1533:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1534:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1535:Generated_Source\PSoC4/CyLib.c ****             {
1536:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1537:Generated_Source\PSoC4/CyLib.c ****             }
1538:Generated_Source\PSoC4/CyLib.c ****             else
1539:Generated_Source\PSoC4/CyLib.c ****             {
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1542:Generated_Source\PSoC4/CyLib.c **** 
1543:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1544:Generated_Source\PSoC4/CyLib.c ****                 {
1545:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1546:Generated_Source\PSoC4/CyLib.c ****                 }
1547:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1548:Generated_Source\PSoC4/CyLib.c ****                 {
1549:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1550:Generated_Source\PSoC4/CyLib.c ****                 }
1551:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1552:Generated_Source\PSoC4/CyLib.c ****                 {
1553:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 34


1554:Generated_Source\PSoC4/CyLib.c ****                 }
1555:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1556:Generated_Source\PSoC4/CyLib.c ****                 {
1557:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1558:Generated_Source\PSoC4/CyLib.c ****                 }
1559:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1560:Generated_Source\PSoC4/CyLib.c ****                 {
1561:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
1563:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c ****                 else
1572:Generated_Source\PSoC4/CyLib.c ****                 {
1573:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1574:Generated_Source\PSoC4/CyLib.c ****                 }
1575:Generated_Source\PSoC4/CyLib.c **** 
1576:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1577:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1580:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1581:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1584:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1585:Generated_Source\PSoC4/CyLib.c ****                 }
1586:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1587:Generated_Source\PSoC4/CyLib.c ****                 {
1588:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1589:Generated_Source\PSoC4/CyLib.c ****                 }
1590:Generated_Source\PSoC4/CyLib.c ****                 else
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c **** 
1595:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 35


1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1614:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1619:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1620:Generated_Source\PSoC4/CyLib.c ****                 {
1621:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1622:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c ****                 else
1625:Generated_Source\PSoC4/CyLib.c ****                 {
1626:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1627:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1628:Generated_Source\PSoC4/CyLib.c ****                     */
1629:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1630:Generated_Source\PSoC4/CyLib.c ****                 }
1631:Generated_Source\PSoC4/CyLib.c ****             }
1632:Generated_Source\PSoC4/CyLib.c **** 
1633:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1634:Generated_Source\PSoC4/CyLib.c ****         }
1635:Generated_Source\PSoC4/CyLib.c **** 
1636:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1637:Generated_Source\PSoC4/CyLib.c **** 
1638:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1642:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1643:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1644:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1647:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1648:Generated_Source\PSoC4/CyLib.c ****     *
1649:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1650:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1653:Generated_Source\PSoC4/CyLib.c ****     *
1654:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1655:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1656:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1659:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1660:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1661:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1662:Generated_Source\PSoC4/CyLib.c ****     *
1663:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1664:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1665:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1666:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1667:Generated_Source\PSoC4/CyLib.c ****     * still be used.
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 36


1668:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1671:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1672:Generated_Source\PSoC4/CyLib.c ****     {
1673:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1674:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1675:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1678:Generated_Source\PSoC4/CyLib.c ****         {
1679:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1682:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1685:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1690:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1691:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1692:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1693:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1694:Generated_Source\PSoC4/CyLib.c **** 
1695:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1696:Generated_Source\PSoC4/CyLib.c ****             {
1697:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1700:Generated_Source\PSoC4/CyLib.c ****                 {
1701:Generated_Source\PSoC4/CyLib.c **** 
1702:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1703:Generated_Source\PSoC4/CyLib.c ****                     {
1704:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1705:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1706:Generated_Source\PSoC4/CyLib.c ****                         break;
1707:Generated_Source\PSoC4/CyLib.c ****                     }
1708:Generated_Source\PSoC4/CyLib.c **** 
1709:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1710:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1711:Generated_Source\PSoC4/CyLib.c ****                 }
1712:Generated_Source\PSoC4/CyLib.c ****             }
1713:Generated_Source\PSoC4/CyLib.c ****         }
1714:Generated_Source\PSoC4/CyLib.c ****         else
1715:Generated_Source\PSoC4/CyLib.c ****         {
1716:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1717:Generated_Source\PSoC4/CyLib.c ****         }
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1720:Generated_Source\PSoC4/CyLib.c ****     }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1724:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 37


1725:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1726:Generated_Source\PSoC4/CyLib.c ****     *
1727:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1732:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1733:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1739:Generated_Source\PSoC4/CyLib.c ****     {
1740:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1741:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1742:Generated_Source\PSoC4/CyLib.c **** 
1743:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1744:Generated_Source\PSoC4/CyLib.c **** 
1745:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1748:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1749:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1750:Generated_Source\PSoC4/CyLib.c ****         {
1751:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c **** 
1754:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1757:Generated_Source\PSoC4/CyLib.c ****     }
1758:Generated_Source\PSoC4/CyLib.c **** 
1759:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1760:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1761:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1766:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1775:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1776:Generated_Source\PSoC4/CyLib.c ****     {
1777:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1778:Generated_Source\PSoC4/CyLib.c **** 
1779:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1780:Generated_Source\PSoC4/CyLib.c ****         {
1781:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 38


1782:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1783:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1784:Generated_Source\PSoC4/CyLib.c ****         }
1785:Generated_Source\PSoC4/CyLib.c ****     }
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c **** 
1788:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1789:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1790:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1793:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1794:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1795:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1796:Generated_Source\PSoC4/CyLib.c ****     *
1797:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1798:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1803:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1804:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1807:Generated_Source\PSoC4/CyLib.c ****     * divider.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1812:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1813:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1816:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1817:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1820:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1821:Generated_Source\PSoC4/CyLib.c ****     {
1822:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1823:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1824:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1828:Generated_Source\PSoC4/CyLib.c **** 
1829:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1830:Generated_Source\PSoC4/CyLib.c **** 
1831:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1832:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1833:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1834:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1835:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1836:Generated_Source\PSoC4/CyLib.c ****         {
1837:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 39


1839:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1840:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1844:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1847:Generated_Source\PSoC4/CyLib.c **** 
1848:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1849:Generated_Source\PSoC4/CyLib.c ****         }
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1852:Generated_Source\PSoC4/CyLib.c **** 
1853:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1854:Generated_Source\PSoC4/CyLib.c ****     }
1855:Generated_Source\PSoC4/CyLib.c **** 
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1858:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1859:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1864:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1865:Generated_Source\PSoC4/CyLib.c ****     *
1866:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1867:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1868:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1869:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1874:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1875:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1876:Generated_Source\PSoC4/CyLib.c ****     *
1877:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1878:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1879:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1880:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1881:Generated_Source\PSoC4/CyLib.c ****     *
1882:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1883:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1888:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1889:Generated_Source\PSoC4/CyLib.c ****     {
1890:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1891:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1892:Generated_Source\PSoC4/CyLib.c **** 
1893:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 40


1896:Generated_Source\PSoC4/CyLib.c ****         {
1897:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1898:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1899:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1900:Generated_Source\PSoC4/CyLib.c ****         }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1914:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1918:Generated_Source\PSoC4/CyLib.c ****     {
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1920:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1927:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1932:Generated_Source\PSoC4/CyLib.c ****     }
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c **** 
1935:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1937:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1940:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1945:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1946:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1949:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1952:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 41


1953:Generated_Source\PSoC4/CyLib.c ****     {
1954:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1955:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1956:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1959:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1960:Generated_Source\PSoC4/CyLib.c **** 
1961:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1962:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1964:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1965:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1966:Generated_Source\PSoC4/CyLib.c ****             )
1967:Generated_Source\PSoC4/CyLib.c ****         {
1968:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1969:Generated_Source\PSoC4/CyLib.c ****         }
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1972:Generated_Source\PSoC4/CyLib.c ****     }
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1977:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1978:Generated_Source\PSoC4/CyLib.c ****     *
1979:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1980:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1981:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1982:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1985:Generated_Source\PSoC4/CyLib.c ****     *
1986:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1987:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1988:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1993:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1994:Generated_Source\PSoC4/CyLib.c ****     {
1995:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1996:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1999:Generated_Source\PSoC4/CyLib.c **** 
2000:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2001:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2006:Generated_Source\PSoC4/CyLib.c ****     }
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c **** 
2009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 42


2010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2014:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2015:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2018:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2023:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2024:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2029:Generated_Source\PSoC4/CyLib.c ****     *
2030:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2033:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2034:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2039:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2042:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2043:Generated_Source\PSoC4/CyLib.c ****     *
2044:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2045:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2046:Generated_Source\PSoC4/CyLib.c ****     {
2047:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2049:Generated_Source\PSoC4/CyLib.c **** 
2050:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2055:Generated_Source\PSoC4/CyLib.c **** 
2056:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2057:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2058:Generated_Source\PSoC4/CyLib.c **** 
2059:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2060:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2066:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 43


2067:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2068:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2069:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2070:Generated_Source\PSoC4/CyLib.c ****         {
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2073:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2074:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2077:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2078:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2081:Generated_Source\PSoC4/CyLib.c ****             {
2082:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2083:Generated_Source\PSoC4/CyLib.c ****                 {
2084:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2087:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2090:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2093:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2096:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2097:Generated_Source\PSoC4/CyLib.c ****                     {
2098:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2099:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2100:Generated_Source\PSoC4/CyLib.c ****                         break;
2101:Generated_Source\PSoC4/CyLib.c ****                     }
2102:Generated_Source\PSoC4/CyLib.c ****                 }
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2106:Generated_Source\PSoC4/CyLib.c ****                 {
2107:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2108:Generated_Source\PSoC4/CyLib.c ****                     {
2109:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2110:Generated_Source\PSoC4/CyLib.c ****                     }
2111:Generated_Source\PSoC4/CyLib.c ****                 }
2112:Generated_Source\PSoC4/CyLib.c ****             }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         }
2115:Generated_Source\PSoC4/CyLib.c **** 
2116:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2117:Generated_Source\PSoC4/CyLib.c ****     }
2118:Generated_Source\PSoC4/CyLib.c **** 
2119:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2120:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2121:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2122:Generated_Source\PSoC4/CyLib.c ****     *
2123:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 44


2124:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2127:Generated_Source\PSoC4/CyLib.c ****     *
2128:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2129:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2130:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2131:Generated_Source\PSoC4/CyLib.c ****     *
2132:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L 
2135:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2139:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2140:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2141:Generated_Source\PSoC4/CyLib.c ****     *
2142:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2143:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2144:Generated_Source\PSoC4/CyLib.c ****     {
2145:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2146:Generated_Source\PSoC4/CyLib.c ****         
2147:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2148:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2149:Generated_Source\PSoC4/CyLib.c ****         #else
2150:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2151:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2156:Generated_Source\PSoC4/CyLib.c ****         {
2157:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****             #else
2162:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2163:Generated_Source\PSoC4/CyLib.c ****                 
2164:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2165:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2166:Generated_Source\PSoC4/CyLib.c ****                 
2167:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2168:Generated_Source\PSoC4/CyLib.c ****                 {
2169:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2170:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2171:Generated_Source\PSoC4/CyLib.c ****                 }
2172:Generated_Source\PSoC4/CyLib.c ****                 
2173:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2174:Generated_Source\PSoC4/CyLib.c **** 
2175:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2176:Generated_Source\PSoC4/CyLib.c ****         }
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2179:Generated_Source\PSoC4/CyLib.c ****     }
2180:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 45


2181:Generated_Source\PSoC4/CyLib.c ****     
2182:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2183:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2184:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2189:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2192:Generated_Source\PSoC4/CyLib.c ****     *
2193:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2194:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2195:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2196:Generated_Source\PSoC4/CyLib.c ****     *
2197:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2200:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2201:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2202:Generated_Source\PSoC4/CyLib.c ****     *
2203:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2204:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2205:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2206:Generated_Source\PSoC4/CyLib.c ****     *
2207:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2209:Generated_Source\PSoC4/CyLib.c ****     {
2210:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2211:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2212:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2213:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2214:Generated_Source\PSoC4/CyLib.c **** 
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2221:Generated_Source\PSoC4/CyLib.c ****         {
2222:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2223:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2226:Generated_Source\PSoC4/CyLib.c **** 
2227:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2228:Generated_Source\PSoC4/CyLib.c ****         }
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c ****     
2235:Generated_Source\PSoC4/CyLib.c ****     
2236:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2237:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 46


2238:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2239:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****         *
2241:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt 
2242:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of 
2243:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2244:Generated_Source\PSoC4/CyLib.c ****         *
2245:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****         *
2247:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2248:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2249:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2250:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2251:Generated_Source\PSoC4/CyLib.c ****         *
2252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2254:Generated_Source\PSoC4/CyLib.c ****         {
2255:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2256:Generated_Source\PSoC4/CyLib.c ****         }
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         
2259:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2260:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2261:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2262:Generated_Source\PSoC4/CyLib.c ****         *
2263:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2264:Generated_Source\PSoC4/CyLib.c ****         *
2265:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2266:Generated_Source\PSoC4/CyLib.c ****         *
2267:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2268:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2269:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2270:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2271:Generated_Source\PSoC4/CyLib.c ****         *
2272:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2273:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2274:Generated_Source\PSoC4/CyLib.c ****         {
2275:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2276:Generated_Source\PSoC4/CyLib.c ****         }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2281:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c ****         *
2283:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt. 
2284:Generated_Source\PSoC4/CyLib.c ****         *
2285:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2286:Generated_Source\PSoC4/CyLib.c ****         *
2287:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2288:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2289:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2290:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2291:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2292:Generated_Source\PSoC4/CyLib.c ****         *
2293:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2294:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 47


2295:Generated_Source\PSoC4/CyLib.c ****         {
2296:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2297:Generated_Source\PSoC4/CyLib.c ****         }
2298:Generated_Source\PSoC4/CyLib.c ****         
2299:Generated_Source\PSoC4/CyLib.c ****         
2300:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2301:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2302:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLib.c ****         *
2304:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2307:Generated_Source\PSoC4/CyLib.c ****         *
2308:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2309:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2310:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2311:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2312:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2313:Generated_Source\PSoC4/CyLib.c ****         *
2314:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2315:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2316:Generated_Source\PSoC4/CyLib.c ****         {
2317:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2318:Generated_Source\PSoC4/CyLib.c ****         }
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****         
2321:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2323:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c ****         *
2325:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2326:Generated_Source\PSoC4/CyLib.c ****         *
2327:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2328:Generated_Source\PSoC4/CyLib.c ****         *
2329:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2330:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2331:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2332:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2333:Generated_Source\PSoC4/CyLib.c ****         *
2334:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2335:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2336:Generated_Source\PSoC4/CyLib.c ****         {
2337:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2338:Generated_Source\PSoC4/CyLib.c ****         }
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****         
2341:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2342:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2343:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2344:Generated_Source\PSoC4/CyLib.c ****         *
2345:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2348:Generated_Source\PSoC4/CyLib.c ****         *
2349:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2350:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2351:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 48


2352:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2353:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2354:Generated_Source\PSoC4/CyLib.c ****         *
2355:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2356:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2357:Generated_Source\PSoC4/CyLib.c ****         {
2358:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2359:Generated_Source\PSoC4/CyLib.c ****         }
2360:Generated_Source\PSoC4/CyLib.c **** 
2361:Generated_Source\PSoC4/CyLib.c ****         
2362:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2363:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2364:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2365:Generated_Source\PSoC4/CyLib.c ****         *
2366:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2369:Generated_Source\PSoC4/CyLib.c ****         *
2370:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/          
2371:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2372:Generated_Source\PSoC4/CyLib.c ****         {
2373:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2374:Generated_Source\PSoC4/CyLib.c ****         }
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c ****         
2377:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2378:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2379:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2384:Generated_Source\PSoC4/CyLib.c ****         *
2385:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2386:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2387:Generated_Source\PSoC4/CyLib.c ****         {
2388:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2389:Generated_Source\PSoC4/CyLib.c ****         }
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****         
2392:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2394:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2395:Generated_Source\PSoC4/CyLib.c ****         *
2396:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2397:Generated_Source\PSoC4/CyLib.c ****         *
2398:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2399:Generated_Source\PSoC4/CyLib.c ****         *
2400:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2401:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable 
2402:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2403:Generated_Source\PSoC4/CyLib.c ****         *
2404:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2405:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2406:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2407:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2408:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 49


2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2413:Generated_Source\PSoC4/CyLib.c ****             
2414:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2415:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2416:Generated_Source\PSoC4/CyLib.c ****             
2417:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2418:Generated_Source\PSoC4/CyLib.c ****         }
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****         
2421:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2422:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2423:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2424:Generated_Source\PSoC4/CyLib.c ****         *
2425:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2426:Generated_Source\PSoC4/CyLib.c ****         *
2427:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2428:Generated_Source\PSoC4/CyLib.c ****         *
2429:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2430:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles, 
2431:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored 
2432:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2433:Generated_Source\PSoC4/CyLib.c ****         *
2434:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2435:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time) 
2436:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event 
2437:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all 
2438:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2439:Generated_Source\PSoC4/CyLib.c ****         *
2440:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/ 
2441:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2442:Generated_Source\PSoC4/CyLib.c ****         {
2443:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2444:Generated_Source\PSoC4/CyLib.c ****             
2445:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2446:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2447:Generated_Source\PSoC4/CyLib.c ****             
2448:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2449:Generated_Source\PSoC4/CyLib.c ****         }
2450:Generated_Source\PSoC4/CyLib.c **** 
2451:Generated_Source\PSoC4/CyLib.c ****         
2452:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2453:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2454:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2455:Generated_Source\PSoC4/CyLib.c ****         *
2456:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2459:Generated_Source\PSoC4/CyLib.c ****         *
2460:Generated_Source\PSoC4/CyLib.c ****         * \return 
2461:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2462:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2463:Generated_Source\PSoC4/CyLib.c ****         *
2464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2465:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 50


2466:Generated_Source\PSoC4/CyLib.c ****         {
2467:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2468:Generated_Source\PSoC4/CyLib.c ****         }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****         
2471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c ****         *
2475:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2476:Generated_Source\PSoC4/CyLib.c ****         *
2477:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2480:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored 
2481:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2482:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with 
2483:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2484:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2485:Generated_Source\PSoC4/CyLib.c ****         *
2486:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2487:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2488:Generated_Source\PSoC4/CyLib.c ****         {
2489:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2490:Generated_Source\PSoC4/CyLib.c ****         }
2491:Generated_Source\PSoC4/CyLib.c **** 
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2496:Generated_Source\PSoC4/CyLib.c ****         *
2497:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2498:Generated_Source\PSoC4/CyLib.c ****         *
2499:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2500:Generated_Source\PSoC4/CyLib.c ****         *
2501:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2502:Generated_Source\PSoC4/CyLib.c ****         *
2503:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2504:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2505:Generated_Source\PSoC4/CyLib.c ****         {
2506:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2507:Generated_Source\PSoC4/CyLib.c ****         }
2508:Generated_Source\PSoC4/CyLib.c **** 
2509:Generated_Source\PSoC4/CyLib.c ****         
2510:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2511:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2512:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches 
2515:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count 
2516:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down. 
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless 
2519:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using 
2520:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2521:Generated_Source\PSoC4/CyLib.c ****         *
2522:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 51


2523:Generated_Source\PSoC4/CyLib.c ****         *
2524:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2525:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay 
2526:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using 
2527:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2530:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2531:Generated_Source\PSoC4/CyLib.c ****         {
2532:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2533:Generated_Source\PSoC4/CyLib.c ****         }
2534:Generated_Source\PSoC4/CyLib.c ****         
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2537:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2538:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor 
2541:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO. 
2542:Generated_Source\PSoC4/CyLib.c ****         *
2543:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2544:Generated_Source\PSoC4/CyLib.c ****         *
2545:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2546:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2547:Generated_Source\PSoC4/CyLib.c ****         {
2548:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2549:Generated_Source\PSoC4/CyLib.c ****         }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****         
2552:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2554:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c ****         *
2556:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value. 
2557:Generated_Source\PSoC4/CyLib.c ****         *
2558:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2559:Generated_Source\PSoC4/CyLib.c ****         *
2560:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2561:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256. 
2562:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2563:Generated_Source\PSoC4/CyLib.c ****         *
2564:Generated_Source\PSoC4/CyLib.c ****         *
2565:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2566:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2567:Generated_Source\PSoC4/CyLib.c ****         {
2568:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2569:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2570:Generated_Source\PSoC4/CyLib.c ****         }
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2573:Generated_Source\PSoC4/CyLib.c ****     
2574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 52


2580:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2581:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2582:Generated_Source\PSoC4/CyLib.c ****     *
2583:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2584:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2585:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2586:Generated_Source\PSoC4/CyLib.c ****     *
2587:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2588:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2589:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2590:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2591:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2592:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2593:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2594:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2595:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2596:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2597:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2598:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2599:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2600:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2601:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2602:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2603:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2604:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2605:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2606:Generated_Source\PSoC4/CyLib.c ****     *
2607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2609:Generated_Source\PSoC4/CyLib.c ****     {
2610:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2611:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2614:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2615:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2616:Generated_Source\PSoC4/CyLib.c **** 
2617:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2618:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2619:Generated_Source\PSoC4/CyLib.c **** 
2620:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2621:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2624:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2627:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2628:Generated_Source\PSoC4/CyLib.c ****     }
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2632:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2633:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2634:Generated_Source\PSoC4/CyLib.c ****     *
2635:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2636:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 53


2637:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2638:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2639:Generated_Source\PSoC4/CyLib.c ****     {
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2647:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2648:Generated_Source\PSoC4/CyLib.c ****     *
2649:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2650:Generated_Source\PSoC4/CyLib.c ****     *
2651:Generated_Source\PSoC4/CyLib.c ****     * \return
2652:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2657:Generated_Source\PSoC4/CyLib.c ****     {
2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2659:Generated_Source\PSoC4/CyLib.c ****     }
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2663:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2664:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2665:Generated_Source\PSoC4/CyLib.c ****     *
2666:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     * \return
2669:Generated_Source\PSoC4/CyLib.c ****     *  None
2670:Generated_Source\PSoC4/CyLib.c ****     *
2671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2672:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2673:Generated_Source\PSoC4/CyLib.c ****     {
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2675:Generated_Source\PSoC4/CyLib.c ****     }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2685:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2686:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2687:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2690:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2691:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2692:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2693:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 54


2694:Generated_Source\PSoC4/CyLib.c **** * \return
2695:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2699:Generated_Source\PSoC4/CyLib.c **** {
 325              		.loc 1 2699 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL20:
 331 0000 0200     		movs	r2, r0
2700:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 332              		.loc 1 2702 0
 333 0002 1920     		movs	r0, #25
 334              	.LVL21:
 335 0004 0240     		ands	r2, r0
 336              	.LVL22:
2703:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 337              		.loc 1 2703 0
 338 0006 0249     		ldr	r1, .L25
 339 0008 0B68     		ldr	r3, [r1]
 340 000a 1840     		ands	r0, r3
 341              	.LVL23:
2704:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 342              		.loc 1 2705 0
 343 000c 0A60     		str	r2, [r1]
2706:Generated_Source\PSoC4/CyLib.c **** 
2707:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2708:Generated_Source\PSoC4/CyLib.c **** }
 344              		.loc 1 2708 0
 345              		@ sp needed
 346 000e 7047     		bx	lr
 347              	.L26:
 348              		.align	2
 349              	.L25:
 350 0010 54000340 		.word	1073938516
 351              		.cfi_endproc
 352              	.LFE8:
 353              		.size	CySysGetResetReason, .-CySysGetResetReason
 354              		.section	.text.CyDisableInts,"ax",%progbits
 355              		.align	2
 356              		.global	CyDisableInts
 357              		.code	16
 358              		.thumb_func
 359              		.type	CyDisableInts, %function
 360              	CyDisableInts:
 361              	.LFB9:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 55


2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \return
2718:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 362              		.loc 1 2722 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2726:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 367              		.loc 1 2726 0
 368 0000 024B     		ldr	r3, .L28
 369 0002 1868     		ldr	r0, [r3]
 370              	.LVL24:
2727:Generated_Source\PSoC4/CyLib.c **** 
2728:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2729:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 371              		.loc 1 2729 0
 372 0004 0122     		movs	r2, #1
 373 0006 5242     		rsbs	r2, r2, #0
 374 0008 1A60     		str	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2732:Generated_Source\PSoC4/CyLib.c **** }
 375              		.loc 1 2732 0
 376              		@ sp needed
 377 000a 7047     		bx	lr
 378              	.L29:
 379              		.align	2
 380              	.L28:
 381 000c 80E100E0 		.word	-536813184
 382              		.cfi_endproc
 383              	.LFE9:
 384              		.size	CyDisableInts, .-CyDisableInts
 385              		.section	.text.CyEnableInts,"ax",%progbits
 386              		.align	2
 387              		.global	CyEnableInts
 388              		.code	16
 389              		.thumb_func
 390              		.type	CyEnableInts, %function
 391              	CyEnableInts:
 392              	.LFB10:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 56


2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2745:Generated_Source\PSoC4/CyLib.c **** {
 393              		.loc 1 2745 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398              	.LVL25:
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 399              		.loc 1 2746 0
 400 0000 014B     		ldr	r3, .L31
 401 0002 1860     		str	r0, [r3]
2747:Generated_Source\PSoC4/CyLib.c **** }
 402              		.loc 1 2747 0
 403              		@ sp needed
 404 0004 7047     		bx	lr
 405              	.L32:
 406 0006 C046     		.align	2
 407              	.L31:
 408 0008 00E100E0 		.word	-536813312
 409              		.cfi_endproc
 410              	.LFE10:
 411              		.size	CyEnableInts, .-CyEnableInts
 412              		.section	.text.CyIntEnable,"ax",%progbits
 413              		.align	2
 414              		.global	CyIntEnable
 415              		.code	16
 416              		.thumb_func
 417              		.type	CyIntEnable, %function
 418              	CyIntEnable:
 419              	.LFB17:
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2751:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2752:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2753:Generated_Source\PSoC4/CyLib.c **** *
2754:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2755:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2756:Generated_Source\PSoC4/CyLib.c **** *
2757:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2758:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2759:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2760:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2761:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2762:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 57


2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2772:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2777:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2780:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2783:Generated_Source\PSoC4/CyLib.c **** }
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c **** 
2786:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2787:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2788:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLib.c **** *
2790:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2791:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2794:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2796:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2797:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2798:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2799:Generated_Source\PSoC4/CyLib.c **** *
2800:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2804:Generated_Source\PSoC4/CyLib.c **** {
2805:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2810:Generated_Source\PSoC4/CyLib.c **** }
2811:Generated_Source\PSoC4/CyLib.c **** 
2812:Generated_Source\PSoC4/CyLib.c **** 
2813:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2814:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2815:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2818:Generated_Source\PSoC4/CyLib.c **** *
2819:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2820:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2825:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2826:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 58


2827:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2828:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2833:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2834:Generated_Source\PSoC4/CyLib.c **** 
2835:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2836:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2837:Generated_Source\PSoC4/CyLib.c **** 
2838:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2853:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2854:Generated_Source\PSoC4/CyLib.c **** {
2855:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2858:Generated_Source\PSoC4/CyLib.c **** 
2859:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2860:Generated_Source\PSoC4/CyLib.c **** }
2861:Generated_Source\PSoC4/CyLib.c **** 
2862:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2863:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2864:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2869:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2872:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2873:Generated_Source\PSoC4/CyLib.c **** {
2874:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2875:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2876:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2877:Generated_Source\PSoC4/CyLib.c **** 
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2879:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 59


2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2886:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2887:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2888:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2891:Generated_Source\PSoC4/CyLib.c **** }
2892:Generated_Source\PSoC4/CyLib.c **** 
2893:Generated_Source\PSoC4/CyLib.c **** 
2894:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2895:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2896:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * \return
2903:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2907:Generated_Source\PSoC4/CyLib.c **** {
2908:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2909:Generated_Source\PSoC4/CyLib.c **** 
2910:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2913:Generated_Source\PSoC4/CyLib.c **** 
2914:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2915:Generated_Source\PSoC4/CyLib.c **** }
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2919:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2920:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2923:Generated_Source\PSoC4/CyLib.c **** *
2924:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2925:Generated_Source\PSoC4/CyLib.c **** *
2926:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2927:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2928:Generated_Source\PSoC4/CyLib.c **** {
 420              		.loc 1 2928 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL26:
2929:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 426              		.loc 1 2929 0
 427 0000 1F23     		movs	r3, #31
 428 0002 1840     		ands	r0, r3
 429              	.LVL27:
 430 0004 1E3B     		subs	r3, r3, #30
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 60


 431 0006 8340     		lsls	r3, r3, r0
 432 0008 014A     		ldr	r2, .L34
 433 000a 1360     		str	r3, [r2]
2930:Generated_Source\PSoC4/CyLib.c **** }
 434              		.loc 1 2930 0
 435              		@ sp needed
 436 000c 7047     		bx	lr
 437              	.L35:
 438 000e C046     		.align	2
 439              	.L34:
 440 0010 00E100E0 		.word	-536813312
 441              		.cfi_endproc
 442              	.LFE17:
 443              		.size	CyIntEnable, .-CyIntEnable
 444              		.section	.text.CyIntGetState,"ax",%progbits
 445              		.align	2
 446              		.global	CyIntGetState
 447              		.code	16
 448              		.thumb_func
 449              		.type	CyIntGetState, %function
 450              	CyIntGetState:
 451              	.LFB18:
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2938:Generated_Source\PSoC4/CyLib.c **** *
2939:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** * \return
2942:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2945:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2946:Generated_Source\PSoC4/CyLib.c **** {
 452              		.loc 1 2946 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL28:
2947:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2948:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 458              		.loc 1 2948 0
 459 0000 044B     		ldr	r3, .L37
 460 0002 1B68     		ldr	r3, [r3]
 461 0004 1F22     		movs	r2, #31
 462 0006 1040     		ands	r0, r2
 463              	.LVL29:
 464 0008 C340     		lsrs	r3, r3, r0
 465 000a 1800     		movs	r0, r3
 466 000c 0123     		movs	r3, #1
 467 000e 1840     		ands	r0, r3
2949:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 61


 468              		.loc 1 2949 0
 469              		@ sp needed
 470 0010 7047     		bx	lr
 471              	.L38:
 472 0012 C046     		.align	2
 473              	.L37:
 474 0014 00E100E0 		.word	-536813312
 475              		.cfi_endproc
 476              	.LFE18:
 477              		.size	CyIntGetState, .-CyIntGetState
 478              		.section	.text.CyIntDisable,"ax",%progbits
 479              		.align	2
 480              		.global	CyIntDisable
 481              		.code	16
 482              		.thumb_func
 483              		.type	CyIntDisable, %function
 484              	CyIntDisable:
 485              	.LFB19:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c **** 
2952:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2954:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2962:Generated_Source\PSoC4/CyLib.c **** {
 486              		.loc 1 2962 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL30:
2963:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 492              		.loc 1 2963 0
 493 0000 1F23     		movs	r3, #31
 494 0002 1840     		ands	r0, r3
 495              	.LVL31:
 496 0004 1E3B     		subs	r3, r3, #30
 497 0006 8340     		lsls	r3, r3, r0
 498 0008 014A     		ldr	r2, .L40
 499 000a 1360     		str	r3, [r2]
2964:Generated_Source\PSoC4/CyLib.c **** }
 500              		.loc 1 2964 0
 501              		@ sp needed
 502 000c 7047     		bx	lr
 503              	.L41:
 504 000e C046     		.align	2
 505              	.L40:
 506 0010 80E100E0 		.word	-536813184
 507              		.cfi_endproc
 508              	.LFE19:
 509              		.size	CyIntDisable, .-CyIntDisable
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 62


 510              		.section	.text.CyIntSetPending,"ax",%progbits
 511              		.align	2
 512              		.global	CyIntSetPending
 513              		.code	16
 514              		.thumb_func
 515              		.type	CyIntSetPending, %function
 516              	CyIntSetPending:
 517              	.LFB20:
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2967:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2968:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2969:Generated_Source\PSoC4/CyLib.c **** *
2970:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2973:Generated_Source\PSoC4/CyLib.c **** *
2974:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2975:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2976:Generated_Source\PSoC4/CyLib.c **** {
 518              		.loc 1 2976 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL32:
2977:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 524              		.loc 1 2977 0
 525 0000 1F23     		movs	r3, #31
 526 0002 1840     		ands	r0, r3
 527              	.LVL33:
 528 0004 1E3B     		subs	r3, r3, #30
 529 0006 8340     		lsls	r3, r3, r0
 530 0008 014A     		ldr	r2, .L43
 531 000a 1360     		str	r3, [r2]
2978:Generated_Source\PSoC4/CyLib.c **** }
 532              		.loc 1 2978 0
 533              		@ sp needed
 534 000c 7047     		bx	lr
 535              	.L44:
 536 000e C046     		.align	2
 537              	.L43:
 538 0010 00E200E0 		.word	-536813056
 539              		.cfi_endproc
 540              	.LFE20:
 541              		.size	CyIntSetPending, .-CyIntSetPending
 542              		.section	.text.CyIntClearPending,"ax",%progbits
 543              		.align	2
 544              		.global	CyIntClearPending
 545              		.code	16
 546              		.thumb_func
 547              		.type	CyIntClearPending, %function
 548              	CyIntClearPending:
 549              	.LFB21:
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 63


2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2986:Generated_Source\PSoC4/CyLib.c **** *
2987:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2988:Generated_Source\PSoC4/CyLib.c **** *
2989:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2991:Generated_Source\PSoC4/CyLib.c **** {
 550              		.loc 1 2991 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL34:
2992:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 556              		.loc 1 2992 0
 557 0000 1F23     		movs	r3, #31
 558 0002 1840     		ands	r0, r3
 559              	.LVL35:
 560 0004 1E3B     		subs	r3, r3, #30
 561 0006 8340     		lsls	r3, r3, r0
 562 0008 014A     		ldr	r2, .L46
 563 000a 1360     		str	r3, [r2]
2993:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2993 0
 565              		@ sp needed
 566 000c 7047     		bx	lr
 567              	.L47:
 568 000e C046     		.align	2
 569              	.L46:
 570 0010 80E200E0 		.word	-536812928
 571              		.cfi_endproc
 572              	.LFE21:
 573              		.size	CyIntClearPending, .-CyIntClearPending
 574              		.section	.text.CyHalt,"ax",%progbits
 575              		.align	2
 576              		.global	CyHalt
 577              		.code	16
 578              		.thumb_func
 579              		.type	CyHalt, %function
 580              	CyHalt:
 581              	.LFB22:
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** 
2996:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2997:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2998:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2999:Generated_Source\PSoC4/CyLib.c **** *
3000:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3003:Generated_Source\PSoC4/CyLib.c **** *
3004:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3005:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3006:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 64


 582              		.loc 1 3006 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL36:
3007:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3008:Generated_Source\PSoC4/CyLib.c ****     {
3009:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3010:Generated_Source\PSoC4/CyLib.c ****     }
3011:Generated_Source\PSoC4/CyLib.c **** 
3012:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3013:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3014:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3015:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 588              		.loc 1 3015 0
 589              		.syntax divided
 590              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 591 0000 01BE     		    bkpt    1
 592              	@ 0 "" 2
3016:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3017:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3018:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3019:Generated_Source\PSoC4/CyLib.c **** }
 593              		.loc 1 3019 0
 594              		.thumb
 595              		.syntax unified
 596              		@ sp needed
 597 0002 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE22:
 600              		.size	CyHalt, .-CyHalt
 601              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 602              		.align	2
 603              		.global	CySysClkWriteImoFreq
 604              		.code	16
 605              		.thumb_func
 606              		.type	CySysClkWriteImoFreq, %function
 607              	CySysClkWriteImoFreq:
 608              	.LFB6:
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 609              		.loc 1 954 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL37:
 614 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 615              		.cfi_def_cfa_offset 24
 616              		.cfi_offset 3, -24
 617              		.cfi_offset 4, -20
 618              		.cfi_offset 5, -16
 619              		.cfi_offset 6, -12
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 0400     		movs	r4, r0
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 623              		.loc 1 967 0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 65


 624 0004 1828     		cmp	r0, #24
 625 0006 03D0     		beq	.L50
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 626              		.loc 1 967 0 is_stmt 0 discriminator 1
 627 0008 2028     		cmp	r0, #32
 628 000a 01D0     		beq	.L50
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 629              		.loc 1 967 0 discriminator 2
 630 000c 3028     		cmp	r0, #48
 631 000e 3CD1     		bne	.L51
 632              	.L50:
 976:Generated_Source\PSoC4/CyLib.c **** 
 633              		.loc 1 976 0 is_stmt 1
 634 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 635              	.LVL38:
 636 0014 0500     		movs	r5, r0
 637              	.LVL39:
1007:Generated_Source\PSoC4/CyLib.c **** 
 638              		.loc 1 1007 0
 639 0016 1F4A     		ldr	r2, .L54
 640 0018 1368     		ldr	r3, [r2]
 641 001a 0721     		movs	r1, #7
 642 001c 8B43     		bics	r3, r1
 643 001e 1360     		str	r3, [r2]
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 644              		.loc 1 1025 0
 645 0020 1D4B     		ldr	r3, .L54+4
 646 0022 E318     		adds	r3, r4, r3
 647 0024 1B78     		ldrb	r3, [r3]
 648 0026 DBB2     		uxtb	r3, r3
 649              	.LVL40:
1027:Generated_Source\PSoC4/CyLib.c **** 
 650              		.loc 1 1027 0
 651 0028 1C4A     		ldr	r2, .L54+8
 652 002a 1360     		str	r3, [r2]
1030:Generated_Source\PSoC4/CyLib.c **** 
 653              		.loc 1 1030 0
 654 002c 1C4A     		ldr	r2, .L54+12
 655 002e 1368     		ldr	r3, [r2]
 656              	.LVL41:
 657 0030 8B43     		bics	r3, r1
 658 0032 1360     		str	r3, [r2]
 659              	.LVL42:
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 660              		.loc 1 1033 0
 661 0034 1B48     		ldr	r0, .L54+16
 662 0036 0368     		ldr	r3, [r0]
 663 0038 7F22     		movs	r2, #127
 664 003a 9343     		bics	r3, r2
 665 003c 1900     		movs	r1, r3
1034:Generated_Source\PSoC4/CyLib.c **** 
 666              		.loc 1 1034 0
 667 003e 1A4B     		ldr	r3, .L54+20
 668 0040 E318     		adds	r3, r4, r3
 669 0042 1B78     		ldrb	r3, [r3]
 670 0044 1340     		ands	r3, r2
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 66


 671              		.loc 1 1033 0
 672 0046 0B43     		orrs	r3, r1
 673 0048 0360     		str	r3, [r0]
1036:Generated_Source\PSoC4/CyLib.c **** 
 674              		.loc 1 1036 0
 675 004a 3220     		movs	r0, #50
 676 004c FFF7FEFF 		bl	CyDelayCycles
 677              	.LVL43:
1038:Generated_Source\PSoC4/CyLib.c ****             {
 678              		.loc 1 1038 0
 679 0050 182C     		cmp	r4, #24
 680 0052 16D9     		bls	.L52
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 681              		.loc 1 1041 0
 682 0054 0F4E     		ldr	r6, .L54
 683 0056 3368     		ldr	r3, [r6]
 684 0058 0727     		movs	r7, #7
 685 005a BB43     		bics	r3, r7
 686 005c 1A00     		movs	r2, r3
1042:Generated_Source\PSoC4/CyLib.c **** 
 687              		.loc 1 1042 0
 688 005e 2300     		movs	r3, r4
 689 0060 1C3B     		subs	r3, r3, #28
 690 0062 9B08     		lsrs	r3, r3, #2
 691 0064 3B40     		ands	r3, r7
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 692              		.loc 1 1041 0
 693 0066 1343     		orrs	r3, r2
 694 0068 3360     		str	r3, [r6]
1044:Generated_Source\PSoC4/CyLib.c **** 
 695              		.loc 1 1044 0
 696 006a 3220     		movs	r0, #50
 697 006c FFF7FEFF 		bl	CyDelayCycles
 698              	.LVL44:
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 699              		.loc 1 1048 0
 700 0070 3268     		ldr	r2, [r6]
 701 0072 BA43     		bics	r2, r7
1049:Generated_Source\PSoC4/CyLib.c ****             }
 702              		.loc 1 1049 0
 703 0074 2300     		movs	r3, r4
 704 0076 183B     		subs	r3, r3, #24
 705 0078 9B08     		lsrs	r3, r3, #2
 706 007a 3C00     		movs	r4, r7
 707              	.LVL45:
 708 007c 1C40     		ands	r4, r3
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 709              		.loc 1 1048 0
 710 007e 1443     		orrs	r4, r2
 711 0080 3460     		str	r4, [r6]
 712              	.L52:
1067:Generated_Source\PSoC4/CyLib.c ****         }
 713              		.loc 1 1067 0
 714 0082 2800     		movs	r0, r5
 715 0084 FFF7FEFF 		bl	CyExitCriticalSection
 716              	.LVL46:
 717 0088 02E0     		b	.L49
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 67


 718              	.LVL47:
 719              	.L51:
1072:Generated_Source\PSoC4/CyLib.c ****         }
 720              		.loc 1 1072 0 discriminator 1
 721 008a 0020     		movs	r0, #0
 722              	.LVL48:
 723 008c FFF7FEFF 		bl	CyHalt
 724              	.LVL49:
 725              	.L49:
1074:Generated_Source\PSoC4/CyLib.c **** 
 726              		.loc 1 1074 0
 727              		@ sp needed
 728 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 729              	.L55:
 730 0092 C046     		.align	2
 731              	.L54:
 732 0094 080F0340 		.word	1073942280
 733 0098 CDF1FF0F 		.word	268431821
 734 009c 0C0F0340 		.word	1073942284
 735 00a0 100F0340 		.word	1073942288
 736 00a4 180F0340 		.word	1073942296
 737 00a8 B4F1FF0F 		.word	268431796
 738              		.cfi_endproc
 739              	.LFE6:
 740              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 741              		.section	.text.CyIntSetSysVector,"ax",%progbits
 742              		.align	2
 743              		.global	CyIntSetSysVector
 744              		.code	16
 745              		.thumb_func
 746              		.type	CyIntSetSysVector, %function
 747              	CyIntSetSysVector:
 748              	.LFB11:
2770:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 749              		.loc 1 2770 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL50:
 754 0000 70B5     		push	{r4, r5, r6, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 4, -16
 757              		.cfi_offset 5, -12
 758              		.cfi_offset 6, -8
 759              		.cfi_offset 14, -4
 760 0002 0400     		movs	r4, r0
 761 0004 0D00     		movs	r5, r1
 762              	.LVL51:
2774:Generated_Source\PSoC4/CyLib.c **** 
 763              		.loc 1 2774 0
 764 0006 0F28     		cmp	r0, #15
 765 0008 02D9     		bls	.L57
2774:Generated_Source\PSoC4/CyLib.c **** 
 766              		.loc 1 2774 0 is_stmt 0 discriminator 1
 767 000a 0020     		movs	r0, #0
 768              	.LVL52:
 769 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 68


 770              	.LVL53:
 771              	.L57:
2777:Generated_Source\PSoC4/CyLib.c **** 
 772              		.loc 1 2777 0 is_stmt 1
 773 0010 A400     		lsls	r4, r4, #2
 774 0012 8023     		movs	r3, #128
 775 0014 9B05     		lsls	r3, r3, #22
 776 0016 9C46     		mov	ip, r3
 777 0018 6444     		add	r4, r4, ip
 778 001a 2068     		ldr	r0, [r4]
 779              	.LVL54:
2780:Generated_Source\PSoC4/CyLib.c **** 
 780              		.loc 1 2780 0
 781 001c 2560     		str	r5, [r4]
2783:Generated_Source\PSoC4/CyLib.c **** 
 782              		.loc 1 2783 0
 783              		@ sp needed
 784              	.LVL55:
 785 001e 70BD     		pop	{r4, r5, r6, pc}
 786              		.cfi_endproc
 787              	.LFE11:
 788              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 789              		.section	.text.CyIntGetSysVector,"ax",%progbits
 790              		.align	2
 791              		.global	CyIntGetSysVector
 792              		.code	16
 793              		.thumb_func
 794              		.type	CyIntGetSysVector, %function
 795              	CyIntGetSysVector:
 796              	.LFB12:
2804:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 797              		.loc 1 2804 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              	.LVL56:
 802 0000 10B5     		push	{r4, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 4, -8
 805              		.cfi_offset 14, -4
 806 0002 0400     		movs	r4, r0
 807              	.LVL57:
2807:Generated_Source\PSoC4/CyLib.c **** 
 808              		.loc 1 2807 0
 809 0004 0F28     		cmp	r0, #15
 810 0006 02D9     		bls	.L59
2807:Generated_Source\PSoC4/CyLib.c **** 
 811              		.loc 1 2807 0 is_stmt 0 discriminator 1
 812 0008 0020     		movs	r0, #0
 813              	.LVL58:
 814 000a FFF7FEFF 		bl	CyHalt
 815              	.LVL59:
 816              	.L59:
2809:Generated_Source\PSoC4/CyLib.c **** }
 817              		.loc 1 2809 0 is_stmt 1
 818 000e A400     		lsls	r4, r4, #2
 819 0010 8023     		movs	r3, #128
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 69


 820 0012 9B05     		lsls	r3, r3, #22
 821 0014 9C46     		mov	ip, r3
 822 0016 6444     		add	r4, r4, ip
 823 0018 2068     		ldr	r0, [r4]
2810:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2810 0
 825              		@ sp needed
 826 001a 10BD     		pop	{r4, pc}
 827              		.cfi_endproc
 828              	.LFE12:
 829              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 830              		.section	.text.CyIntSetVector,"ax",%progbits
 831              		.align	2
 832              		.global	CyIntSetVector
 833              		.code	16
 834              		.thumb_func
 835              		.type	CyIntSetVector, %function
 836              	CyIntSetVector:
 837              	.LFB13:
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 838              		.loc 1 2826 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              	.LVL60:
 843 0000 70B5     		push	{r4, r5, r6, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0002 0400     		movs	r4, r0
 850 0004 0D00     		movs	r5, r1
 851              	.LVL61:
2830:Generated_Source\PSoC4/CyLib.c **** 
 852              		.loc 1 2830 0
 853 0006 0828     		cmp	r0, #8
 854 0008 02D9     		bls	.L61
2830:Generated_Source\PSoC4/CyLib.c **** 
 855              		.loc 1 2830 0 is_stmt 0 discriminator 1
 856 000a 0020     		movs	r0, #0
 857              	.LVL62:
 858 000c FFF7FEFF 		bl	CyHalt
 859              	.LVL63:
 860              	.L61:
2833:Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2833 0 is_stmt 1
 862 0010 1034     		adds	r4, r4, #16
 863 0012 A400     		lsls	r4, r4, #2
 864 0014 8023     		movs	r3, #128
 865 0016 9B05     		lsls	r3, r3, #22
 866 0018 9C46     		mov	ip, r3
 867 001a 6444     		add	r4, r4, ip
 868 001c 2068     		ldr	r0, [r4]
 869              	.LVL64:
2836:Generated_Source\PSoC4/CyLib.c **** 
 870              		.loc 1 2836 0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 70


 871 001e 2560     		str	r5, [r4]
2839:Generated_Source\PSoC4/CyLib.c **** 
 872              		.loc 1 2839 0
 873              		@ sp needed
 874              	.LVL65:
 875 0020 70BD     		pop	{r4, r5, r6, pc}
 876              		.cfi_endproc
 877              	.LFE13:
 878              		.size	CyIntSetVector, .-CyIntSetVector
 879 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 880              		.align	2
 881              		.global	CyIntGetVector
 882              		.code	16
 883              		.thumb_func
 884              		.type	CyIntGetVector, %function
 885              	CyIntGetVector:
 886              	.LFB14:
2854:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 887              		.loc 1 2854 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              	.LVL66:
 892 0000 10B5     		push	{r4, lr}
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 0400     		movs	r4, r0
 897              	.LVL67:
2857:Generated_Source\PSoC4/CyLib.c **** 
 898              		.loc 1 2857 0
 899 0004 0828     		cmp	r0, #8
 900 0006 02D9     		bls	.L63
2857:Generated_Source\PSoC4/CyLib.c **** 
 901              		.loc 1 2857 0 is_stmt 0 discriminator 1
 902 0008 0020     		movs	r0, #0
 903              	.LVL68:
 904 000a FFF7FEFF 		bl	CyHalt
 905              	.LVL69:
 906              	.L63:
2859:Generated_Source\PSoC4/CyLib.c **** }
 907              		.loc 1 2859 0 is_stmt 1
 908 000e 1034     		adds	r4, r4, #16
 909 0010 A400     		lsls	r4, r4, #2
 910 0012 8023     		movs	r3, #128
 911 0014 9B05     		lsls	r3, r3, #22
 912 0016 9C46     		mov	ip, r3
 913 0018 6444     		add	r4, r4, ip
 914 001a 2068     		ldr	r0, [r4]
2860:Generated_Source\PSoC4/CyLib.c **** 
 915              		.loc 1 2860 0
 916              		@ sp needed
 917 001c 10BD     		pop	{r4, pc}
 918              		.cfi_endproc
 919              	.LFE14:
 920              		.size	CyIntGetVector, .-CyIntGetVector
 921 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 71


 922              		.align	2
 923              		.global	CyIntSetPriority
 924              		.code	16
 925              		.thumb_func
 926              		.type	CyIntSetPriority, %function
 927              	CyIntSetPriority:
 928              	.LFB15:
2873:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 929              		.loc 1 2873 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL70:
 934 0000 70B5     		push	{r4, r5, r6, lr}
 935              		.cfi_def_cfa_offset 16
 936              		.cfi_offset 4, -16
 937              		.cfi_offset 5, -12
 938              		.cfi_offset 6, -8
 939              		.cfi_offset 14, -4
 940 0002 0400     		movs	r4, r0
 941 0004 0E00     		movs	r6, r1
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 942              		.loc 1 2878 0
 943 0006 0329     		cmp	r1, #3
 944 0008 02D9     		bls	.L65
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 945              		.loc 1 2878 0 is_stmt 0 discriminator 1
 946 000a 0020     		movs	r0, #0
 947              	.LVL71:
 948 000c FFF7FEFF 		bl	CyHalt
 949              	.LVL72:
 950              	.L65:
2879:Generated_Source\PSoC4/CyLib.c **** 
 951              		.loc 1 2879 0 is_stmt 1
 952 0010 082C     		cmp	r4, #8
 953 0012 02D9     		bls	.L66
2879:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2879 0 is_stmt 0 discriminator 1
 955 0014 0020     		movs	r0, #0
 956 0016 FFF7FEFF 		bl	CyHalt
 957              	.LVL73:
 958              	.L66:
2881:Generated_Source\PSoC4/CyLib.c **** 
 959              		.loc 1 2881 0 is_stmt 1
 960 001a 0325     		movs	r5, #3
 961 001c 2540     		ands	r5, r4
 962 001e ED00     		lsls	r5, r5, #3
 963 0020 0635     		adds	r5, r5, #6
 964              	.LVL74:
2883:Generated_Source\PSoC4/CyLib.c **** 
 965              		.loc 1 2883 0
 966 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 967              	.LVL75:
2885:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 968              		.loc 1 2885 0
 969 0026 A408     		lsrs	r4, r4, #2
 970 0028 A400     		lsls	r4, r4, #2
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 72


 971 002a 074B     		ldr	r3, .L67
 972 002c 9C46     		mov	ip, r3
 973 002e 6444     		add	r4, r4, ip
 974 0030 2168     		ldr	r1, [r4]
 975              	.LVL76:
2886:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 976              		.loc 1 2886 0
 977 0032 0323     		movs	r3, #3
 978 0034 AB40     		lsls	r3, r3, r5
 979 0036 9943     		bics	r1, r3
 980              	.LVL77:
 981 0038 0B00     		movs	r3, r1
 982              	.LVL78:
2887:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 983              		.loc 1 2887 0
 984 003a 3100     		movs	r1, r6
 985              	.LVL79:
 986 003c A940     		lsls	r1, r1, r5
 987 003e 1943     		orrs	r1, r3
 988              	.LVL80:
2888:Generated_Source\PSoC4/CyLib.c **** 
 989              		.loc 1 2888 0
 990 0040 2160     		str	r1, [r4]
2890:Generated_Source\PSoC4/CyLib.c **** }
 991              		.loc 1 2890 0
 992 0042 FFF7FEFF 		bl	CyExitCriticalSection
 993              	.LVL81:
2891:Generated_Source\PSoC4/CyLib.c **** 
 994              		.loc 1 2891 0
 995              		@ sp needed
 996              	.LVL82:
 997 0046 70BD     		pop	{r4, r5, r6, pc}
 998              	.L68:
 999              		.align	2
 1000              	.L67:
 1001 0048 00E400E0 		.word	-536812544
 1002              		.cfi_endproc
 1003              	.LFE15:
 1004              		.size	CyIntSetPriority, .-CyIntSetPriority
 1005              		.section	.text.CyIntGetPriority,"ax",%progbits
 1006              		.align	2
 1007              		.global	CyIntGetPriority
 1008              		.code	16
 1009              		.thumb_func
 1010              		.type	CyIntGetPriority, %function
 1011              	CyIntGetPriority:
 1012              	.LFB16:
2907:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1013              		.loc 1 2907 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL83:
 1018 0000 10B5     		push	{r4, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 4, -8
 1021              		.cfi_offset 14, -4
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 73


 1022 0002 0400     		movs	r4, r0
2910:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2910 0
 1024 0004 0828     		cmp	r0, #8
 1025 0006 02D9     		bls	.L70
2910:Generated_Source\PSoC4/CyLib.c **** 
 1026              		.loc 1 2910 0 is_stmt 0 discriminator 1
 1027 0008 0020     		movs	r0, #0
 1028              	.LVL84:
 1029 000a FFF7FEFF 		bl	CyHalt
 1030              	.LVL85:
 1031              	.L70:
2912:Generated_Source\PSoC4/CyLib.c **** 
 1032              		.loc 1 2912 0 is_stmt 1
 1033 000e A308     		lsrs	r3, r4, #2
 1034 0010 9B00     		lsls	r3, r3, #2
 1035 0012 054A     		ldr	r2, .L71
 1036 0014 9446     		mov	ip, r2
 1037 0016 6344     		add	r3, r3, ip
 1038 0018 1868     		ldr	r0, [r3]
 1039 001a 0323     		movs	r3, #3
 1040 001c 1C40     		ands	r4, r3
 1041 001e E400     		lsls	r4, r4, #3
 1042 0020 0634     		adds	r4, r4, #6
 1043 0022 E040     		lsrs	r0, r0, r4
 1044              	.LVL86:
2914:Generated_Source\PSoC4/CyLib.c **** }
 1045              		.loc 1 2914 0
 1046 0024 1840     		ands	r0, r3
 1047              	.LVL87:
2915:Generated_Source\PSoC4/CyLib.c **** 
 1048              		.loc 1 2915 0
 1049              		@ sp needed
 1050 0026 10BD     		pop	{r4, pc}
 1051              	.L72:
 1052              		.align	2
 1053              	.L71:
 1054 0028 00E400E0 		.word	-536812544
 1055              		.cfi_endproc
 1056              	.LFE16:
 1057              		.size	CyIntGetPriority, .-CyIntGetPriority
 1058              		.section	.text.CySoftwareReset,"ax",%progbits
 1059              		.align	2
 1060              		.global	CySoftwareReset
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	CySoftwareReset, %function
 1064              	CySoftwareReset:
 1065              	.LFB23:
3020:Generated_Source\PSoC4/CyLib.c **** 
3021:Generated_Source\PSoC4/CyLib.c **** 
3022:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3023:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3024:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3027:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 74


3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3030:Generated_Source\PSoC4/CyLib.c **** {
 1066              		.loc 1 3030 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
3031:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3032:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3033:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3034:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1071              		.loc 1 3035 0
 1072 0000 034A     		ldr	r2, .L74
 1073 0002 1368     		ldr	r3, [r2]
 1074 0004 1B04     		lsls	r3, r3, #16
 1075 0006 1B0C     		lsrs	r3, r3, #16
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1076              		.loc 1 3036 0
 1077 0008 0249     		ldr	r1, .L74+4
 1078 000a 0B43     		orrs	r3, r1
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1079              		.loc 1 3035 0
 1080 000c 1360     		str	r3, [r2]
3037:Generated_Source\PSoC4/CyLib.c **** }
 1081              		.loc 1 3037 0
 1082              		@ sp needed
 1083 000e 7047     		bx	lr
 1084              	.L75:
 1085              		.align	2
 1086              	.L74:
 1087 0010 0CED00E0 		.word	-536810228
 1088 0014 0400FA05 		.word	100270084
 1089              		.cfi_endproc
 1090              	.LFE23:
 1091              		.size	CySoftwareReset, .-CySoftwareReset
 1092              		.section	.text.CyDelay,"ax",%progbits
 1093              		.align	2
 1094              		.global	CyDelay
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CyDelay, %function
 1098              	CyDelay:
 1099              	.LFB24:
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c **** 
3040:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3041:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3042:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3043:Generated_Source\PSoC4/CyLib.c **** *
3044:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3047:Generated_Source\PSoC4/CyLib.c **** *
3048:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3049:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 75


3050:Generated_Source\PSoC4/CyLib.c **** {
 1100              		.loc 1 3050 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL88:
 1105 0000 10B5     		push	{r4, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 4, -8
 1108              		.cfi_offset 14, -4
 1109 0002 0400     		movs	r4, r0
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1110              		.loc 1 3051 0
 1111 0004 06E0     		b	.L77
 1112              	.LVL89:
 1113              	.L78:
3052:Generated_Source\PSoC4/CyLib.c ****     {
3053:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3054:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3055:Generated_Source\PSoC4/CyLib.c ****          */
3056:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1114              		.loc 1 3056 0
 1115 0006 084B     		ldr	r3, .L79
 1116 0008 5868     		ldr	r0, [r3, #4]
 1117 000a FFF7FEFF 		bl	CyDelayCycles
 1118              	.LVL90:
3057:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1119              		.loc 1 3057 0
 1120 000e 074B     		ldr	r3, .L79+4
 1121 0010 9C46     		mov	ip, r3
 1122 0012 6444     		add	r4, r4, ip
 1123              	.LVL91:
 1124              	.L77:
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1125              		.loc 1 3051 0
 1126 0014 8023     		movs	r3, #128
 1127 0016 1B02     		lsls	r3, r3, #8
 1128 0018 9C42     		cmp	r4, r3
 1129 001a F4D8     		bhi	.L78
3058:Generated_Source\PSoC4/CyLib.c ****     }
3059:Generated_Source\PSoC4/CyLib.c **** 
3060:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1130              		.loc 1 3060 0
 1131 001c 024B     		ldr	r3, .L79
 1132 001e 9868     		ldr	r0, [r3, #8]
 1133 0020 6043     		muls	r0, r4
 1134 0022 FFF7FEFF 		bl	CyDelayCycles
 1135              	.LVL92:
3061:Generated_Source\PSoC4/CyLib.c **** }
 1136              		.loc 1 3061 0
 1137              		@ sp needed
 1138              	.LVL93:
 1139 0026 10BD     		pop	{r4, pc}
 1140              	.L80:
 1141              		.align	2
 1142              	.L79:
 1143 0028 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 76


 1144 002c 0080FFFF 		.word	-32768
 1145              		.cfi_endproc
 1146              	.LFE24:
 1147              		.size	CyDelay, .-CyDelay
 1148              		.section	.text.CyDelayUs,"ax",%progbits
 1149              		.align	2
 1150              		.global	CyDelayUs
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	CyDelayUs, %function
 1154              	CyDelayUs:
 1155              	.LFB25:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3066:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1156              		.loc 1 3073 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              	.LVL94:
 1161 0000 10B5     		push	{r4, lr}
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 4, -8
 1164              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1165              		.loc 1 3074 0
 1166 0002 034B     		ldr	r3, .L82
 1167 0004 1B7B     		ldrb	r3, [r3, #12]
 1168 0006 5843     		muls	r0, r3
 1169              	.LVL95:
 1170 0008 FFF7FEFF 		bl	CyDelayCycles
 1171              	.LVL96:
3075:Generated_Source\PSoC4/CyLib.c **** }
 1172              		.loc 1 3075 0
 1173              		@ sp needed
 1174 000c 10BD     		pop	{r4, pc}
 1175              	.L83:
 1176 000e C046     		.align	2
 1177              	.L82:
 1178 0010 00000000 		.word	.LANCHOR0
 1179              		.cfi_endproc
 1180              	.LFE25:
 1181              		.size	CyDelayUs, .-CyDelayUs
 1182              		.global	__aeabi_uidiv
 1183              		.section	.text.CyDelayFreq,"ax",%progbits
 1184              		.align	2
 1185              		.global	CyDelayFreq
 1186              		.code	16
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 77


 1187              		.thumb_func
 1188              		.type	CyDelayFreq, %function
 1189              	CyDelayFreq:
 1190              	.LFB26:
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3080:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3082:Generated_Source\PSoC4/CyLib.c **** *
3083:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3084:Generated_Source\PSoC4/CyLib.c **** *
3085:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3086:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3087:Generated_Source\PSoC4/CyLib.c **** {
 1191              		.loc 1 3087 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL97:
 1196 0000 70B5     		push	{r4, r5, r6, lr}
 1197              		.cfi_def_cfa_offset 16
 1198              		.cfi_offset 4, -16
 1199              		.cfi_offset 5, -12
 1200              		.cfi_offset 6, -8
 1201              		.cfi_offset 14, -4
3088:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1202              		.loc 1 3088 0
 1203 0002 0028     		cmp	r0, #0
 1204 0004 02D0     		beq	.L85
3089:Generated_Source\PSoC4/CyLib.c ****     {
3090:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1205              		.loc 1 3090 0
 1206 0006 0C4B     		ldr	r3, .L87
 1207 0008 1861     		str	r0, [r3, #16]
 1208 000a 02E0     		b	.L86
 1209              	.L85:
3091:Generated_Source\PSoC4/CyLib.c ****     }
3092:Generated_Source\PSoC4/CyLib.c ****     else
3093:Generated_Source\PSoC4/CyLib.c ****     {
3094:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1210              		.loc 1 3094 0
 1211 000c 0B4A     		ldr	r2, .L87+4
 1212 000e 0A4B     		ldr	r3, .L87
 1213 0010 1A61     		str	r2, [r3, #16]
 1214              	.L86:
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** 
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1215              		.loc 1 3097 0
 1216 0012 094C     		ldr	r4, .L87
 1217 0014 2569     		ldr	r5, [r4, #16]
 1218 0016 0A4B     		ldr	r3, .L87+8
 1219 0018 E818     		adds	r0, r5, r3
 1220              	.LVL98:
 1221 001a 0A49     		ldr	r1, .L87+12
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 78


 1222 001c FFF7FEFF 		bl	__aeabi_uidiv
 1223              	.LVL99:
 1224 0020 2073     		strb	r0, [r4, #12]
3098:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1225              		.loc 1 3098 0
 1226 0022 094B     		ldr	r3, .L87+16
 1227 0024 E818     		adds	r0, r5, r3
 1228 0026 FA21     		movs	r1, #250
 1229 0028 8900     		lsls	r1, r1, #2
 1230 002a FFF7FEFF 		bl	__aeabi_uidiv
 1231              	.LVL100:
 1232 002e A060     		str	r0, [r4, #8]
3099:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1233              		.loc 1 3099 0
 1234 0030 C003     		lsls	r0, r0, #15
 1235 0032 6060     		str	r0, [r4, #4]
3100:Generated_Source\PSoC4/CyLib.c **** }
 1236              		.loc 1 3100 0
 1237              		@ sp needed
 1238 0034 70BD     		pop	{r4, r5, r6, pc}
 1239              	.L88:
 1240 0036 C046     		.align	2
 1241              	.L87:
 1242 0038 00000000 		.word	.LANCHOR0
 1243 003c 0024F400 		.word	16000000
 1244 0040 3F420F00 		.word	999999
 1245 0044 40420F00 		.word	1000000
 1246 0048 E7030000 		.word	999
 1247              		.cfi_endproc
 1248              	.LFE26:
 1249              		.size	CyDelayFreq, .-CyDelayFreq
 1250              		.section	.text.CySysTickStop,"ax",%progbits
 1251              		.align	2
 1252              		.global	CySysTickStop
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	CySysTickStop, %function
 1256              	CySysTickStop:
 1257              	.LFB30:
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c **** 
3103:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3104:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3105:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3106:Generated_Source\PSoC4/CyLib.c **** *
3107:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3108:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3109:Generated_Source\PSoC4/CyLib.c **** *
3110:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
3111:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
3112:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3113:Generated_Source\PSoC4/CyLib.c **** *
3114:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3115:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3116:Generated_Source\PSoC4/CyLib.c **** *
3117:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3118:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 79


3119:Generated_Source\PSoC4/CyLib.c **** {
3120:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3121:Generated_Source\PSoC4/CyLib.c ****     {
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3123:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3124:Generated_Source\PSoC4/CyLib.c ****     }
3125:Generated_Source\PSoC4/CyLib.c **** 
3126:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3127:Generated_Source\PSoC4/CyLib.c **** }
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3131:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3132:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3133:Generated_Source\PSoC4/CyLib.c **** *
3134:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3135:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3136:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3137:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3140:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3141:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3142:Generated_Source\PSoC4/CyLib.c **** *
3143:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3144:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3145:Generated_Source\PSoC4/CyLib.c **** *
3146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3147:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3148:Generated_Source\PSoC4/CyLib.c **** {
3149:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3152:Generated_Source\PSoC4/CyLib.c ****     {
3153:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3154:Generated_Source\PSoC4/CyLib.c ****     }
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3159:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3160:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3163:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3164:Generated_Source\PSoC4/CyLib.c **** }
3165:Generated_Source\PSoC4/CyLib.c **** 
3166:Generated_Source\PSoC4/CyLib.c **** 
3167:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3168:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3169:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3172:Generated_Source\PSoC4/CyLib.c **** *
3173:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3174:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3175:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 80


3176:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3178:Generated_Source\PSoC4/CyLib.c **** {
3179:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3180:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3189:Generated_Source\PSoC4/CyLib.c **** *
3190:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3191:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3194:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3195:Generated_Source\PSoC4/CyLib.c **** {
 1258              		.loc 1 3195 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
3196:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1263              		.loc 1 3196 0
 1264 0000 024A     		ldr	r2, .L90
 1265 0002 1368     		ldr	r3, [r2]
 1266 0004 0121     		movs	r1, #1
 1267 0006 8B43     		bics	r3, r1
 1268 0008 1360     		str	r3, [r2]
3197:Generated_Source\PSoC4/CyLib.c **** }
 1269              		.loc 1 3197 0
 1270              		@ sp needed
 1271 000a 7047     		bx	lr
 1272              	.L91:
 1273              		.align	2
 1274              	.L90:
 1275 000c 10E000E0 		.word	-536813552
 1276              		.cfi_endproc
 1277              	.LFE30:
 1278              		.size	CySysTickStop, .-CySysTickStop
 1279              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1280              		.align	2
 1281              		.global	CySysTickEnableInterrupt
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	CySysTickEnableInterrupt, %function
 1285              	CySysTickEnableInterrupt:
 1286              	.LFB31:
3198:Generated_Source\PSoC4/CyLib.c **** 
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3201:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3202:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3203:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 81


3204:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3205:Generated_Source\PSoC4/CyLib.c **** *
3206:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3207:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3208:Generated_Source\PSoC4/CyLib.c **** *
3209:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3210:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3211:Generated_Source\PSoC4/CyLib.c **** {
 1287              		.loc 1 3211 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
3212:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1292              		.loc 1 3212 0
 1293 0000 024A     		ldr	r2, .L93
 1294 0002 1168     		ldr	r1, [r2]
 1295 0004 0223     		movs	r3, #2
 1296 0006 0B43     		orrs	r3, r1
 1297 0008 1360     		str	r3, [r2]
3213:Generated_Source\PSoC4/CyLib.c **** }
 1298              		.loc 1 3213 0
 1299              		@ sp needed
 1300 000a 7047     		bx	lr
 1301              	.L94:
 1302              		.align	2
 1303              	.L93:
 1304 000c 10E000E0 		.word	-536813552
 1305              		.cfi_endproc
 1306              	.LFE31:
 1307              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1308              		.section	.text.CySysTickEnable,"ax",%progbits
 1309              		.align	2
 1310              		.global	CySysTickEnable
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	CySysTickEnable, %function
 1314              	CySysTickEnable:
 1315              	.LFB29:
3178:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1316              		.loc 1 3178 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320 0000 10B5     		push	{r4, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 4, -8
 1323              		.cfi_offset 14, -4
3179:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1324              		.loc 1 3179 0
 1325 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1326              	.LVL101:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1327              		.loc 1 3180 0
 1328 0006 034A     		ldr	r2, .L96
 1329 0008 1168     		ldr	r1, [r2]
 1330 000a 0123     		movs	r3, #1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 82


 1331 000c 0B43     		orrs	r3, r1
 1332 000e 1360     		str	r3, [r2]
3181:Generated_Source\PSoC4/CyLib.c **** 
 1333              		.loc 1 3181 0
 1334              		@ sp needed
 1335 0010 10BD     		pop	{r4, pc}
 1336              	.L97:
 1337 0012 C046     		.align	2
 1338              	.L96:
 1339 0014 10E000E0 		.word	-536813552
 1340              		.cfi_endproc
 1341              	.LFE29:
 1342              		.size	CySysTickEnable, .-CySysTickEnable
 1343              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1344              		.align	2
 1345              		.global	CySysTickDisableInterrupt
 1346              		.code	16
 1347              		.thumb_func
 1348              		.type	CySysTickDisableInterrupt, %function
 1349              	CySysTickDisableInterrupt:
 1350              	.LFB32:
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3217:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3218:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3219:Generated_Source\PSoC4/CyLib.c **** *
3220:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3221:Generated_Source\PSoC4/CyLib.c **** *
3222:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3223:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3226:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3227:Generated_Source\PSoC4/CyLib.c **** {
 1351              		.loc 1 3227 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              		@ link register save eliminated.
3228:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1356              		.loc 1 3228 0
 1357 0000 024A     		ldr	r2, .L99
 1358 0002 1368     		ldr	r3, [r2]
 1359 0004 0221     		movs	r1, #2
 1360 0006 8B43     		bics	r3, r1
 1361 0008 1360     		str	r3, [r2]
3229:Generated_Source\PSoC4/CyLib.c **** }
 1362              		.loc 1 3229 0
 1363              		@ sp needed
 1364 000a 7047     		bx	lr
 1365              	.L100:
 1366              		.align	2
 1367              	.L99:
 1368 000c 10E000E0 		.word	-536813552
 1369              		.cfi_endproc
 1370              	.LFE32:
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 83


 1371              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1372              		.section	.text.CySysTickSetReload,"ax",%progbits
 1373              		.align	2
 1374              		.global	CySysTickSetReload
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	CySysTickSetReload, %function
 1378              	CySysTickSetReload:
 1379              	.LFB33:
3230:Generated_Source\PSoC4/CyLib.c **** 
3231:Generated_Source\PSoC4/CyLib.c **** 
3232:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3233:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3234:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3235:Generated_Source\PSoC4/CyLib.c **** *
3236:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3237:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3238:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3239:Generated_Source\PSoC4/CyLib.c **** *
3240:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3243:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3244:Generated_Source\PSoC4/CyLib.c **** {
 1380              		.loc 1 3244 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384              		@ link register save eliminated.
 1385              	.LVL102:
3245:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1386              		.loc 1 3245 0
 1387 0000 0002     		lsls	r0, r0, #8
 1388              	.LVL103:
 1389 0002 000A     		lsrs	r0, r0, #8
 1390 0004 014B     		ldr	r3, .L102
 1391 0006 1860     		str	r0, [r3]
3246:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 3246 0
 1393              		@ sp needed
 1394 0008 7047     		bx	lr
 1395              	.L103:
 1396 000a C046     		.align	2
 1397              	.L102:
 1398 000c 14E000E0 		.word	-536813548
 1399              		.cfi_endproc
 1400              	.LFE33:
 1401              		.size	CySysTickSetReload, .-CySysTickSetReload
 1402              		.section	.text.CySysTickGetReload,"ax",%progbits
 1403              		.align	2
 1404              		.global	CySysTickGetReload
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	CySysTickGetReload, %function
 1408              	CySysTickGetReload:
 1409              	.LFB34:
3247:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 84


3248:Generated_Source\PSoC4/CyLib.c **** 
3249:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3250:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3251:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3252:Generated_Source\PSoC4/CyLib.c **** *
3253:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3254:Generated_Source\PSoC4/CyLib.c **** *
3255:Generated_Source\PSoC4/CyLib.c **** * \return
3256:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3259:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3260:Generated_Source\PSoC4/CyLib.c **** {
 1410              		.loc 1 3260 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
3261:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1415              		.loc 1 3261 0
 1416 0000 024B     		ldr	r3, .L105
 1417 0002 1868     		ldr	r0, [r3]
 1418 0004 0002     		lsls	r0, r0, #8
 1419 0006 000A     		lsrs	r0, r0, #8
3262:Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 3262 0
 1421              		@ sp needed
 1422 0008 7047     		bx	lr
 1423              	.L106:
 1424 000a C046     		.align	2
 1425              	.L105:
 1426 000c 14E000E0 		.word	-536813548
 1427              		.cfi_endproc
 1428              	.LFE34:
 1429              		.size	CySysTickGetReload, .-CySysTickGetReload
 1430              		.section	.text.CySysTickGetValue,"ax",%progbits
 1431              		.align	2
 1432              		.global	CySysTickGetValue
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	CySysTickGetValue, %function
 1436              	CySysTickGetValue:
 1437              	.LFB35:
3263:Generated_Source\PSoC4/CyLib.c **** 
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3266:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3267:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3268:Generated_Source\PSoC4/CyLib.c **** *
3269:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3270:Generated_Source\PSoC4/CyLib.c **** *
3271:Generated_Source\PSoC4/CyLib.c **** * \return
3272:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3275:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3276:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 85


 1438              		.loc 1 3276 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
3277:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1443              		.loc 1 3277 0
 1444 0000 024B     		ldr	r3, .L108
 1445 0002 1868     		ldr	r0, [r3]
 1446 0004 0002     		lsls	r0, r0, #8
 1447 0006 000A     		lsrs	r0, r0, #8
3278:Generated_Source\PSoC4/CyLib.c **** }
 1448              		.loc 1 3278 0
 1449              		@ sp needed
 1450 0008 7047     		bx	lr
 1451              	.L109:
 1452 000a C046     		.align	2
 1453              	.L108:
 1454 000c 18E000E0 		.word	-536813544
 1455              		.cfi_endproc
 1456              	.LFE35:
 1457              		.size	CySysTickGetValue, .-CySysTickGetValue
 1458              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1459              		.align	2
 1460              		.global	CySysTickGetCountFlag
 1461              		.code	16
 1462              		.thumb_func
 1463              		.type	CySysTickGetCountFlag, %function
 1464              	CySysTickGetCountFlag:
 1465              	.LFB36:
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c **** 
3281:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3287:Generated_Source\PSoC4/CyLib.c ****     *
3288:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3289:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3290:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3291:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3292:Generated_Source\PSoC4/CyLib.c ****     *
3293:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
3294:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
3295:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
3296:Generated_Source\PSoC4/CyLib.c ****     *
3297:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3298:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3301:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3302:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3303:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3304:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3305:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 86


3306:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3307:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3308:Generated_Source\PSoC4/CyLib.c ****     {
3309:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3310:Generated_Source\PSoC4/CyLib.c ****         {
3311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
3312:Generated_Source\PSoC4/CyLib.c ****         }
3313:Generated_Source\PSoC4/CyLib.c ****         else
3314:Generated_Source\PSoC4/CyLib.c ****         {
3315:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3316:Generated_Source\PSoC4/CyLib.c ****         }
3317:Generated_Source\PSoC4/CyLib.c ****     }
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c ****     
3320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3323:Generated_Source\PSoC4/CyLib.c ****     *
3324:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3325:Generated_Source\PSoC4/CyLib.c ****     *
3326:Generated_Source\PSoC4/CyLib.c ****     *  \return 
3327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3328:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3329:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3330:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3333:Generated_Source\PSoC4/CyLib.c ****     {
3334:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3335:Generated_Source\PSoC4/CyLib.c ****     }
3336:Generated_Source\PSoC4/CyLib.c ****     
3337:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3338:Generated_Source\PSoC4/CyLib.c **** 
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3341:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3342:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3343:Generated_Source\PSoC4/CyLib.c **** *
3344:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3345:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3346:Generated_Source\PSoC4/CyLib.c **** *
3347:Generated_Source\PSoC4/CyLib.c **** * \return
3348:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3349:Generated_Source\PSoC4/CyLib.c **** *
3350:Generated_Source\PSoC4/CyLib.c **** *
3351:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3352:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3353:Generated_Source\PSoC4/CyLib.c **** *
3354:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3356:Generated_Source\PSoC4/CyLib.c **** {
 1466              		.loc 1 3356 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
3357:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 87


 1471              		.loc 1 3357 0
 1472 0000 024B     		ldr	r3, .L111
 1473 0002 1868     		ldr	r0, [r3]
 1474 0004 000C     		lsrs	r0, r0, #16
 1475 0006 0123     		movs	r3, #1
 1476 0008 1840     		ands	r0, r3
3358:Generated_Source\PSoC4/CyLib.c **** }
 1477              		.loc 1 3358 0
 1478              		@ sp needed
 1479 000a 7047     		bx	lr
 1480              	.L112:
 1481              		.align	2
 1482              	.L111:
 1483 000c 10E000E0 		.word	-536813552
 1484              		.cfi_endproc
 1485              	.LFE36:
 1486              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1487              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1488              		.align	2
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	CySysTickServiceCallbacks, %function
 1492              	CySysTickServiceCallbacks:
 1493              	.LFB40:
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c **** 
3361:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3362:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3363:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3364:Generated_Source\PSoC4/CyLib.c **** *
3365:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3366:Generated_Source\PSoC4/CyLib.c **** *
3367:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3368:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3369:Generated_Source\PSoC4/CyLib.c **** {
3370:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3371:Generated_Source\PSoC4/CyLib.c **** }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3376:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c **** *
3378:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3379:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3380:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3381:Generated_Source\PSoC4/CyLib.c **** *
3382:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3383:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3384:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3385:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3386:Generated_Source\PSoC4/CyLib.c **** *  functions.
3387:Generated_Source\PSoC4/CyLib.c **** *
3388:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3389:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3390:Generated_Source\PSoC4/CyLib.c **** *
3391:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 88


3392:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3393:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3394:Generated_Source\PSoC4/CyLib.c **** *
3395:Generated_Source\PSoC4/CyLib.c **** * \return
3396:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3397:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3398:Generated_Source\PSoC4/CyLib.c **** *
3399:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3400:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3401:Generated_Source\PSoC4/CyLib.c **** *
3402:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3403:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3404:Generated_Source\PSoC4/CyLib.c **** {
3405:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3406:Generated_Source\PSoC4/CyLib.c **** 
3407:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3408:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3409:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3410:Generated_Source\PSoC4/CyLib.c **** }
3411:Generated_Source\PSoC4/CyLib.c **** 
3412:Generated_Source\PSoC4/CyLib.c **** 
3413:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3414:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3415:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3416:Generated_Source\PSoC4/CyLib.c **** *
3417:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3420:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3421:Generated_Source\PSoC4/CyLib.c **** *
3422:Generated_Source\PSoC4/CyLib.c **** * \return
3423:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3424:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3425:Generated_Source\PSoC4/CyLib.c **** *
3426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3427:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3428:Generated_Source\PSoC4/CyLib.c **** {
3429:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3430:Generated_Source\PSoC4/CyLib.c **** }
3431:Generated_Source\PSoC4/CyLib.c **** 
3432:Generated_Source\PSoC4/CyLib.c **** 
3433:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3434:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3435:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3436:Generated_Source\PSoC4/CyLib.c **** *
3437:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3438:Generated_Source\PSoC4/CyLib.c **** *
3439:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3440:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3441:Generated_Source\PSoC4/CyLib.c **** {
 1494              		.loc 1 3441 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498 0000 10B5     		push	{r4, lr}
 1499              		.cfi_def_cfa_offset 8
 1500              		.cfi_offset 4, -8
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 89


 1501              		.cfi_offset 14, -4
3442:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3443:Generated_Source\PSoC4/CyLib.c **** 
3444:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3445:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1502              		.loc 1 3445 0
 1503 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1504              	.LVL104:
 1505 0006 0128     		cmp	r0, #1
 1506 0008 0BD1     		bne	.L113
 1507 000a 07E0     		b	.L118
 1508              	.LVL105:
 1509              	.L117:
3446:Generated_Source\PSoC4/CyLib.c ****     {
3447:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3448:Generated_Source\PSoC4/CyLib.c ****         {
3449:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1510              		.loc 1 3449 0
 1511 000c A300     		lsls	r3, r4, #2
 1512 000e 054A     		ldr	r2, .L119
 1513 0010 9B58     		ldr	r3, [r3, r2]
 1514 0012 002B     		cmp	r3, #0
 1515 0014 00D0     		beq	.L116
3450:Generated_Source\PSoC4/CyLib.c ****             {
3451:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1516              		.loc 1 3451 0
 1517 0016 9847     		blx	r3
 1518              	.LVL106:
 1519              	.L116:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1520              		.loc 1 3447 0 discriminator 2
 1521 0018 0134     		adds	r4, r4, #1
 1522              	.LVL107:
 1523 001a 00E0     		b	.L114
 1524              	.LVL108:
 1525              	.L118:
 1526 001c 0024     		movs	r4, #0
 1527              	.L114:
 1528              	.LVL109:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1529              		.loc 1 3447 0 is_stmt 0 discriminator 1
 1530 001e 042C     		cmp	r4, #4
 1531 0020 F4D9     		bls	.L117
 1532              	.LVL110:
 1533              	.L113:
3452:Generated_Source\PSoC4/CyLib.c ****             }
3453:Generated_Source\PSoC4/CyLib.c ****         }
3454:Generated_Source\PSoC4/CyLib.c ****     }
3455:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 3455 0 is_stmt 1
 1535              		@ sp needed
 1536 0022 10BD     		pop	{r4, pc}
 1537              	.L120:
 1538              		.align	2
 1539              	.L119:
 1540 0024 00000000 		.word	.LANCHOR1
 1541              		.cfi_endproc
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 90


 1542              	.LFE40:
 1543              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1544              		.section	.text.CySysTickClear,"ax",%progbits
 1545              		.align	2
 1546              		.global	CySysTickClear
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	CySysTickClear, %function
 1550              	CySysTickClear:
 1551              	.LFB37:
3369:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1552              		.loc 1 3369 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
3370:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 3370 0
 1558 0000 0022     		movs	r2, #0
 1559 0002 014B     		ldr	r3, .L122
 1560 0004 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 1561              		.loc 1 3371 0
 1562              		@ sp needed
 1563 0006 7047     		bx	lr
 1564              	.L123:
 1565              		.align	2
 1566              	.L122:
 1567 0008 18E000E0 		.word	-536813544
 1568              		.cfi_endproc
 1569              	.LFE37:
 1570              		.size	CySysTickClear, .-CySysTickClear
 1571              		.section	.text.CySysTickInit,"ax",%progbits
 1572              		.align	2
 1573              		.global	CySysTickInit
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	CySysTickInit, %function
 1577              	CySysTickInit:
 1578              	.LFB28:
3148:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1579              		.loc 1 3148 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583 0000 10B5     		push	{r4, lr}
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 4, -8
 1586              		.cfi_offset 14, -4
 1587              	.LVL111:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1588              		.loc 1 3151 0
 1589 0002 0023     		movs	r3, #0
 1590 0004 04E0     		b	.L125
 1591              	.LVL112:
 1592              	.L126:
3153:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 91


 1593              		.loc 1 3153 0 discriminator 3
 1594 0006 9900     		lsls	r1, r3, #2
 1595 0008 0020     		movs	r0, #0
 1596 000a 0A4A     		ldr	r2, .L127
 1597 000c 8850     		str	r0, [r1, r2]
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1598              		.loc 1 3151 0 discriminator 3
 1599 000e 0133     		adds	r3, r3, #1
 1600              	.LVL113:
 1601              	.L125:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 1602              		.loc 1 3151 0 is_stmt 0 discriminator 1
 1603 0010 042B     		cmp	r3, #4
 1604 0012 F8D9     		bls	.L126
3156:Generated_Source\PSoC4/CyLib.c **** 
 1605              		.loc 1 3156 0 is_stmt 1
 1606 0014 0849     		ldr	r1, .L127+4
 1607 0016 0F20     		movs	r0, #15
 1608 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1609              	.LVL114:
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1610              		.loc 1 3162 0
 1611 001c 074B     		ldr	r3, .L127+8
 1612 001e 1869     		ldr	r0, [r3, #16]
 1613 0020 FA21     		movs	r1, #250
 1614 0022 8900     		lsls	r1, r1, #2
 1615 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1616              	.LVL115:
 1617 0028 FFF7FEFF 		bl	CySysTickSetReload
 1618              	.LVL116:
3163:Generated_Source\PSoC4/CyLib.c **** }
 1619              		.loc 1 3163 0
 1620 002c FFF7FEFF 		bl	CySysTickClear
 1621              	.LVL117:
3164:Generated_Source\PSoC4/CyLib.c **** 
 1622              		.loc 1 3164 0
 1623              		@ sp needed
 1624 0030 10BD     		pop	{r4, pc}
 1625              	.L128:
 1626 0032 C046     		.align	2
 1627              	.L127:
 1628 0034 00000000 		.word	.LANCHOR1
 1629 0038 00000000 		.word	CySysTickServiceCallbacks
 1630 003c 00000000 		.word	.LANCHOR0
 1631              		.cfi_endproc
 1632              	.LFE28:
 1633              		.size	CySysTickInit, .-CySysTickInit
 1634              		.section	.text.CySysTickStart,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySysTickStart
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySysTickStart, %function
 1640              	CySysTickStart:
 1641              	.LFB27:
3119:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1642              		.loc 1 3119 0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 92


 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646 0000 10B5     		push	{r4, lr}
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 4, -8
 1649              		.cfi_offset 14, -4
3120:Generated_Source\PSoC4/CyLib.c ****     {
 1650              		.loc 1 3120 0
 1651 0002 064B     		ldr	r3, .L131
 1652 0004 5B69     		ldr	r3, [r3, #20]
 1653 0006 002B     		cmp	r3, #0
 1654 0008 04D1     		bne	.L130
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1655              		.loc 1 3122 0
 1656 000a FFF7FEFF 		bl	CySysTickInit
 1657              	.LVL118:
3123:Generated_Source\PSoC4/CyLib.c ****     }
 1658              		.loc 1 3123 0
 1659 000e 0122     		movs	r2, #1
 1660 0010 024B     		ldr	r3, .L131
 1661 0012 5A61     		str	r2, [r3, #20]
 1662              	.L130:
3126:Generated_Source\PSoC4/CyLib.c **** }
 1663              		.loc 1 3126 0
 1664 0014 FFF7FEFF 		bl	CySysTickEnable
 1665              	.LVL119:
3127:Generated_Source\PSoC4/CyLib.c **** 
 1666              		.loc 1 3127 0
 1667              		@ sp needed
 1668 0018 10BD     		pop	{r4, pc}
 1669              	.L132:
 1670 001a C046     		.align	2
 1671              	.L131:
 1672 001c 00000000 		.word	.LANCHOR1
 1673              		.cfi_endproc
 1674              	.LFE27:
 1675              		.size	CySysTickStart, .-CySysTickStart
 1676              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1677              		.align	2
 1678              		.global	CySysTickSetCallback
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	CySysTickSetCallback, %function
 1682              	CySysTickSetCallback:
 1683              	.LFB38:
3404:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1684              		.loc 1 3404 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689              	.LVL120:
3407:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1690              		.loc 1 3407 0
 1691 0000 024A     		ldr	r2, .L134
 1692 0002 8300     		lsls	r3, r0, #2
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 93


 1693 0004 9858     		ldr	r0, [r3, r2]
 1694              	.LVL121:
3408:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1695              		.loc 1 3408 0
 1696 0006 9950     		str	r1, [r3, r2]
3410:Generated_Source\PSoC4/CyLib.c **** 
 1697              		.loc 1 3410 0
 1698              		@ sp needed
 1699 0008 7047     		bx	lr
 1700              	.L135:
 1701 000a C046     		.align	2
 1702              	.L134:
 1703 000c 00000000 		.word	.LANCHOR1
 1704              		.cfi_endproc
 1705              	.LFE38:
 1706              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1707              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1708              		.align	2
 1709              		.global	CySysTickGetCallback
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	CySysTickGetCallback, %function
 1713              	CySysTickGetCallback:
 1714              	.LFB39:
3428:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1715              		.loc 1 3428 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720              	.LVL122:
3429:Generated_Source\PSoC4/CyLib.c **** }
 1721              		.loc 1 3429 0
 1722 0000 8000     		lsls	r0, r0, #2
 1723              	.LVL123:
 1724 0002 014B     		ldr	r3, .L137
 1725 0004 C058     		ldr	r0, [r0, r3]
3430:Generated_Source\PSoC4/CyLib.c **** 
 1726              		.loc 1 3430 0
 1727              		@ sp needed
 1728 0006 7047     		bx	lr
 1729              	.L138:
 1730              		.align	2
 1731              	.L137:
 1732 0008 00000000 		.word	.LANCHOR1
 1733              		.cfi_endproc
 1734              	.LFE39:
 1735              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1736              		.section	.text.CyGetUniqueId,"ax",%progbits
 1737              		.align	2
 1738              		.global	CyGetUniqueId
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CyGetUniqueId, %function
 1742              	CyGetUniqueId:
 1743              	.LFB41:
3456:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 94


3457:Generated_Source\PSoC4/CyLib.c **** 
3458:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3459:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3460:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3461:Generated_Source\PSoC4/CyLib.c **** *
3462:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3463:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3464:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3465:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3466:Generated_Source\PSoC4/CyLib.c **** *
3467:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3468:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3469:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3472:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3473:Generated_Source\PSoC4/CyLib.c **** {
 1744              		.loc 1 3473 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749              	.LVL124:
3474:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1750              		.loc 1 3475 0
 1751 0000 134B     		ldr	r3, .L140
 1752 0002 1B78     		ldrb	r3, [r3]
 1753 0004 DAB2     		uxtb	r2, r3
 1754 0006 0260     		str	r2, [r0]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1755              		.loc 1 3476 0
 1756 0008 124B     		ldr	r3, .L140+4
 1757 000a 1B78     		ldrb	r3, [r3]
 1758 000c 1B02     		lsls	r3, r3, #8
 1759 000e 1343     		orrs	r3, r2
 1760 0010 0360     		str	r3, [r0]
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1761              		.loc 1 3477 0
 1762 0012 114A     		ldr	r2, .L140+8
 1763 0014 1278     		ldrb	r2, [r2]
 1764 0016 1204     		lsls	r2, r2, #16
 1765 0018 1343     		orrs	r3, r2
 1766 001a 0360     		str	r3, [r0]
3478:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1767              		.loc 1 3478 0
 1768 001c 0F4A     		ldr	r2, .L140+12
 1769 001e 1278     		ldrb	r2, [r2]
 1770 0020 1206     		lsls	r2, r2, #24
 1771 0022 1343     		orrs	r3, r2
 1772 0024 0360     		str	r3, [r0]
3479:Generated_Source\PSoC4/CyLib.c **** 
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1773              		.loc 1 3480 0
 1774 0026 0E4B     		ldr	r3, .L140+16
 1775 0028 1B78     		ldrb	r3, [r3]
 1776 002a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 95


 1777 002c 4260     		str	r2, [r0, #4]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1778              		.loc 1 3481 0
 1779 002e 0D4B     		ldr	r3, .L140+20
 1780 0030 1B78     		ldrb	r3, [r3]
 1781 0032 1B02     		lsls	r3, r3, #8
 1782 0034 1343     		orrs	r3, r2
 1783 0036 4360     		str	r3, [r0, #4]
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1784              		.loc 1 3482 0
 1785 0038 0B4A     		ldr	r2, .L140+24
 1786 003a 1278     		ldrb	r2, [r2]
 1787 003c 1204     		lsls	r2, r2, #16
 1788 003e 1343     		orrs	r3, r2
 1789 0040 4360     		str	r3, [r0, #4]
3483:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1790              		.loc 1 3483 0
 1791 0042 0A4A     		ldr	r2, .L140+28
 1792 0044 1278     		ldrb	r2, [r2]
 1793 0046 1206     		lsls	r2, r2, #24
 1794 0048 1343     		orrs	r3, r2
 1795 004a 4360     		str	r3, [r0, #4]
3484:Generated_Source\PSoC4/CyLib.c **** #else
3485:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3486:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3487:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3488:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3489:Generated_Source\PSoC4/CyLib.c **** 
3490:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3491:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3492:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3493:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3494:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3495:Generated_Source\PSoC4/CyLib.c **** }
 1796              		.loc 1 3495 0
 1797              		@ sp needed
 1798 004c 7047     		bx	lr
 1799              	.L141:
 1800 004e C046     		.align	2
 1801              	.L140:
 1802 0050 78F1FF0F 		.word	268431736
 1803 0054 79F1FF0F 		.word	268431737
 1804 0058 7AF1FF0F 		.word	268431738
 1805 005c 7BF1FF0F 		.word	268431739
 1806 0060 7CF1FF0F 		.word	268431740
 1807 0064 7DF1FF0F 		.word	268431741
 1808 0068 7EF1FF0F 		.word	268431742
 1809 006c 7FF1FF0F 		.word	268431743
 1810              		.cfi_endproc
 1811              	.LFE41:
 1812              		.size	CyGetUniqueId, .-CyGetUniqueId
 1813              		.global	CySysClkPumpConfig
 1814              		.global	CySysTickInitVar
 1815              		.global	cydelay32kMs
 1816              		.global	cydelayFreqMhz
 1817              		.global	cydelayFreqKhz
 1818              		.global	cydelayFreqHz
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 96


 1819              		.data
 1820              		.align	2
 1821              		.set	.LANCHOR0,. + 0
 1822              		.type	CySysClkPumpConfig, %object
 1823              		.size	CySysClkPumpConfig, 4
 1824              	CySysClkPumpConfig:
 1825 0000 01000000 		.word	1
 1826              		.type	cydelay32kMs, %object
 1827              		.size	cydelay32kMs, 4
 1828              	cydelay32kMs:
 1829 0004 0000401F 		.word	524288000
 1830              		.type	cydelayFreqKhz, %object
 1831              		.size	cydelayFreqKhz, 4
 1832              	cydelayFreqKhz:
 1833 0008 803E0000 		.word	16000
 1834              		.type	cydelayFreqMhz, %object
 1835              		.size	cydelayFreqMhz, 1
 1836              	cydelayFreqMhz:
 1837 000c 10       		.byte	16
 1838 000d 000000   		.space	3
 1839              		.type	cydelayFreqHz, %object
 1840              		.size	cydelayFreqHz, 4
 1841              	cydelayFreqHz:
 1842 0010 0024F400 		.word	16000000
 1843              		.bss
 1844              		.align	2
 1845              		.set	.LANCHOR1,. + 0
 1846              		.type	CySysTickCallbacks, %object
 1847              		.size	CySysTickCallbacks, 20
 1848              	CySysTickCallbacks:
 1849 0000 00000000 		.space	20
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1850              		.type	CySysTickInitVar, %object
 1851              		.size	CySysTickInitVar, 4
 1852              	CySysTickInitVar:
 1853 0014 00000000 		.space	4
 1854              		.text
 1855              	.Letext0:
 1856              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1857              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1858              		.section	.debug_info,"",%progbits
 1859              	.Ldebug_info0:
 1860 0000 320A0000 		.4byte	0xa32
 1861 0004 0400     		.2byte	0x4
 1862 0006 00000000 		.4byte	.Ldebug_abbrev0
 1863 000a 04       		.byte	0x4
 1864 000b 01       		.uleb128 0x1
 1865 000c 67000000 		.4byte	.LASF96
 1866 0010 0C       		.byte	0xc
 1867 0011 D1050000 		.4byte	.LASF97
 1868 0015 AA020000 		.4byte	.LASF98
 1869 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1870 001d 00000000 		.4byte	0
 1871 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 97


 1872 0025 02       		.uleb128 0x2
 1873 0026 01       		.byte	0x1
 1874 0027 06       		.byte	0x6
 1875 0028 6F010000 		.4byte	.LASF0
 1876 002c 02       		.uleb128 0x2
 1877 002d 01       		.byte	0x1
 1878 002e 08       		.byte	0x8
 1879 002f 9A040000 		.4byte	.LASF1
 1880 0033 02       		.uleb128 0x2
 1881 0034 02       		.byte	0x2
 1882 0035 05       		.byte	0x5
 1883 0036 A8040000 		.4byte	.LASF2
 1884 003a 02       		.uleb128 0x2
 1885 003b 02       		.byte	0x2
 1886 003c 07       		.byte	0x7
 1887 003d 30030000 		.4byte	.LASF3
 1888 0041 02       		.uleb128 0x2
 1889 0042 04       		.byte	0x4
 1890 0043 05       		.byte	0x5
 1891 0044 AE010000 		.4byte	.LASF4
 1892 0048 02       		.uleb128 0x2
 1893 0049 04       		.byte	0x4
 1894 004a 07       		.byte	0x7
 1895 004b 98020000 		.4byte	.LASF5
 1896 004f 02       		.uleb128 0x2
 1897 0050 08       		.byte	0x8
 1898 0051 05       		.byte	0x5
 1899 0052 61010000 		.4byte	.LASF6
 1900 0056 02       		.uleb128 0x2
 1901 0057 08       		.byte	0x8
 1902 0058 07       		.byte	0x7
 1903 0059 F5000000 		.4byte	.LASF7
 1904 005d 03       		.uleb128 0x3
 1905 005e 04       		.byte	0x4
 1906 005f 05       		.byte	0x5
 1907 0060 696E7400 		.ascii	"int\000"
 1908 0064 02       		.uleb128 0x2
 1909 0065 04       		.byte	0x4
 1910 0066 07       		.byte	0x7
 1911 0067 7C020000 		.4byte	.LASF8
 1912 006b 04       		.uleb128 0x4
 1913 006c D9010000 		.4byte	.LASF9
 1914 0070 02       		.byte	0x2
 1915 0071 F701     		.2byte	0x1f7
 1916 0073 2C000000 		.4byte	0x2c
 1917 0077 04       		.uleb128 0x4
 1918 0078 0F000000 		.4byte	.LASF10
 1919 007c 02       		.byte	0x2
 1920 007d F801     		.2byte	0x1f8
 1921 007f 3A000000 		.4byte	0x3a
 1922 0083 04       		.uleb128 0x4
 1923 0084 02020000 		.4byte	.LASF11
 1924 0088 02       		.byte	0x2
 1925 0089 F901     		.2byte	0x1f9
 1926 008b 48000000 		.4byte	0x48
 1927 008f 02       		.uleb128 0x2
 1928 0090 04       		.byte	0x4
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 98


 1929 0091 04       		.byte	0x4
 1930 0092 36040000 		.4byte	.LASF12
 1931 0096 02       		.uleb128 0x2
 1932 0097 08       		.byte	0x8
 1933 0098 04       		.byte	0x4
 1934 0099 F5010000 		.4byte	.LASF13
 1935 009d 02       		.uleb128 0x2
 1936 009e 01       		.byte	0x1
 1937 009f 08       		.byte	0x8
 1938 00a0 EB040000 		.4byte	.LASF14
 1939 00a4 04       		.uleb128 0x4
 1940 00a5 8E040000 		.4byte	.LASF15
 1941 00a9 02       		.byte	0x2
 1942 00aa A102     		.2byte	0x2a1
 1943 00ac B0000000 		.4byte	0xb0
 1944 00b0 05       		.uleb128 0x5
 1945 00b1 6B000000 		.4byte	0x6b
 1946 00b5 04       		.uleb128 0x4
 1947 00b6 9E030000 		.4byte	.LASF16
 1948 00ba 02       		.byte	0x2
 1949 00bb A302     		.2byte	0x2a3
 1950 00bd C1000000 		.4byte	0xc1
 1951 00c1 05       		.uleb128 0x5
 1952 00c2 83000000 		.4byte	0x83
 1953 00c6 04       		.uleb128 0x4
 1954 00c7 F0040000 		.4byte	.LASF17
 1955 00cb 02       		.byte	0x2
 1956 00cc B302     		.2byte	0x2b3
 1957 00ce D2000000 		.4byte	0xd2
 1958 00d2 06       		.uleb128 0x6
 1959 00d3 04       		.byte	0x4
 1960 00d4 D8000000 		.4byte	0xd8
 1961 00d8 07       		.uleb128 0x7
 1962 00d9 02       		.uleb128 0x2
 1963 00da 08       		.byte	0x8
 1964 00db 04       		.byte	0x4
 1965 00dc DB030000 		.4byte	.LASF18
 1966 00e0 02       		.uleb128 0x2
 1967 00e1 04       		.byte	0x4
 1968 00e2 07       		.byte	0x7
 1969 00e3 C0030000 		.4byte	.LASF19
 1970 00e7 04       		.uleb128 0x4
 1971 00e8 52040000 		.4byte	.LASF20
 1972 00ec 03       		.byte	0x3
 1973 00ed 0801     		.2byte	0x108
 1974 00ef D2000000 		.4byte	0xd2
 1975 00f3 08       		.uleb128 0x8
 1976 00f4 C0050000 		.4byte	.LASF21
 1977 00f8 01       		.byte	0x1
 1978 00f9 62       		.byte	0x62
 1979 00fa 00000000 		.4byte	.LFB0
 1980 00fe 14000000 		.4byte	.LFE0-.LFB0
 1981 0102 01       		.uleb128 0x1
 1982 0103 9C       		.byte	0x9c
 1983 0104 08       		.uleb128 0x8
 1984 0105 E5020000 		.4byte	.LASF22
 1985 0109 01       		.byte	0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 99


 1986 010a 83       		.byte	0x83
 1987 010b 00000000 		.4byte	.LFB1
 1988 010f 10000000 		.4byte	.LFE1-.LFB1
 1989 0113 01       		.uleb128 0x1
 1990 0114 9C       		.byte	0x9c
 1991 0115 09       		.uleb128 0x9
 1992 0116 1F000000 		.4byte	.LASF25
 1993 011a 01       		.byte	0x1
 1994 011b 1C02     		.2byte	0x21c
 1995 011d 00000000 		.4byte	.LFB2
 1996 0121 20000000 		.4byte	.LFE2-.LFB2
 1997 0125 01       		.uleb128 0x1
 1998 0126 9C       		.byte	0x9c
 1999 0127 6E010000 		.4byte	0x16e
 2000 012b 0A       		.uleb128 0xa
 2001 012c D0040000 		.4byte	.LASF27
 2002 0130 01       		.byte	0x1
 2003 0131 1C02     		.2byte	0x21c
 2004 0133 83000000 		.4byte	0x83
 2005 0137 00000000 		.4byte	.LLST0
 2006 013b 0B       		.uleb128 0xb
 2007 013c 8C010000 		.4byte	.LASF23
 2008 0140 01       		.byte	0x1
 2009 0141 1E02     		.2byte	0x21e
 2010 0143 6B000000 		.4byte	0x6b
 2011 0147 2C000000 		.4byte	.LLST1
 2012 014b 0B       		.uleb128 0xb
 2013 014c FD050000 		.4byte	.LASF24
 2014 0150 01       		.byte	0x1
 2015 0151 1F02     		.2byte	0x21f
 2016 0153 83000000 		.4byte	0x83
 2017 0157 3F000000 		.4byte	.LLST2
 2018 015b 0C       		.uleb128 0xc
 2019 015c 08000000 		.4byte	.LVL1
 2020 0160 140A0000 		.4byte	0xa14
 2021 0164 0C       		.uleb128 0xc
 2022 0165 1A000000 		.4byte	.LVL5
 2023 0169 1F0A0000 		.4byte	0xa1f
 2024 016d 00       		.byte	0
 2025 016e 09       		.uleb128 0x9
 2026 016f 89030000 		.4byte	.LASF26
 2027 0173 01       		.byte	0x1
 2028 0174 6402     		.2byte	0x264
 2029 0176 00000000 		.4byte	.LFB3
 2030 017a 34000000 		.4byte	.LFE3-.LFB3
 2031 017e 01       		.uleb128 0x1
 2032 017f 9C       		.byte	0x9c
 2033 0180 93010000 		.4byte	0x193
 2034 0184 0D       		.uleb128 0xd
 2035 0185 EE010000 		.4byte	.LASF28
 2036 0189 01       		.byte	0x1
 2037 018a 6402     		.2byte	0x264
 2038 018c 83000000 		.4byte	0x83
 2039 0190 01       		.uleb128 0x1
 2040 0191 50       		.byte	0x50
 2041 0192 00       		.byte	0
 2042 0193 0E       		.uleb128 0xe
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 100


 2043 0194 0E020000 		.4byte	.LASF33
 2044 0198 01       		.byte	0x1
 2045 0199 8902     		.2byte	0x289
 2046 019b 83000000 		.4byte	0x83
 2047 019f 00000000 		.4byte	.LFB4
 2048 01a3 1C000000 		.4byte	.LFE4-.LFB4
 2049 01a7 01       		.uleb128 0x1
 2050 01a8 9C       		.byte	0x9c
 2051 01a9 E0010000 		.4byte	0x1e0
 2052 01ad 0B       		.uleb128 0xb
 2053 01ae 8C010000 		.4byte	.LASF23
 2054 01b2 01       		.byte	0x1
 2055 01b3 8B02     		.2byte	0x28b
 2056 01b5 6B000000 		.4byte	0x6b
 2057 01b9 5D000000 		.4byte	.LLST3
 2058 01bd 0B       		.uleb128 0xb
 2059 01be EF030000 		.4byte	.LASF29
 2060 01c2 01       		.byte	0x1
 2061 01c3 8C02     		.2byte	0x28c
 2062 01c5 83000000 		.4byte	0x83
 2063 01c9 70000000 		.4byte	.LLST4
 2064 01cd 0C       		.uleb128 0xc
 2065 01ce 06000000 		.4byte	.LVL8
 2066 01d2 140A0000 		.4byte	0xa14
 2067 01d6 0C       		.uleb128 0xc
 2068 01d7 12000000 		.4byte	.LVL10
 2069 01db 1F0A0000 		.4byte	0xa1f
 2070 01df 00       		.byte	0
 2071 01e0 09       		.uleb128 0x9
 2072 01e1 23050000 		.4byte	.LASF30
 2073 01e5 01       		.byte	0x1
 2074 01e6 C602     		.2byte	0x2c6
 2075 01e8 00000000 		.4byte	.LFB5
 2076 01ec 24000000 		.4byte	.LFE5-.LFB5
 2077 01f0 01       		.uleb128 0x1
 2078 01f1 9C       		.byte	0x9c
 2079 01f2 29020000 		.4byte	0x229
 2080 01f6 0A       		.uleb128 0xa
 2081 01f7 B8050000 		.4byte	.LASF31
 2082 01fb 01       		.byte	0x1
 2083 01fc C602     		.2byte	0x2c6
 2084 01fe 83000000 		.4byte	0x83
 2085 0202 8E000000 		.4byte	.LLST5
 2086 0206 0B       		.uleb128 0xb
 2087 0207 8C010000 		.4byte	.LASF23
 2088 020b 01       		.byte	0x1
 2089 020c C802     		.2byte	0x2c8
 2090 020e 6B000000 		.4byte	0x6b
 2091 0212 BA000000 		.4byte	.LLST6
 2092 0216 0C       		.uleb128 0xc
 2093 0217 08000000 		.4byte	.LVL13
 2094 021b 140A0000 		.4byte	0xa14
 2095 021f 0C       		.uleb128 0xc
 2096 0220 1E000000 		.4byte	.LVL15
 2097 0224 1F0A0000 		.4byte	0xa1f
 2098 0228 00       		.byte	0
 2099 0229 09       		.uleb128 0x9
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 101


 2100 022a 0D050000 		.4byte	.LASF32
 2101 022e 01       		.byte	0x1
 2102 022f 5204     		.2byte	0x452
 2103 0231 00000000 		.4byte	.LFB7
 2104 0235 24000000 		.4byte	.LFE7-.LFB7
 2105 0239 01       		.uleb128 0x1
 2106 023a 9C       		.byte	0x9c
 2107 023b 72020000 		.4byte	0x272
 2108 023f 0A       		.uleb128 0xa
 2109 0240 B8050000 		.4byte	.LASF31
 2110 0244 01       		.byte	0x1
 2111 0245 5204     		.2byte	0x452
 2112 0247 83000000 		.4byte	0x83
 2113 024b CD000000 		.4byte	.LLST7
 2114 024f 0B       		.uleb128 0xb
 2115 0250 8C010000 		.4byte	.LASF23
 2116 0254 01       		.byte	0x1
 2117 0255 5404     		.2byte	0x454
 2118 0257 6B000000 		.4byte	0x6b
 2119 025b F9000000 		.4byte	.LLST8
 2120 025f 0C       		.uleb128 0xc
 2121 0260 08000000 		.4byte	.LVL17
 2122 0264 140A0000 		.4byte	0xa14
 2123 0268 0C       		.uleb128 0xc
 2124 0269 1E000000 		.4byte	.LVL19
 2125 026d 1F0A0000 		.4byte	0xa1f
 2126 0271 00       		.byte	0
 2127 0272 0E       		.uleb128 0xe
 2128 0273 1C030000 		.4byte	.LASF34
 2129 0277 01       		.byte	0x1
 2130 0278 8A0A     		.2byte	0xa8a
 2131 027a 83000000 		.4byte	0x83
 2132 027e 00000000 		.4byte	.LFB8
 2133 0282 14000000 		.4byte	.LFE8-.LFB8
 2134 0286 01       		.uleb128 0x1
 2135 0287 9C       		.byte	0x9c
 2136 0288 AB020000 		.4byte	0x2ab
 2137 028c 0A       		.uleb128 0xa
 2138 028d E4040000 		.4byte	.LASF35
 2139 0291 01       		.byte	0x1
 2140 0292 8A0A     		.2byte	0xa8a
 2141 0294 83000000 		.4byte	0x83
 2142 0298 0C010000 		.4byte	.LLST9
 2143 029c 0F       		.uleb128 0xf
 2144 029d B3030000 		.4byte	.LASF36
 2145 02a1 01       		.byte	0x1
 2146 02a2 8C0A     		.2byte	0xa8c
 2147 02a4 83000000 		.4byte	0x83
 2148 02a8 01       		.uleb128 0x1
 2149 02a9 50       		.byte	0x50
 2150 02aa 00       		.byte	0
 2151 02ab 0E       		.uleb128 0xe
 2152 02ac 59000000 		.4byte	.LASF37
 2153 02b0 01       		.byte	0x1
 2154 02b1 A10A     		.2byte	0xaa1
 2155 02b3 83000000 		.4byte	0x83
 2156 02b7 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 102


 2157 02bb 10000000 		.4byte	.LFE9-.LFB9
 2158 02bf 01       		.uleb128 0x1
 2159 02c0 9C       		.byte	0x9c
 2160 02c1 D4020000 		.4byte	0x2d4
 2161 02c5 0F       		.uleb128 0xf
 2162 02c6 16000000 		.4byte	.LASF38
 2163 02ca 01       		.byte	0x1
 2164 02cb A30A     		.2byte	0xaa3
 2165 02cd 83000000 		.4byte	0x83
 2166 02d1 01       		.uleb128 0x1
 2167 02d2 50       		.byte	0x50
 2168 02d3 00       		.byte	0
 2169 02d4 09       		.uleb128 0x9
 2170 02d5 1D010000 		.4byte	.LASF39
 2171 02d9 01       		.byte	0x1
 2172 02da B80A     		.2byte	0xab8
 2173 02dc 00000000 		.4byte	.LFB10
 2174 02e0 0C000000 		.4byte	.LFE10-.LFB10
 2175 02e4 01       		.uleb128 0x1
 2176 02e5 9C       		.byte	0x9c
 2177 02e6 F9020000 		.4byte	0x2f9
 2178 02ea 0D       		.uleb128 0xd
 2179 02eb 09020000 		.4byte	.LASF40
 2180 02ef 01       		.byte	0x1
 2181 02f0 B80A     		.2byte	0xab8
 2182 02f2 83000000 		.4byte	0x83
 2183 02f6 01       		.uleb128 0x1
 2184 02f7 50       		.byte	0x50
 2185 02f8 00       		.byte	0
 2186 02f9 09       		.uleb128 0x9
 2187 02fa B2040000 		.4byte	.LASF41
 2188 02fe 01       		.byte	0x1
 2189 02ff 6F0B     		.2byte	0xb6f
 2190 0301 00000000 		.4byte	.LFB17
 2191 0305 14000000 		.4byte	.LFE17-.LFB17
 2192 0309 01       		.uleb128 0x1
 2193 030a 9C       		.byte	0x9c
 2194 030b 20030000 		.4byte	0x320
 2195 030f 0A       		.uleb128 0xa
 2196 0310 52030000 		.4byte	.LASF42
 2197 0314 01       		.byte	0x1
 2198 0315 6F0B     		.2byte	0xb6f
 2199 0317 6B000000 		.4byte	0x6b
 2200 031b 2A010000 		.4byte	.LLST10
 2201 031f 00       		.byte	0
 2202 0320 0E       		.uleb128 0xe
 2203 0321 53010000 		.4byte	.LASF43
 2204 0325 01       		.byte	0x1
 2205 0326 810B     		.2byte	0xb81
 2206 0328 6B000000 		.4byte	0x6b
 2207 032c 00000000 		.4byte	.LFB18
 2208 0330 18000000 		.4byte	.LFE18-.LFB18
 2209 0334 01       		.uleb128 0x1
 2210 0335 9C       		.byte	0x9c
 2211 0336 4B030000 		.4byte	0x34b
 2212 033a 0A       		.uleb128 0xa
 2213 033b 52030000 		.4byte	.LASF42
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 103


 2214 033f 01       		.byte	0x1
 2215 0340 810B     		.2byte	0xb81
 2216 0342 6B000000 		.4byte	0x6b
 2217 0346 4B010000 		.4byte	.LLST11
 2218 034a 00       		.byte	0
 2219 034b 09       		.uleb128 0x9
 2220 034c B7010000 		.4byte	.LASF44
 2221 0350 01       		.byte	0x1
 2222 0351 910B     		.2byte	0xb91
 2223 0353 00000000 		.4byte	.LFB19
 2224 0357 14000000 		.4byte	.LFE19-.LFB19
 2225 035b 01       		.uleb128 0x1
 2226 035c 9C       		.byte	0x9c
 2227 035d 72030000 		.4byte	0x372
 2228 0361 0A       		.uleb128 0xa
 2229 0362 52030000 		.4byte	.LASF42
 2230 0366 01       		.byte	0x1
 2231 0367 910B     		.2byte	0xb91
 2232 0369 6B000000 		.4byte	0x6b
 2233 036d 6C010000 		.4byte	.LLST12
 2234 0371 00       		.byte	0
 2235 0372 09       		.uleb128 0x9
 2236 0373 0C030000 		.4byte	.LASF45
 2237 0377 01       		.byte	0x1
 2238 0378 9F0B     		.2byte	0xb9f
 2239 037a 00000000 		.4byte	.LFB20
 2240 037e 14000000 		.4byte	.LFE20-.LFB20
 2241 0382 01       		.uleb128 0x1
 2242 0383 9C       		.byte	0x9c
 2243 0384 99030000 		.4byte	0x399
 2244 0388 0A       		.uleb128 0xa
 2245 0389 52030000 		.4byte	.LASF42
 2246 038d 01       		.byte	0x1
 2247 038e 9F0B     		.2byte	0xb9f
 2248 0390 6B000000 		.4byte	0x6b
 2249 0394 8D010000 		.4byte	.LLST13
 2250 0398 00       		.byte	0
 2251 0399 09       		.uleb128 0x9
 2252 039a C9030000 		.4byte	.LASF46
 2253 039e 01       		.byte	0x1
 2254 039f AE0B     		.2byte	0xbae
 2255 03a1 00000000 		.4byte	.LFB21
 2256 03a5 14000000 		.4byte	.LFE21-.LFB21
 2257 03a9 01       		.uleb128 0x1
 2258 03aa 9C       		.byte	0x9c
 2259 03ab C0030000 		.4byte	0x3c0
 2260 03af 0A       		.uleb128 0xa
 2261 03b0 52030000 		.4byte	.LASF42
 2262 03b4 01       		.byte	0x1
 2263 03b5 AE0B     		.2byte	0xbae
 2264 03b7 6B000000 		.4byte	0x6b
 2265 03bb AE010000 		.4byte	.LLST14
 2266 03bf 00       		.byte	0
 2267 03c0 09       		.uleb128 0x9
 2268 03c1 93040000 		.4byte	.LASF47
 2269 03c5 01       		.byte	0x1
 2270 03c6 BD0B     		.2byte	0xbbd
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 104


 2271 03c8 00000000 		.4byte	.LFB22
 2272 03cc 04000000 		.4byte	.LFE22-.LFB22
 2273 03d0 01       		.uleb128 0x1
 2274 03d1 9C       		.byte	0x9c
 2275 03d2 E5030000 		.4byte	0x3e5
 2276 03d6 0D       		.uleb128 0xd
 2277 03d7 E4040000 		.4byte	.LASF35
 2278 03db 01       		.byte	0x1
 2279 03dc BD0B     		.2byte	0xbbd
 2280 03de 6B000000 		.4byte	0x6b
 2281 03e2 01       		.uleb128 0x1
 2282 03e3 50       		.byte	0x50
 2283 03e4 00       		.byte	0
 2284 03e5 09       		.uleb128 0x9
 2285 03e6 62030000 		.4byte	.LASF48
 2286 03ea 01       		.byte	0x1
 2287 03eb B903     		.2byte	0x3b9
 2288 03ed 00000000 		.4byte	.LFB6
 2289 03f1 AC000000 		.4byte	.LFE6-.LFB6
 2290 03f5 01       		.uleb128 0x1
 2291 03f6 9C       		.byte	0x9c
 2292 03f7 80040000 		.4byte	0x480
 2293 03fb 0A       		.uleb128 0xa
 2294 03fc 7B010000 		.4byte	.LASF49
 2295 0400 01       		.byte	0x1
 2296 0401 B903     		.2byte	0x3b9
 2297 0403 83000000 		.4byte	0x83
 2298 0407 CF010000 		.4byte	.LLST15
 2299 040b 0B       		.uleb128 0xb
 2300 040c 8C010000 		.4byte	.LASF23
 2301 0410 01       		.byte	0x1
 2302 0411 BB03     		.2byte	0x3bb
 2303 0413 6B000000 		.4byte	0x6b
 2304 0417 1F020000 		.4byte	.LLST16
 2305 041b 0B       		.uleb128 0xb
 2306 041c 62050000 		.4byte	.LASF50
 2307 0420 01       		.byte	0x1
 2308 0421 BC03     		.2byte	0x3bc
 2309 0423 6B000000 		.4byte	0x6b
 2310 0427 32020000 		.4byte	.LLST17
 2311 042b 0C       		.uleb128 0xc
 2312 042c 14000000 		.4byte	.LVL38
 2313 0430 140A0000 		.4byte	0xa14
 2314 0434 10       		.uleb128 0x10
 2315 0435 50000000 		.4byte	.LVL43
 2316 0439 2A0A0000 		.4byte	0xa2a
 2317 043d 48040000 		.4byte	0x448
 2318 0441 11       		.uleb128 0x11
 2319 0442 01       		.uleb128 0x1
 2320 0443 50       		.byte	0x50
 2321 0444 02       		.uleb128 0x2
 2322 0445 08       		.byte	0x8
 2323 0446 32       		.byte	0x32
 2324 0447 00       		.byte	0
 2325 0448 10       		.uleb128 0x10
 2326 0449 70000000 		.4byte	.LVL44
 2327 044d 2A0A0000 		.4byte	0xa2a
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 105


 2328 0451 5C040000 		.4byte	0x45c
 2329 0455 11       		.uleb128 0x11
 2330 0456 01       		.uleb128 0x1
 2331 0457 50       		.byte	0x50
 2332 0458 02       		.uleb128 0x2
 2333 0459 08       		.byte	0x8
 2334 045a 32       		.byte	0x32
 2335 045b 00       		.byte	0
 2336 045c 10       		.uleb128 0x10
 2337 045d 88000000 		.4byte	.LVL46
 2338 0461 1F0A0000 		.4byte	0xa1f
 2339 0465 70040000 		.4byte	0x470
 2340 0469 11       		.uleb128 0x11
 2341 046a 01       		.uleb128 0x1
 2342 046b 50       		.byte	0x50
 2343 046c 02       		.uleb128 0x2
 2344 046d 75       		.byte	0x75
 2345 046e 00       		.sleb128 0
 2346 046f 00       		.byte	0
 2347 0470 12       		.uleb128 0x12
 2348 0471 90000000 		.4byte	.LVL49
 2349 0475 C0030000 		.4byte	0x3c0
 2350 0479 11       		.uleb128 0x11
 2351 047a 01       		.uleb128 0x1
 2352 047b 50       		.byte	0x50
 2353 047c 01       		.uleb128 0x1
 2354 047d 30       		.byte	0x30
 2355 047e 00       		.byte	0
 2356 047f 00       		.byte	0
 2357 0480 0E       		.uleb128 0xe
 2358 0481 77030000 		.4byte	.LASF51
 2359 0485 01       		.byte	0x1
 2360 0486 D10A     		.2byte	0xad1
 2361 0488 C6000000 		.4byte	0xc6
 2362 048c 00000000 		.4byte	.LFB11
 2363 0490 20000000 		.4byte	.LFE11-.LFB11
 2364 0494 01       		.uleb128 0x1
 2365 0495 9C       		.byte	0x9c
 2366 0496 E8040000 		.4byte	0x4e8
 2367 049a 0A       		.uleb128 0xa
 2368 049b 52030000 		.4byte	.LASF42
 2369 049f 01       		.byte	0x1
 2370 04a0 D10A     		.2byte	0xad1
 2371 04a2 6B000000 		.4byte	0x6b
 2372 04a6 56020000 		.4byte	.LLST18
 2373 04aa 0A       		.uleb128 0xa
 2374 04ab E7030000 		.4byte	.LASF52
 2375 04af 01       		.byte	0x1
 2376 04b0 D10A     		.2byte	0xad1
 2377 04b2 C6000000 		.4byte	0xc6
 2378 04b6 77020000 		.4byte	.LLST19
 2379 04ba 0F       		.uleb128 0xf
 2380 04bb 4B000000 		.4byte	.LASF53
 2381 04bf 01       		.byte	0x1
 2382 04c0 D30A     		.2byte	0xad3
 2383 04c2 C6000000 		.4byte	0xc6
 2384 04c6 01       		.uleb128 0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 106


 2385 04c7 50       		.byte	0x50
 2386 04c8 13       		.uleb128 0x13
 2387 04c9 00000000 		.4byte	.LASF54
 2388 04cd 01       		.byte	0x1
 2389 04ce D40A     		.2byte	0xad4
 2390 04d0 E8040000 		.4byte	0x4e8
 2391 04d4 00000020 		.4byte	0x20000000
 2392 04d8 12       		.uleb128 0x12
 2393 04d9 10000000 		.4byte	.LVL53
 2394 04dd C0030000 		.4byte	0x3c0
 2395 04e1 11       		.uleb128 0x11
 2396 04e2 01       		.uleb128 0x1
 2397 04e3 50       		.byte	0x50
 2398 04e4 01       		.uleb128 0x1
 2399 04e5 30       		.byte	0x30
 2400 04e6 00       		.byte	0
 2401 04e7 00       		.byte	0
 2402 04e8 06       		.uleb128 0x6
 2403 04e9 04       		.byte	0x4
 2404 04ea C6000000 		.4byte	0xc6
 2405 04ee 0E       		.uleb128 0xe
 2406 04ef BE040000 		.4byte	.LASF55
 2407 04f3 01       		.byte	0x1
 2408 04f4 F30A     		.2byte	0xaf3
 2409 04f6 C6000000 		.4byte	0xc6
 2410 04fa 00000000 		.4byte	.LFB12
 2411 04fe 1C000000 		.4byte	.LFE12-.LFB12
 2412 0502 01       		.uleb128 0x1
 2413 0503 9C       		.byte	0x9c
 2414 0504 38050000 		.4byte	0x538
 2415 0508 0A       		.uleb128 0xa
 2416 0509 52030000 		.4byte	.LASF42
 2417 050d 01       		.byte	0x1
 2418 050e F30A     		.2byte	0xaf3
 2419 0510 6B000000 		.4byte	0x6b
 2420 0514 A3020000 		.4byte	.LLST20
 2421 0518 13       		.uleb128 0x13
 2422 0519 00000000 		.4byte	.LASF54
 2423 051d 01       		.byte	0x1
 2424 051e F50A     		.2byte	0xaf5
 2425 0520 E8040000 		.4byte	0x4e8
 2426 0524 00000020 		.4byte	0x20000000
 2427 0528 12       		.uleb128 0x12
 2428 0529 0E000000 		.4byte	.LVL59
 2429 052d C0030000 		.4byte	0x3c0
 2430 0531 11       		.uleb128 0x11
 2431 0532 01       		.uleb128 0x1
 2432 0533 50       		.byte	0x50
 2433 0534 01       		.uleb128 0x1
 2434 0535 30       		.byte	0x30
 2435 0536 00       		.byte	0
 2436 0537 00       		.byte	0
 2437 0538 0E       		.uleb128 0xe
 2438 0539 43030000 		.4byte	.LASF56
 2439 053d 01       		.byte	0x1
 2440 053e 090B     		.2byte	0xb09
 2441 0540 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 107


 2442 0544 00000000 		.4byte	.LFB13
 2443 0548 22000000 		.4byte	.LFE13-.LFB13
 2444 054c 01       		.uleb128 0x1
 2445 054d 9C       		.byte	0x9c
 2446 054e A0050000 		.4byte	0x5a0
 2447 0552 0A       		.uleb128 0xa
 2448 0553 52030000 		.4byte	.LASF42
 2449 0557 01       		.byte	0x1
 2450 0558 090B     		.2byte	0xb09
 2451 055a 6B000000 		.4byte	0x6b
 2452 055e C4020000 		.4byte	.LLST21
 2453 0562 0A       		.uleb128 0xa
 2454 0563 E7030000 		.4byte	.LASF52
 2455 0567 01       		.byte	0x1
 2456 0568 090B     		.2byte	0xb09
 2457 056a C6000000 		.4byte	0xc6
 2458 056e E5020000 		.4byte	.LLST22
 2459 0572 0F       		.uleb128 0xf
 2460 0573 4B000000 		.4byte	.LASF53
 2461 0577 01       		.byte	0x1
 2462 0578 0B0B     		.2byte	0xb0b
 2463 057a C6000000 		.4byte	0xc6
 2464 057e 01       		.uleb128 0x1
 2465 057f 50       		.byte	0x50
 2466 0580 13       		.uleb128 0x13
 2467 0581 00000000 		.4byte	.LASF54
 2468 0585 01       		.byte	0x1
 2469 0586 0C0B     		.2byte	0xb0c
 2470 0588 E8040000 		.4byte	0x4e8
 2471 058c 00000020 		.4byte	0x20000000
 2472 0590 12       		.uleb128 0x12
 2473 0591 10000000 		.4byte	.LVL63
 2474 0595 C0030000 		.4byte	0x3c0
 2475 0599 11       		.uleb128 0x11
 2476 059a 01       		.uleb128 0x1
 2477 059b 50       		.byte	0x50
 2478 059c 01       		.uleb128 0x1
 2479 059d 30       		.byte	0x30
 2480 059e 00       		.byte	0
 2481 059f 00       		.byte	0
 2482 05a0 0E       		.uleb128 0xe
 2483 05a1 64040000 		.4byte	.LASF57
 2484 05a5 01       		.byte	0x1
 2485 05a6 250B     		.2byte	0xb25
 2486 05a8 C6000000 		.4byte	0xc6
 2487 05ac 00000000 		.4byte	.LFB14
 2488 05b0 1E000000 		.4byte	.LFE14-.LFB14
 2489 05b4 01       		.uleb128 0x1
 2490 05b5 9C       		.byte	0x9c
 2491 05b6 EA050000 		.4byte	0x5ea
 2492 05ba 0A       		.uleb128 0xa
 2493 05bb 52030000 		.4byte	.LASF42
 2494 05bf 01       		.byte	0x1
 2495 05c0 250B     		.2byte	0xb25
 2496 05c2 6B000000 		.4byte	0x6b
 2497 05c6 11030000 		.4byte	.LLST23
 2498 05ca 13       		.uleb128 0x13
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 108


 2499 05cb 00000000 		.4byte	.LASF54
 2500 05cf 01       		.byte	0x1
 2501 05d0 270B     		.2byte	0xb27
 2502 05d2 E8040000 		.4byte	0x4e8
 2503 05d6 00000020 		.4byte	0x20000000
 2504 05da 12       		.uleb128 0x12
 2505 05db 0E000000 		.4byte	.LVL69
 2506 05df C0030000 		.4byte	0x3c0
 2507 05e3 11       		.uleb128 0x11
 2508 05e4 01       		.uleb128 0x1
 2509 05e5 50       		.byte	0x50
 2510 05e6 01       		.uleb128 0x1
 2511 05e7 30       		.byte	0x30
 2512 05e8 00       		.byte	0
 2513 05e9 00       		.byte	0
 2514 05ea 09       		.uleb128 0x9
 2515 05eb 25040000 		.4byte	.LASF58
 2516 05ef 01       		.byte	0x1
 2517 05f0 380B     		.2byte	0xb38
 2518 05f2 00000000 		.4byte	.LFB15
 2519 05f6 4C000000 		.4byte	.LFE15-.LFB15
 2520 05fa 01       		.uleb128 0x1
 2521 05fb 9C       		.byte	0x9c
 2522 05fc 89060000 		.4byte	0x689
 2523 0600 0A       		.uleb128 0xa
 2524 0601 52030000 		.4byte	.LASF42
 2525 0605 01       		.byte	0x1
 2526 0606 380B     		.2byte	0xb38
 2527 0608 6B000000 		.4byte	0x6b
 2528 060c 32030000 		.4byte	.LLST24
 2529 0610 0A       		.uleb128 0xa
 2530 0611 59030000 		.4byte	.LASF59
 2531 0615 01       		.byte	0x1
 2532 0616 380B     		.2byte	0xb38
 2533 0618 6B000000 		.4byte	0x6b
 2534 061c 53030000 		.4byte	.LLST25
 2535 0620 0B       		.uleb128 0xb
 2536 0621 8C010000 		.4byte	.LASF23
 2537 0625 01       		.byte	0x1
 2538 0626 3A0B     		.2byte	0xb3a
 2539 0628 6B000000 		.4byte	0x6b
 2540 062c 74030000 		.4byte	.LLST26
 2541 0630 0B       		.uleb128 0xb
 2542 0631 FC010000 		.4byte	.LASF60
 2543 0635 01       		.byte	0x1
 2544 0636 3B0B     		.2byte	0xb3b
 2545 0638 83000000 		.4byte	0x83
 2546 063c 87030000 		.4byte	.LLST27
 2547 0640 0B       		.uleb128 0xb
 2548 0641 52020000 		.4byte	.LASF61
 2549 0645 01       		.byte	0x1
 2550 0646 3C0B     		.2byte	0xb3c
 2551 0648 83000000 		.4byte	0x83
 2552 064c 9A030000 		.4byte	.LLST28
 2553 0650 10       		.uleb128 0x10
 2554 0651 10000000 		.4byte	.LVL72
 2555 0655 C0030000 		.4byte	0x3c0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 109


 2556 0659 63060000 		.4byte	0x663
 2557 065d 11       		.uleb128 0x11
 2558 065e 01       		.uleb128 0x1
 2559 065f 50       		.byte	0x50
 2560 0660 01       		.uleb128 0x1
 2561 0661 30       		.byte	0x30
 2562 0662 00       		.byte	0
 2563 0663 10       		.uleb128 0x10
 2564 0664 1A000000 		.4byte	.LVL73
 2565 0668 C0030000 		.4byte	0x3c0
 2566 066c 76060000 		.4byte	0x676
 2567 0670 11       		.uleb128 0x11
 2568 0671 01       		.uleb128 0x1
 2569 0672 50       		.byte	0x50
 2570 0673 01       		.uleb128 0x1
 2571 0674 30       		.byte	0x30
 2572 0675 00       		.byte	0
 2573 0676 0C       		.uleb128 0xc
 2574 0677 26000000 		.4byte	.LVL75
 2575 067b 140A0000 		.4byte	0xa14
 2576 067f 0C       		.uleb128 0xc
 2577 0680 46000000 		.4byte	.LVL81
 2578 0684 1F0A0000 		.4byte	0xa1f
 2579 0688 00       		.byte	0
 2580 0689 0E       		.uleb128 0xe
 2581 068a 26020000 		.4byte	.LASF62
 2582 068e 01       		.byte	0x1
 2583 068f 5A0B     		.2byte	0xb5a
 2584 0691 6B000000 		.4byte	0x6b
 2585 0695 00000000 		.4byte	.LFB16
 2586 0699 2C000000 		.4byte	.LFE16-.LFB16
 2587 069d 01       		.uleb128 0x1
 2588 069e 9C       		.byte	0x9c
 2589 069f D3060000 		.4byte	0x6d3
 2590 06a3 0A       		.uleb128 0xa
 2591 06a4 52030000 		.4byte	.LASF42
 2592 06a8 01       		.byte	0x1
 2593 06a9 5A0B     		.2byte	0xb5a
 2594 06ab 6B000000 		.4byte	0x6b
 2595 06af CE030000 		.4byte	.LLST29
 2596 06b3 0B       		.uleb128 0xb
 2597 06b4 59030000 		.4byte	.LASF59
 2598 06b8 01       		.byte	0x1
 2599 06b9 5C0B     		.2byte	0xb5c
 2600 06bb 6B000000 		.4byte	0x6b
 2601 06bf EF030000 		.4byte	.LLST30
 2602 06c3 12       		.uleb128 0x12
 2603 06c4 0E000000 		.4byte	.LVL85
 2604 06c8 C0030000 		.4byte	0x3c0
 2605 06cc 11       		.uleb128 0x11
 2606 06cd 01       		.uleb128 0x1
 2607 06ce 50       		.byte	0x50
 2608 06cf 01       		.uleb128 0x1
 2609 06d0 30       		.byte	0x30
 2610 06d1 00       		.byte	0
 2611 06d2 00       		.byte	0
 2612 06d3 14       		.uleb128 0x14
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 110


 2613 06d4 2A010000 		.4byte	.LASF63
 2614 06d8 01       		.byte	0x1
 2615 06d9 D50B     		.2byte	0xbd5
 2616 06db 00000000 		.4byte	.LFB23
 2617 06df 18000000 		.4byte	.LFE23-.LFB23
 2618 06e3 01       		.uleb128 0x1
 2619 06e4 9C       		.byte	0x9c
 2620 06e5 09       		.uleb128 0x9
 2621 06e6 79050000 		.4byte	.LASF64
 2622 06ea 01       		.byte	0x1
 2623 06eb E90B     		.2byte	0xbe9
 2624 06ed 00000000 		.4byte	.LFB24
 2625 06f1 30000000 		.4byte	.LFE24-.LFB24
 2626 06f5 01       		.uleb128 0x1
 2627 06f6 9C       		.byte	0x9c
 2628 06f7 1E070000 		.4byte	0x71e
 2629 06fb 0A       		.uleb128 0xa
 2630 06fc 73040000 		.4byte	.LASF65
 2631 0700 01       		.byte	0x1
 2632 0701 E90B     		.2byte	0xbe9
 2633 0703 83000000 		.4byte	0x83
 2634 0707 02040000 		.4byte	.LLST31
 2635 070b 0C       		.uleb128 0xc
 2636 070c 0E000000 		.4byte	.LVL90
 2637 0710 2A0A0000 		.4byte	0xa2a
 2638 0714 0C       		.uleb128 0xc
 2639 0715 26000000 		.4byte	.LVL92
 2640 0719 2A0A0000 		.4byte	0xa2a
 2641 071d 00       		.byte	0
 2642 071e 09       		.uleb128 0x9
 2643 071f DA040000 		.4byte	.LASF66
 2644 0723 01       		.byte	0x1
 2645 0724 000C     		.2byte	0xc00
 2646 0726 00000000 		.4byte	.LFB25
 2647 072a 14000000 		.4byte	.LFE25-.LFB25
 2648 072e 01       		.uleb128 0x1
 2649 072f 9C       		.byte	0x9c
 2650 0730 4E070000 		.4byte	0x74e
 2651 0734 0A       		.uleb128 0xa
 2652 0735 F0050000 		.4byte	.LASF67
 2653 0739 01       		.byte	0x1
 2654 073a 000C     		.2byte	0xc00
 2655 073c 77000000 		.4byte	0x77
 2656 0740 20040000 		.4byte	.LLST32
 2657 0744 0C       		.uleb128 0xc
 2658 0745 0C000000 		.4byte	.LVL96
 2659 0749 2A0A0000 		.4byte	0xa2a
 2660 074d 00       		.byte	0
 2661 074e 15       		.uleb128 0x15
 2662 074f 80010000 		.4byte	.LASF68
 2663 0753 01       		.byte	0x1
 2664 0754 0E0C     		.2byte	0xc0e
 2665 0756 00000000 		.4byte	.LFB26
 2666 075a 4C000000 		.4byte	.LFE26-.LFB26
 2667 075e 01       		.uleb128 0x1
 2668 075f 9C       		.byte	0x9c
 2669 0760 75070000 		.4byte	0x775
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 111


 2670 0764 0A       		.uleb128 0xa
 2671 0765 7B010000 		.4byte	.LASF49
 2672 0769 01       		.byte	0x1
 2673 076a 0E0C     		.2byte	0xc0e
 2674 076c 83000000 		.4byte	0x83
 2675 0770 41040000 		.4byte	.LLST33
 2676 0774 00       		.byte	0
 2677 0775 14       		.uleb128 0x14
 2678 0776 AA050000 		.4byte	.LASF69
 2679 077a 01       		.byte	0x1
 2680 077b 7A0C     		.2byte	0xc7a
 2681 077d 00000000 		.4byte	.LFB30
 2682 0781 10000000 		.4byte	.LFE30-.LFB30
 2683 0785 01       		.uleb128 0x1
 2684 0786 9C       		.byte	0x9c
 2685 0787 14       		.uleb128 0x14
 2686 0788 3A010000 		.4byte	.LASF70
 2687 078c 01       		.byte	0x1
 2688 078d 8A0C     		.2byte	0xc8a
 2689 078f 00000000 		.4byte	.LFB31
 2690 0793 10000000 		.4byte	.LFE31-.LFB31
 2691 0797 01       		.uleb128 0x1
 2692 0798 9C       		.byte	0x9c
 2693 0799 09       		.uleb128 0x9
 2694 079a FD040000 		.4byte	.LASF71
 2695 079e 01       		.byte	0x1
 2696 079f 690C     		.2byte	0xc69
 2697 07a1 00000000 		.4byte	.LFB29
 2698 07a5 18000000 		.4byte	.LFE29-.LFB29
 2699 07a9 01       		.uleb128 0x1
 2700 07aa 9C       		.byte	0x9c
 2701 07ab B9070000 		.4byte	0x7b9
 2702 07af 0C       		.uleb128 0xc
 2703 07b0 06000000 		.4byte	.LVL101
 2704 07b4 87070000 		.4byte	0x787
 2705 07b8 00       		.byte	0
 2706 07b9 14       		.uleb128 0x14
 2707 07ba 81050000 		.4byte	.LASF72
 2708 07be 01       		.byte	0x1
 2709 07bf 9A0C     		.2byte	0xc9a
 2710 07c1 00000000 		.4byte	.LFB32
 2711 07c5 10000000 		.4byte	.LFE32-.LFB32
 2712 07c9 01       		.uleb128 0x1
 2713 07ca 9C       		.byte	0x9c
 2714 07cb 09       		.uleb128 0x9
 2715 07cc 04060000 		.4byte	.LASF73
 2716 07d0 01       		.byte	0x1
 2717 07d1 AB0C     		.2byte	0xcab
 2718 07d3 00000000 		.4byte	.LFB33
 2719 07d7 10000000 		.4byte	.LFE33-.LFB33
 2720 07db 01       		.uleb128 0x1
 2721 07dc 9C       		.byte	0x9c
 2722 07dd F2070000 		.4byte	0x7f2
 2723 07e1 0A       		.uleb128 0xa
 2724 07e2 52020000 		.4byte	.LASF61
 2725 07e6 01       		.byte	0x1
 2726 07e7 AB0C     		.2byte	0xcab
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 112


 2727 07e9 83000000 		.4byte	0x83
 2728 07ed 62040000 		.4byte	.LLST34
 2729 07f1 00       		.byte	0
 2730 07f2 16       		.uleb128 0x16
 2731 07f3 9B010000 		.4byte	.LASF74
 2732 07f7 01       		.byte	0x1
 2733 07f8 BB0C     		.2byte	0xcbb
 2734 07fa 83000000 		.4byte	0x83
 2735 07fe 00000000 		.4byte	.LFB34
 2736 0802 10000000 		.4byte	.LFE34-.LFB34
 2737 0806 01       		.uleb128 0x1
 2738 0807 9C       		.byte	0x9c
 2739 0808 16       		.uleb128 0x16
 2740 0809 05040000 		.4byte	.LASF75
 2741 080d 01       		.byte	0x1
 2742 080e CB0C     		.2byte	0xccb
 2743 0810 83000000 		.4byte	0x83
 2744 0814 00000000 		.4byte	.LFB35
 2745 0818 10000000 		.4byte	.LFE35-.LFB35
 2746 081c 01       		.uleb128 0x1
 2747 081d 9C       		.byte	0x9c
 2748 081e 16       		.uleb128 0x16
 2749 081f 66020000 		.4byte	.LASF76
 2750 0823 01       		.byte	0x1
 2751 0824 1B0D     		.2byte	0xd1b
 2752 0826 83000000 		.4byte	0x83
 2753 082a 00000000 		.4byte	.LFB36
 2754 082e 10000000 		.4byte	.LFE36-.LFB36
 2755 0832 01       		.uleb128 0x1
 2756 0833 9C       		.byte	0x9c
 2757 0834 17       		.uleb128 0x17
 2758 0835 17060000 		.4byte	.LASF99
 2759 0839 01       		.byte	0x1
 2760 083a 700D     		.2byte	0xd70
 2761 083c 00000000 		.4byte	.LFB40
 2762 0840 28000000 		.4byte	.LFE40-.LFB40
 2763 0844 01       		.uleb128 0x1
 2764 0845 9C       		.byte	0x9c
 2765 0846 62080000 		.4byte	0x862
 2766 084a 18       		.uleb128 0x18
 2767 084b 6900     		.ascii	"i\000"
 2768 084d 01       		.byte	0x1
 2769 084e 720D     		.2byte	0xd72
 2770 0850 83000000 		.4byte	0x83
 2771 0854 83040000 		.4byte	.LLST35
 2772 0858 0C       		.uleb128 0xc
 2773 0859 06000000 		.4byte	.LVL104
 2774 085d 1E080000 		.4byte	0x81e
 2775 0861 00       		.byte	0
 2776 0862 14       		.uleb128 0x14
 2777 0863 89020000 		.4byte	.LASF77
 2778 0867 01       		.byte	0x1
 2779 0868 280D     		.2byte	0xd28
 2780 086a 00000000 		.4byte	.LFB37
 2781 086e 0C000000 		.4byte	.LFE37-.LFB37
 2782 0872 01       		.uleb128 0x1
 2783 0873 9C       		.byte	0x9c
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 113


 2784 0874 15       		.uleb128 0x15
 2785 0875 44020000 		.4byte	.LASF78
 2786 0879 01       		.byte	0x1
 2787 087a 4B0C     		.2byte	0xc4b
 2788 087c 00000000 		.4byte	.LFB28
 2789 0880 40000000 		.4byte	.LFE28-.LFB28
 2790 0884 01       		.uleb128 0x1
 2791 0885 9C       		.byte	0x9c
 2792 0886 C7080000 		.4byte	0x8c7
 2793 088a 18       		.uleb128 0x18
 2794 088b 6900     		.ascii	"i\000"
 2795 088d 01       		.byte	0x1
 2796 088e 4D0C     		.2byte	0xc4d
 2797 0890 83000000 		.4byte	0x83
 2798 0894 A1040000 		.4byte	.LLST36
 2799 0898 10       		.uleb128 0x10
 2800 0899 1C000000 		.4byte	.LVL114
 2801 089d 80040000 		.4byte	0x480
 2802 08a1 B4080000 		.4byte	0x8b4
 2803 08a5 11       		.uleb128 0x11
 2804 08a6 01       		.uleb128 0x1
 2805 08a7 50       		.byte	0x50
 2806 08a8 01       		.uleb128 0x1
 2807 08a9 3F       		.byte	0x3f
 2808 08aa 11       		.uleb128 0x11
 2809 08ab 01       		.uleb128 0x1
 2810 08ac 51       		.byte	0x51
 2811 08ad 05       		.uleb128 0x5
 2812 08ae 03       		.byte	0x3
 2813 08af 00000000 		.4byte	CySysTickServiceCallbacks
 2814 08b3 00       		.byte	0
 2815 08b4 0C       		.uleb128 0xc
 2816 08b5 2C000000 		.4byte	.LVL116
 2817 08b9 CB070000 		.4byte	0x7cb
 2818 08bd 0C       		.uleb128 0xc
 2819 08be 30000000 		.4byte	.LVL117
 2820 08c2 62080000 		.4byte	0x862
 2821 08c6 00       		.byte	0
 2822 08c7 09       		.uleb128 0x9
 2823 08c8 A4030000 		.4byte	.LASF79
 2824 08cc 01       		.byte	0x1
 2825 08cd 2E0C     		.2byte	0xc2e
 2826 08cf 00000000 		.4byte	.LFB27
 2827 08d3 20000000 		.4byte	.LFE27-.LFB27
 2828 08d7 01       		.uleb128 0x1
 2829 08d8 9C       		.byte	0x9c
 2830 08d9 F0080000 		.4byte	0x8f0
 2831 08dd 0C       		.uleb128 0xc
 2832 08de 0E000000 		.4byte	.LVL118
 2833 08e2 74080000 		.4byte	0x874
 2834 08e6 0C       		.uleb128 0xc
 2835 08e7 18000000 		.4byte	.LVL119
 2836 08eb 99070000 		.4byte	0x799
 2837 08ef 00       		.byte	0
 2838 08f0 0E       		.uleb128 0xe
 2839 08f1 3A050000 		.4byte	.LASF80
 2840 08f5 01       		.byte	0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 114


 2841 08f6 4B0D     		.2byte	0xd4b
 2842 08f8 E7000000 		.4byte	0xe7
 2843 08fc 00000000 		.4byte	.LFB38
 2844 0900 10000000 		.4byte	.LFE38-.LFB38
 2845 0904 01       		.uleb128 0x1
 2846 0905 9C       		.byte	0x9c
 2847 0906 37090000 		.4byte	0x937
 2848 090a 0A       		.uleb128 0xa
 2849 090b 52030000 		.4byte	.LASF42
 2850 090f 01       		.byte	0x1
 2851 0910 4B0D     		.2byte	0xd4b
 2852 0912 83000000 		.4byte	0x83
 2853 0916 C0040000 		.4byte	.LLST37
 2854 091a 0D       		.uleb128 0xd
 2855 091b FC030000 		.4byte	.LASF81
 2856 091f 01       		.byte	0x1
 2857 0920 4B0D     		.2byte	0xd4b
 2858 0922 E7000000 		.4byte	0xe7
 2859 0926 01       		.uleb128 0x1
 2860 0927 51       		.byte	0x51
 2861 0928 0F       		.uleb128 0xf
 2862 0929 52000000 		.4byte	.LASF82
 2863 092d 01       		.byte	0x1
 2864 092e 4D0D     		.2byte	0xd4d
 2865 0930 E7000000 		.4byte	0xe7
 2866 0934 01       		.uleb128 0x1
 2867 0935 50       		.byte	0x50
 2868 0936 00       		.byte	0
 2869 0937 0E       		.uleb128 0xe
 2870 0938 C4010000 		.4byte	.LASF83
 2871 093c 01       		.byte	0x1
 2872 093d 630D     		.2byte	0xd63
 2873 093f E7000000 		.4byte	0xe7
 2874 0943 00000000 		.4byte	.LFB39
 2875 0947 0C000000 		.4byte	.LFE39-.LFB39
 2876 094b 01       		.uleb128 0x1
 2877 094c 9C       		.byte	0x9c
 2878 094d 62090000 		.4byte	0x962
 2879 0951 0A       		.uleb128 0xa
 2880 0952 52030000 		.4byte	.LASF42
 2881 0956 01       		.byte	0x1
 2882 0957 630D     		.2byte	0xd63
 2883 0959 83000000 		.4byte	0x83
 2884 095d E1040000 		.4byte	.LLST38
 2885 0961 00       		.byte	0
 2886 0962 09       		.uleb128 0x9
 2887 0963 58020000 		.4byte	.LASF84
 2888 0967 01       		.byte	0x1
 2889 0968 900D     		.2byte	0xd90
 2890 096a 00000000 		.4byte	.LFB41
 2891 096e 70000000 		.4byte	.LFE41-.LFB41
 2892 0972 01       		.uleb128 0x1
 2893 0973 9C       		.byte	0x9c
 2894 0974 87090000 		.4byte	0x987
 2895 0978 0D       		.uleb128 0xd
 2896 0979 70050000 		.4byte	.LASF85
 2897 097d 01       		.byte	0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 115


 2898 097e 900D     		.2byte	0xd90
 2899 0980 87090000 		.4byte	0x987
 2900 0984 01       		.uleb128 0x1
 2901 0985 50       		.byte	0x50
 2902 0986 00       		.byte	0
 2903 0987 06       		.uleb128 0x6
 2904 0988 04       		.byte	0x4
 2905 0989 83000000 		.4byte	0x83
 2906 098d 19       		.uleb128 0x19
 2907 098e E7000000 		.4byte	0xe7
 2908 0992 9D090000 		.4byte	0x99d
 2909 0996 1A       		.uleb128 0x1a
 2910 0997 E0000000 		.4byte	0xe0
 2911 099b 04       		.byte	0x4
 2912 099c 00       		.byte	0
 2913 099d 1B       		.uleb128 0x1b
 2914 099e 4F050000 		.4byte	.LASF86
 2915 09a2 01       		.byte	0x1
 2916 09a3 22       		.byte	0x22
 2917 09a4 8D090000 		.4byte	0x98d
 2918 09a8 05       		.uleb128 0x5
 2919 09a9 03       		.byte	0x3
 2920 09aa 00000000 		.4byte	CySysTickCallbacks
 2921 09ae 1C       		.uleb128 0x1c
 2922 09af 17040000 		.4byte	.LASF87
 2923 09b3 01       		.byte	0x1
 2924 09b4 1B       		.byte	0x1b
 2925 09b5 83000000 		.4byte	0x83
 2926 09b9 05       		.uleb128 0x5
 2927 09ba 03       		.byte	0x3
 2928 09bb 00000000 		.4byte	cydelayFreqHz
 2929 09bf 1C       		.uleb128 0x1c
 2930 09c0 DF010000 		.4byte	.LASF88
 2931 09c4 01       		.byte	0x1
 2932 09c5 1C       		.byte	0x1c
 2933 09c6 83000000 		.4byte	0x83
 2934 09ca 05       		.uleb128 0x5
 2935 09cb 03       		.byte	0x3
 2936 09cc 00000000 		.4byte	cydelayFreqKhz
 2937 09d0 1C       		.uleb128 0x1c
 2938 09d1 9B050000 		.4byte	.LASF89
 2939 09d5 01       		.byte	0x1
 2940 09d6 1D       		.byte	0x1d
 2941 09d7 6B000000 		.4byte	0x6b
 2942 09db 05       		.uleb128 0x5
 2943 09dc 03       		.byte	0x3
 2944 09dd 00000000 		.4byte	cydelayFreqMhz
 2945 09e1 1C       		.uleb128 0x1c
 2946 09e2 37020000 		.4byte	.LASF90
 2947 09e6 01       		.byte	0x1
 2948 09e7 1E       		.byte	0x1e
 2949 09e8 83000000 		.4byte	0x83
 2950 09ec 05       		.uleb128 0x5
 2951 09ed 03       		.byte	0x3
 2952 09ee 00000000 		.4byte	cydelay32kMs
 2953 09f2 1C       		.uleb128 0x1c
 2954 09f3 0C010000 		.4byte	.LASF91
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 116


 2955 09f7 01       		.byte	0x1
 2956 09f8 36       		.byte	0x36
 2957 09f9 83000000 		.4byte	0x83
 2958 09fd 05       		.uleb128 0x5
 2959 09fe 03       		.byte	0x3
 2960 09ff 00000000 		.4byte	CySysTickInitVar
 2961 0a03 1C       		.uleb128 0x1c
 2962 0a04 38000000 		.4byte	.LASF92
 2963 0a08 01       		.byte	0x1
 2964 0a09 51       		.byte	0x51
 2965 0a0a 83000000 		.4byte	0x83
 2966 0a0e 05       		.uleb128 0x5
 2967 0a0f 03       		.byte	0x3
 2968 0a10 00000000 		.4byte	CySysClkPumpConfig
 2969 0a14 1D       		.uleb128 0x1d
 2970 0a15 F5020000 		.4byte	.LASF93
 2971 0a19 F5020000 		.4byte	.LASF93
 2972 0a1d 03       		.byte	0x3
 2973 0a1e F8       		.byte	0xf8
 2974 0a1f 1D       		.uleb128 0x1d
 2975 0a20 3C040000 		.4byte	.LASF94
 2976 0a24 3C040000 		.4byte	.LASF94
 2977 0a28 03       		.byte	0x3
 2978 0a29 F9       		.byte	0xf9
 2979 0a2a 1D       		.uleb128 0x1d
 2980 0a2b 80040000 		.4byte	.LASF95
 2981 0a2f 80040000 		.4byte	.LASF95
 2982 0a33 03       		.byte	0x3
 2983 0a34 EF       		.byte	0xef
 2984 0a35 00       		.byte	0
 2985              		.section	.debug_abbrev,"",%progbits
 2986              	.Ldebug_abbrev0:
 2987 0000 01       		.uleb128 0x1
 2988 0001 11       		.uleb128 0x11
 2989 0002 01       		.byte	0x1
 2990 0003 25       		.uleb128 0x25
 2991 0004 0E       		.uleb128 0xe
 2992 0005 13       		.uleb128 0x13
 2993 0006 0B       		.uleb128 0xb
 2994 0007 03       		.uleb128 0x3
 2995 0008 0E       		.uleb128 0xe
 2996 0009 1B       		.uleb128 0x1b
 2997 000a 0E       		.uleb128 0xe
 2998 000b 55       		.uleb128 0x55
 2999 000c 17       		.uleb128 0x17
 3000 000d 11       		.uleb128 0x11
 3001 000e 01       		.uleb128 0x1
 3002 000f 10       		.uleb128 0x10
 3003 0010 17       		.uleb128 0x17
 3004 0011 00       		.byte	0
 3005 0012 00       		.byte	0
 3006 0013 02       		.uleb128 0x2
 3007 0014 24       		.uleb128 0x24
 3008 0015 00       		.byte	0
 3009 0016 0B       		.uleb128 0xb
 3010 0017 0B       		.uleb128 0xb
 3011 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 117


 3012 0019 0B       		.uleb128 0xb
 3013 001a 03       		.uleb128 0x3
 3014 001b 0E       		.uleb128 0xe
 3015 001c 00       		.byte	0
 3016 001d 00       		.byte	0
 3017 001e 03       		.uleb128 0x3
 3018 001f 24       		.uleb128 0x24
 3019 0020 00       		.byte	0
 3020 0021 0B       		.uleb128 0xb
 3021 0022 0B       		.uleb128 0xb
 3022 0023 3E       		.uleb128 0x3e
 3023 0024 0B       		.uleb128 0xb
 3024 0025 03       		.uleb128 0x3
 3025 0026 08       		.uleb128 0x8
 3026 0027 00       		.byte	0
 3027 0028 00       		.byte	0
 3028 0029 04       		.uleb128 0x4
 3029 002a 16       		.uleb128 0x16
 3030 002b 00       		.byte	0
 3031 002c 03       		.uleb128 0x3
 3032 002d 0E       		.uleb128 0xe
 3033 002e 3A       		.uleb128 0x3a
 3034 002f 0B       		.uleb128 0xb
 3035 0030 3B       		.uleb128 0x3b
 3036 0031 05       		.uleb128 0x5
 3037 0032 49       		.uleb128 0x49
 3038 0033 13       		.uleb128 0x13
 3039 0034 00       		.byte	0
 3040 0035 00       		.byte	0
 3041 0036 05       		.uleb128 0x5
 3042 0037 35       		.uleb128 0x35
 3043 0038 00       		.byte	0
 3044 0039 49       		.uleb128 0x49
 3045 003a 13       		.uleb128 0x13
 3046 003b 00       		.byte	0
 3047 003c 00       		.byte	0
 3048 003d 06       		.uleb128 0x6
 3049 003e 0F       		.uleb128 0xf
 3050 003f 00       		.byte	0
 3051 0040 0B       		.uleb128 0xb
 3052 0041 0B       		.uleb128 0xb
 3053 0042 49       		.uleb128 0x49
 3054 0043 13       		.uleb128 0x13
 3055 0044 00       		.byte	0
 3056 0045 00       		.byte	0
 3057 0046 07       		.uleb128 0x7
 3058 0047 15       		.uleb128 0x15
 3059 0048 00       		.byte	0
 3060 0049 27       		.uleb128 0x27
 3061 004a 19       		.uleb128 0x19
 3062 004b 00       		.byte	0
 3063 004c 00       		.byte	0
 3064 004d 08       		.uleb128 0x8
 3065 004e 2E       		.uleb128 0x2e
 3066 004f 00       		.byte	0
 3067 0050 3F       		.uleb128 0x3f
 3068 0051 19       		.uleb128 0x19
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 118


 3069 0052 03       		.uleb128 0x3
 3070 0053 0E       		.uleb128 0xe
 3071 0054 3A       		.uleb128 0x3a
 3072 0055 0B       		.uleb128 0xb
 3073 0056 3B       		.uleb128 0x3b
 3074 0057 0B       		.uleb128 0xb
 3075 0058 27       		.uleb128 0x27
 3076 0059 19       		.uleb128 0x19
 3077 005a 11       		.uleb128 0x11
 3078 005b 01       		.uleb128 0x1
 3079 005c 12       		.uleb128 0x12
 3080 005d 06       		.uleb128 0x6
 3081 005e 40       		.uleb128 0x40
 3082 005f 18       		.uleb128 0x18
 3083 0060 9742     		.uleb128 0x2117
 3084 0062 19       		.uleb128 0x19
 3085 0063 00       		.byte	0
 3086 0064 00       		.byte	0
 3087 0065 09       		.uleb128 0x9
 3088 0066 2E       		.uleb128 0x2e
 3089 0067 01       		.byte	0x1
 3090 0068 3F       		.uleb128 0x3f
 3091 0069 19       		.uleb128 0x19
 3092 006a 03       		.uleb128 0x3
 3093 006b 0E       		.uleb128 0xe
 3094 006c 3A       		.uleb128 0x3a
 3095 006d 0B       		.uleb128 0xb
 3096 006e 3B       		.uleb128 0x3b
 3097 006f 05       		.uleb128 0x5
 3098 0070 27       		.uleb128 0x27
 3099 0071 19       		.uleb128 0x19
 3100 0072 11       		.uleb128 0x11
 3101 0073 01       		.uleb128 0x1
 3102 0074 12       		.uleb128 0x12
 3103 0075 06       		.uleb128 0x6
 3104 0076 40       		.uleb128 0x40
 3105 0077 18       		.uleb128 0x18
 3106 0078 9742     		.uleb128 0x2117
 3107 007a 19       		.uleb128 0x19
 3108 007b 01       		.uleb128 0x1
 3109 007c 13       		.uleb128 0x13
 3110 007d 00       		.byte	0
 3111 007e 00       		.byte	0
 3112 007f 0A       		.uleb128 0xa
 3113 0080 05       		.uleb128 0x5
 3114 0081 00       		.byte	0
 3115 0082 03       		.uleb128 0x3
 3116 0083 0E       		.uleb128 0xe
 3117 0084 3A       		.uleb128 0x3a
 3118 0085 0B       		.uleb128 0xb
 3119 0086 3B       		.uleb128 0x3b
 3120 0087 05       		.uleb128 0x5
 3121 0088 49       		.uleb128 0x49
 3122 0089 13       		.uleb128 0x13
 3123 008a 02       		.uleb128 0x2
 3124 008b 17       		.uleb128 0x17
 3125 008c 00       		.byte	0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 119


 3126 008d 00       		.byte	0
 3127 008e 0B       		.uleb128 0xb
 3128 008f 34       		.uleb128 0x34
 3129 0090 00       		.byte	0
 3130 0091 03       		.uleb128 0x3
 3131 0092 0E       		.uleb128 0xe
 3132 0093 3A       		.uleb128 0x3a
 3133 0094 0B       		.uleb128 0xb
 3134 0095 3B       		.uleb128 0x3b
 3135 0096 05       		.uleb128 0x5
 3136 0097 49       		.uleb128 0x49
 3137 0098 13       		.uleb128 0x13
 3138 0099 02       		.uleb128 0x2
 3139 009a 17       		.uleb128 0x17
 3140 009b 00       		.byte	0
 3141 009c 00       		.byte	0
 3142 009d 0C       		.uleb128 0xc
 3143 009e 898201   		.uleb128 0x4109
 3144 00a1 00       		.byte	0
 3145 00a2 11       		.uleb128 0x11
 3146 00a3 01       		.uleb128 0x1
 3147 00a4 31       		.uleb128 0x31
 3148 00a5 13       		.uleb128 0x13
 3149 00a6 00       		.byte	0
 3150 00a7 00       		.byte	0
 3151 00a8 0D       		.uleb128 0xd
 3152 00a9 05       		.uleb128 0x5
 3153 00aa 00       		.byte	0
 3154 00ab 03       		.uleb128 0x3
 3155 00ac 0E       		.uleb128 0xe
 3156 00ad 3A       		.uleb128 0x3a
 3157 00ae 0B       		.uleb128 0xb
 3158 00af 3B       		.uleb128 0x3b
 3159 00b0 05       		.uleb128 0x5
 3160 00b1 49       		.uleb128 0x49
 3161 00b2 13       		.uleb128 0x13
 3162 00b3 02       		.uleb128 0x2
 3163 00b4 18       		.uleb128 0x18
 3164 00b5 00       		.byte	0
 3165 00b6 00       		.byte	0
 3166 00b7 0E       		.uleb128 0xe
 3167 00b8 2E       		.uleb128 0x2e
 3168 00b9 01       		.byte	0x1
 3169 00ba 3F       		.uleb128 0x3f
 3170 00bb 19       		.uleb128 0x19
 3171 00bc 03       		.uleb128 0x3
 3172 00bd 0E       		.uleb128 0xe
 3173 00be 3A       		.uleb128 0x3a
 3174 00bf 0B       		.uleb128 0xb
 3175 00c0 3B       		.uleb128 0x3b
 3176 00c1 05       		.uleb128 0x5
 3177 00c2 27       		.uleb128 0x27
 3178 00c3 19       		.uleb128 0x19
 3179 00c4 49       		.uleb128 0x49
 3180 00c5 13       		.uleb128 0x13
 3181 00c6 11       		.uleb128 0x11
 3182 00c7 01       		.uleb128 0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 120


 3183 00c8 12       		.uleb128 0x12
 3184 00c9 06       		.uleb128 0x6
 3185 00ca 40       		.uleb128 0x40
 3186 00cb 18       		.uleb128 0x18
 3187 00cc 9742     		.uleb128 0x2117
 3188 00ce 19       		.uleb128 0x19
 3189 00cf 01       		.uleb128 0x1
 3190 00d0 13       		.uleb128 0x13
 3191 00d1 00       		.byte	0
 3192 00d2 00       		.byte	0
 3193 00d3 0F       		.uleb128 0xf
 3194 00d4 34       		.uleb128 0x34
 3195 00d5 00       		.byte	0
 3196 00d6 03       		.uleb128 0x3
 3197 00d7 0E       		.uleb128 0xe
 3198 00d8 3A       		.uleb128 0x3a
 3199 00d9 0B       		.uleb128 0xb
 3200 00da 3B       		.uleb128 0x3b
 3201 00db 05       		.uleb128 0x5
 3202 00dc 49       		.uleb128 0x49
 3203 00dd 13       		.uleb128 0x13
 3204 00de 02       		.uleb128 0x2
 3205 00df 18       		.uleb128 0x18
 3206 00e0 00       		.byte	0
 3207 00e1 00       		.byte	0
 3208 00e2 10       		.uleb128 0x10
 3209 00e3 898201   		.uleb128 0x4109
 3210 00e6 01       		.byte	0x1
 3211 00e7 11       		.uleb128 0x11
 3212 00e8 01       		.uleb128 0x1
 3213 00e9 31       		.uleb128 0x31
 3214 00ea 13       		.uleb128 0x13
 3215 00eb 01       		.uleb128 0x1
 3216 00ec 13       		.uleb128 0x13
 3217 00ed 00       		.byte	0
 3218 00ee 00       		.byte	0
 3219 00ef 11       		.uleb128 0x11
 3220 00f0 8A8201   		.uleb128 0x410a
 3221 00f3 00       		.byte	0
 3222 00f4 02       		.uleb128 0x2
 3223 00f5 18       		.uleb128 0x18
 3224 00f6 9142     		.uleb128 0x2111
 3225 00f8 18       		.uleb128 0x18
 3226 00f9 00       		.byte	0
 3227 00fa 00       		.byte	0
 3228 00fb 12       		.uleb128 0x12
 3229 00fc 898201   		.uleb128 0x4109
 3230 00ff 01       		.byte	0x1
 3231 0100 11       		.uleb128 0x11
 3232 0101 01       		.uleb128 0x1
 3233 0102 31       		.uleb128 0x31
 3234 0103 13       		.uleb128 0x13
 3235 0104 00       		.byte	0
 3236 0105 00       		.byte	0
 3237 0106 13       		.uleb128 0x13
 3238 0107 34       		.uleb128 0x34
 3239 0108 00       		.byte	0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 121


 3240 0109 03       		.uleb128 0x3
 3241 010a 0E       		.uleb128 0xe
 3242 010b 3A       		.uleb128 0x3a
 3243 010c 0B       		.uleb128 0xb
 3244 010d 3B       		.uleb128 0x3b
 3245 010e 05       		.uleb128 0x5
 3246 010f 49       		.uleb128 0x49
 3247 0110 13       		.uleb128 0x13
 3248 0111 1C       		.uleb128 0x1c
 3249 0112 06       		.uleb128 0x6
 3250 0113 00       		.byte	0
 3251 0114 00       		.byte	0
 3252 0115 14       		.uleb128 0x14
 3253 0116 2E       		.uleb128 0x2e
 3254 0117 00       		.byte	0
 3255 0118 3F       		.uleb128 0x3f
 3256 0119 19       		.uleb128 0x19
 3257 011a 03       		.uleb128 0x3
 3258 011b 0E       		.uleb128 0xe
 3259 011c 3A       		.uleb128 0x3a
 3260 011d 0B       		.uleb128 0xb
 3261 011e 3B       		.uleb128 0x3b
 3262 011f 05       		.uleb128 0x5
 3263 0120 27       		.uleb128 0x27
 3264 0121 19       		.uleb128 0x19
 3265 0122 11       		.uleb128 0x11
 3266 0123 01       		.uleb128 0x1
 3267 0124 12       		.uleb128 0x12
 3268 0125 06       		.uleb128 0x6
 3269 0126 40       		.uleb128 0x40
 3270 0127 18       		.uleb128 0x18
 3271 0128 9742     		.uleb128 0x2117
 3272 012a 19       		.uleb128 0x19
 3273 012b 00       		.byte	0
 3274 012c 00       		.byte	0
 3275 012d 15       		.uleb128 0x15
 3276 012e 2E       		.uleb128 0x2e
 3277 012f 01       		.byte	0x1
 3278 0130 3F       		.uleb128 0x3f
 3279 0131 19       		.uleb128 0x19
 3280 0132 03       		.uleb128 0x3
 3281 0133 0E       		.uleb128 0xe
 3282 0134 3A       		.uleb128 0x3a
 3283 0135 0B       		.uleb128 0xb
 3284 0136 3B       		.uleb128 0x3b
 3285 0137 05       		.uleb128 0x5
 3286 0138 27       		.uleb128 0x27
 3287 0139 19       		.uleb128 0x19
 3288 013a 11       		.uleb128 0x11
 3289 013b 01       		.uleb128 0x1
 3290 013c 12       		.uleb128 0x12
 3291 013d 06       		.uleb128 0x6
 3292 013e 40       		.uleb128 0x40
 3293 013f 18       		.uleb128 0x18
 3294 0140 9642     		.uleb128 0x2116
 3295 0142 19       		.uleb128 0x19
 3296 0143 01       		.uleb128 0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 122


 3297 0144 13       		.uleb128 0x13
 3298 0145 00       		.byte	0
 3299 0146 00       		.byte	0
 3300 0147 16       		.uleb128 0x16
 3301 0148 2E       		.uleb128 0x2e
 3302 0149 00       		.byte	0
 3303 014a 3F       		.uleb128 0x3f
 3304 014b 19       		.uleb128 0x19
 3305 014c 03       		.uleb128 0x3
 3306 014d 0E       		.uleb128 0xe
 3307 014e 3A       		.uleb128 0x3a
 3308 014f 0B       		.uleb128 0xb
 3309 0150 3B       		.uleb128 0x3b
 3310 0151 05       		.uleb128 0x5
 3311 0152 27       		.uleb128 0x27
 3312 0153 19       		.uleb128 0x19
 3313 0154 49       		.uleb128 0x49
 3314 0155 13       		.uleb128 0x13
 3315 0156 11       		.uleb128 0x11
 3316 0157 01       		.uleb128 0x1
 3317 0158 12       		.uleb128 0x12
 3318 0159 06       		.uleb128 0x6
 3319 015a 40       		.uleb128 0x40
 3320 015b 18       		.uleb128 0x18
 3321 015c 9742     		.uleb128 0x2117
 3322 015e 19       		.uleb128 0x19
 3323 015f 00       		.byte	0
 3324 0160 00       		.byte	0
 3325 0161 17       		.uleb128 0x17
 3326 0162 2E       		.uleb128 0x2e
 3327 0163 01       		.byte	0x1
 3328 0164 03       		.uleb128 0x3
 3329 0165 0E       		.uleb128 0xe
 3330 0166 3A       		.uleb128 0x3a
 3331 0167 0B       		.uleb128 0xb
 3332 0168 3B       		.uleb128 0x3b
 3333 0169 05       		.uleb128 0x5
 3334 016a 27       		.uleb128 0x27
 3335 016b 19       		.uleb128 0x19
 3336 016c 11       		.uleb128 0x11
 3337 016d 01       		.uleb128 0x1
 3338 016e 12       		.uleb128 0x12
 3339 016f 06       		.uleb128 0x6
 3340 0170 40       		.uleb128 0x40
 3341 0171 18       		.uleb128 0x18
 3342 0172 9642     		.uleb128 0x2116
 3343 0174 19       		.uleb128 0x19
 3344 0175 01       		.uleb128 0x1
 3345 0176 13       		.uleb128 0x13
 3346 0177 00       		.byte	0
 3347 0178 00       		.byte	0
 3348 0179 18       		.uleb128 0x18
 3349 017a 34       		.uleb128 0x34
 3350 017b 00       		.byte	0
 3351 017c 03       		.uleb128 0x3
 3352 017d 08       		.uleb128 0x8
 3353 017e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 123


 3354 017f 0B       		.uleb128 0xb
 3355 0180 3B       		.uleb128 0x3b
 3356 0181 05       		.uleb128 0x5
 3357 0182 49       		.uleb128 0x49
 3358 0183 13       		.uleb128 0x13
 3359 0184 02       		.uleb128 0x2
 3360 0185 17       		.uleb128 0x17
 3361 0186 00       		.byte	0
 3362 0187 00       		.byte	0
 3363 0188 19       		.uleb128 0x19
 3364 0189 01       		.uleb128 0x1
 3365 018a 01       		.byte	0x1
 3366 018b 49       		.uleb128 0x49
 3367 018c 13       		.uleb128 0x13
 3368 018d 01       		.uleb128 0x1
 3369 018e 13       		.uleb128 0x13
 3370 018f 00       		.byte	0
 3371 0190 00       		.byte	0
 3372 0191 1A       		.uleb128 0x1a
 3373 0192 21       		.uleb128 0x21
 3374 0193 00       		.byte	0
 3375 0194 49       		.uleb128 0x49
 3376 0195 13       		.uleb128 0x13
 3377 0196 2F       		.uleb128 0x2f
 3378 0197 0B       		.uleb128 0xb
 3379 0198 00       		.byte	0
 3380 0199 00       		.byte	0
 3381 019a 1B       		.uleb128 0x1b
 3382 019b 34       		.uleb128 0x34
 3383 019c 00       		.byte	0
 3384 019d 03       		.uleb128 0x3
 3385 019e 0E       		.uleb128 0xe
 3386 019f 3A       		.uleb128 0x3a
 3387 01a0 0B       		.uleb128 0xb
 3388 01a1 3B       		.uleb128 0x3b
 3389 01a2 0B       		.uleb128 0xb
 3390 01a3 49       		.uleb128 0x49
 3391 01a4 13       		.uleb128 0x13
 3392 01a5 02       		.uleb128 0x2
 3393 01a6 18       		.uleb128 0x18
 3394 01a7 00       		.byte	0
 3395 01a8 00       		.byte	0
 3396 01a9 1C       		.uleb128 0x1c
 3397 01aa 34       		.uleb128 0x34
 3398 01ab 00       		.byte	0
 3399 01ac 03       		.uleb128 0x3
 3400 01ad 0E       		.uleb128 0xe
 3401 01ae 3A       		.uleb128 0x3a
 3402 01af 0B       		.uleb128 0xb
 3403 01b0 3B       		.uleb128 0x3b
 3404 01b1 0B       		.uleb128 0xb
 3405 01b2 49       		.uleb128 0x49
 3406 01b3 13       		.uleb128 0x13
 3407 01b4 3F       		.uleb128 0x3f
 3408 01b5 19       		.uleb128 0x19
 3409 01b6 02       		.uleb128 0x2
 3410 01b7 18       		.uleb128 0x18
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 124


 3411 01b8 00       		.byte	0
 3412 01b9 00       		.byte	0
 3413 01ba 1D       		.uleb128 0x1d
 3414 01bb 2E       		.uleb128 0x2e
 3415 01bc 00       		.byte	0
 3416 01bd 3F       		.uleb128 0x3f
 3417 01be 19       		.uleb128 0x19
 3418 01bf 3C       		.uleb128 0x3c
 3419 01c0 19       		.uleb128 0x19
 3420 01c1 6E       		.uleb128 0x6e
 3421 01c2 0E       		.uleb128 0xe
 3422 01c3 03       		.uleb128 0x3
 3423 01c4 0E       		.uleb128 0xe
 3424 01c5 3A       		.uleb128 0x3a
 3425 01c6 0B       		.uleb128 0xb
 3426 01c7 3B       		.uleb128 0x3b
 3427 01c8 0B       		.uleb128 0xb
 3428 01c9 00       		.byte	0
 3429 01ca 00       		.byte	0
 3430 01cb 00       		.byte	0
 3431              		.section	.debug_loc,"",%progbits
 3432              	.Ldebug_loc0:
 3433              	.LLST0:
 3434 0000 00000000 		.4byte	.LVL0
 3435 0004 07000000 		.4byte	.LVL1-1
 3436 0008 0100     		.2byte	0x1
 3437 000a 50       		.byte	0x50
 3438 000b 07000000 		.4byte	.LVL1-1
 3439 000f 12000000 		.4byte	.LVL3
 3440 0013 0100     		.2byte	0x1
 3441 0015 54       		.byte	0x54
 3442 0016 12000000 		.4byte	.LVL3
 3443 001a 20000000 		.4byte	.LFE2
 3444 001e 0400     		.2byte	0x4
 3445 0020 F3       		.byte	0xf3
 3446 0021 01       		.uleb128 0x1
 3447 0022 50       		.byte	0x50
 3448 0023 9F       		.byte	0x9f
 3449 0024 00000000 		.4byte	0
 3450 0028 00000000 		.4byte	0
 3451              	.LLST1:
 3452 002c 08000000 		.4byte	.LVL1
 3453 0030 19000000 		.4byte	.LVL5-1
 3454 0034 0100     		.2byte	0x1
 3455 0036 50       		.byte	0x50
 3456 0037 00000000 		.4byte	0
 3457 003b 00000000 		.4byte	0
 3458              	.LLST2:
 3459 003f 10000000 		.4byte	.LVL2
 3460 0043 14000000 		.4byte	.LVL4
 3461 0047 0100     		.2byte	0x1
 3462 0049 53       		.byte	0x53
 3463 004a 14000000 		.4byte	.LVL4
 3464 004e 1A000000 		.4byte	.LVL6
 3465 0052 0100     		.2byte	0x1
 3466 0054 54       		.byte	0x54
 3467 0055 00000000 		.4byte	0
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 125


 3468 0059 00000000 		.4byte	0
 3469              	.LLST3:
 3470 005d 06000000 		.4byte	.LVL8
 3471 0061 11000000 		.4byte	.LVL10-1
 3472 0065 0100     		.2byte	0x1
 3473 0067 50       		.byte	0x50
 3474 0068 00000000 		.4byte	0
 3475 006c 00000000 		.4byte	0
 3476              	.LLST4:
 3477 0070 0E000000 		.4byte	.LVL9
 3478 0074 14000000 		.4byte	.LVL11
 3479 0078 0100     		.2byte	0x1
 3480 007a 54       		.byte	0x54
 3481 007b 14000000 		.4byte	.LVL11
 3482 007f 1C000000 		.4byte	.LFE4
 3483 0083 0100     		.2byte	0x1
 3484 0085 50       		.byte	0x50
 3485 0086 00000000 		.4byte	0
 3486 008a 00000000 		.4byte	0
 3487              	.LLST5:
 3488 008e 00000000 		.4byte	.LVL12
 3489 0092 07000000 		.4byte	.LVL13-1
 3490 0096 0100     		.2byte	0x1
 3491 0098 50       		.byte	0x50
 3492 0099 07000000 		.4byte	.LVL13-1
 3493 009d 0A000000 		.4byte	.LVL14
 3494 00a1 0100     		.2byte	0x1
 3495 00a3 54       		.byte	0x54
 3496 00a4 0A000000 		.4byte	.LVL14
 3497 00a8 24000000 		.4byte	.LFE5
 3498 00ac 0400     		.2byte	0x4
 3499 00ae F3       		.byte	0xf3
 3500 00af 01       		.uleb128 0x1
 3501 00b0 50       		.byte	0x50
 3502 00b1 9F       		.byte	0x9f
 3503 00b2 00000000 		.4byte	0
 3504 00b6 00000000 		.4byte	0
 3505              	.LLST6:
 3506 00ba 08000000 		.4byte	.LVL13
 3507 00be 1D000000 		.4byte	.LVL15-1
 3508 00c2 0100     		.2byte	0x1
 3509 00c4 50       		.byte	0x50
 3510 00c5 00000000 		.4byte	0
 3511 00c9 00000000 		.4byte	0
 3512              	.LLST7:
 3513 00cd 00000000 		.4byte	.LVL16
 3514 00d1 07000000 		.4byte	.LVL17-1
 3515 00d5 0100     		.2byte	0x1
 3516 00d7 50       		.byte	0x50
 3517 00d8 07000000 		.4byte	.LVL17-1
 3518 00dc 14000000 		.4byte	.LVL18
 3519 00e0 0100     		.2byte	0x1
 3520 00e2 54       		.byte	0x54
 3521 00e3 14000000 		.4byte	.LVL18
 3522 00e7 24000000 		.4byte	.LFE7
 3523 00eb 0400     		.2byte	0x4
 3524 00ed F3       		.byte	0xf3
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 126


 3525 00ee 01       		.uleb128 0x1
 3526 00ef 50       		.byte	0x50
 3527 00f0 9F       		.byte	0x9f
 3528 00f1 00000000 		.4byte	0
 3529 00f5 00000000 		.4byte	0
 3530              	.LLST8:
 3531 00f9 08000000 		.4byte	.LVL17
 3532 00fd 1D000000 		.4byte	.LVL19-1
 3533 0101 0100     		.2byte	0x1
 3534 0103 50       		.byte	0x50
 3535 0104 00000000 		.4byte	0
 3536 0108 00000000 		.4byte	0
 3537              	.LLST9:
 3538 010c 00000000 		.4byte	.LVL20
 3539 0110 04000000 		.4byte	.LVL21
 3540 0114 0100     		.2byte	0x1
 3541 0116 50       		.byte	0x50
 3542 0117 04000000 		.4byte	.LVL21
 3543 011b 14000000 		.4byte	.LFE8
 3544 011f 0100     		.2byte	0x1
 3545 0121 52       		.byte	0x52
 3546 0122 00000000 		.4byte	0
 3547 0126 00000000 		.4byte	0
 3548              	.LLST10:
 3549 012a 00000000 		.4byte	.LVL26
 3550 012e 04000000 		.4byte	.LVL27
 3551 0132 0100     		.2byte	0x1
 3552 0134 50       		.byte	0x50
 3553 0135 04000000 		.4byte	.LVL27
 3554 0139 14000000 		.4byte	.LFE17
 3555 013d 0400     		.2byte	0x4
 3556 013f F3       		.byte	0xf3
 3557 0140 01       		.uleb128 0x1
 3558 0141 50       		.byte	0x50
 3559 0142 9F       		.byte	0x9f
 3560 0143 00000000 		.4byte	0
 3561 0147 00000000 		.4byte	0
 3562              	.LLST11:
 3563 014b 00000000 		.4byte	.LVL28
 3564 014f 08000000 		.4byte	.LVL29
 3565 0153 0100     		.2byte	0x1
 3566 0155 50       		.byte	0x50
 3567 0156 08000000 		.4byte	.LVL29
 3568 015a 18000000 		.4byte	.LFE18
 3569 015e 0400     		.2byte	0x4
 3570 0160 F3       		.byte	0xf3
 3571 0161 01       		.uleb128 0x1
 3572 0162 50       		.byte	0x50
 3573 0163 9F       		.byte	0x9f
 3574 0164 00000000 		.4byte	0
 3575 0168 00000000 		.4byte	0
 3576              	.LLST12:
 3577 016c 00000000 		.4byte	.LVL30
 3578 0170 04000000 		.4byte	.LVL31
 3579 0174 0100     		.2byte	0x1
 3580 0176 50       		.byte	0x50
 3581 0177 04000000 		.4byte	.LVL31
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 127


 3582 017b 14000000 		.4byte	.LFE19
 3583 017f 0400     		.2byte	0x4
 3584 0181 F3       		.byte	0xf3
 3585 0182 01       		.uleb128 0x1
 3586 0183 50       		.byte	0x50
 3587 0184 9F       		.byte	0x9f
 3588 0185 00000000 		.4byte	0
 3589 0189 00000000 		.4byte	0
 3590              	.LLST13:
 3591 018d 00000000 		.4byte	.LVL32
 3592 0191 04000000 		.4byte	.LVL33
 3593 0195 0100     		.2byte	0x1
 3594 0197 50       		.byte	0x50
 3595 0198 04000000 		.4byte	.LVL33
 3596 019c 14000000 		.4byte	.LFE20
 3597 01a0 0400     		.2byte	0x4
 3598 01a2 F3       		.byte	0xf3
 3599 01a3 01       		.uleb128 0x1
 3600 01a4 50       		.byte	0x50
 3601 01a5 9F       		.byte	0x9f
 3602 01a6 00000000 		.4byte	0
 3603 01aa 00000000 		.4byte	0
 3604              	.LLST14:
 3605 01ae 00000000 		.4byte	.LVL34
 3606 01b2 04000000 		.4byte	.LVL35
 3607 01b6 0100     		.2byte	0x1
 3608 01b8 50       		.byte	0x50
 3609 01b9 04000000 		.4byte	.LVL35
 3610 01bd 14000000 		.4byte	.LFE21
 3611 01c1 0400     		.2byte	0x4
 3612 01c3 F3       		.byte	0xf3
 3613 01c4 01       		.uleb128 0x1
 3614 01c5 50       		.byte	0x50
 3615 01c6 9F       		.byte	0x9f
 3616 01c7 00000000 		.4byte	0
 3617 01cb 00000000 		.4byte	0
 3618              	.LLST15:
 3619 01cf 00000000 		.4byte	.LVL37
 3620 01d3 13000000 		.4byte	.LVL38-1
 3621 01d7 0100     		.2byte	0x1
 3622 01d9 50       		.byte	0x50
 3623 01da 13000000 		.4byte	.LVL38-1
 3624 01de 7C000000 		.4byte	.LVL45
 3625 01e2 0100     		.2byte	0x1
 3626 01e4 54       		.byte	0x54
 3627 01e5 7C000000 		.4byte	.LVL45
 3628 01e9 8A000000 		.4byte	.LVL47
 3629 01ed 0400     		.2byte	0x4
 3630 01ef F3       		.byte	0xf3
 3631 01f0 01       		.uleb128 0x1
 3632 01f1 50       		.byte	0x50
 3633 01f2 9F       		.byte	0x9f
 3634 01f3 8A000000 		.4byte	.LVL47
 3635 01f7 8C000000 		.4byte	.LVL48
 3636 01fb 0100     		.2byte	0x1
 3637 01fd 50       		.byte	0x50
 3638 01fe 8C000000 		.4byte	.LVL48
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 128


 3639 0202 90000000 		.4byte	.LVL49
 3640 0206 0100     		.2byte	0x1
 3641 0208 54       		.byte	0x54
 3642 0209 90000000 		.4byte	.LVL49
 3643 020d AC000000 		.4byte	.LFE6
 3644 0211 0400     		.2byte	0x4
 3645 0213 F3       		.byte	0xf3
 3646 0214 01       		.uleb128 0x1
 3647 0215 50       		.byte	0x50
 3648 0216 9F       		.byte	0x9f
 3649 0217 00000000 		.4byte	0
 3650 021b 00000000 		.4byte	0
 3651              	.LLST16:
 3652 021f 16000000 		.4byte	.LVL39
 3653 0223 8A000000 		.4byte	.LVL47
 3654 0227 0100     		.2byte	0x1
 3655 0229 55       		.byte	0x55
 3656 022a 00000000 		.4byte	0
 3657 022e 00000000 		.4byte	0
 3658              	.LLST17:
 3659 0232 28000000 		.4byte	.LVL40
 3660 0236 30000000 		.4byte	.LVL41
 3661 023a 0100     		.2byte	0x1
 3662 023c 53       		.byte	0x53
 3663 023d 30000000 		.4byte	.LVL41
 3664 0241 34000000 		.4byte	.LVL42
 3665 0245 0700     		.2byte	0x7
 3666 0247 0C       		.byte	0xc
 3667 0248 0C0F0340 		.4byte	0x40030f0c
 3668 024c 06       		.byte	0x6
 3669 024d 9F       		.byte	0x9f
 3670 024e 00000000 		.4byte	0
 3671 0252 00000000 		.4byte	0
 3672              	.LLST18:
 3673 0256 00000000 		.4byte	.LVL50
 3674 025a 0C000000 		.4byte	.LVL52
 3675 025e 0100     		.2byte	0x1
 3676 0260 50       		.byte	0x50
 3677 0261 0C000000 		.4byte	.LVL52
 3678 0265 20000000 		.4byte	.LFE11
 3679 0269 0400     		.2byte	0x4
 3680 026b F3       		.byte	0xf3
 3681 026c 01       		.uleb128 0x1
 3682 026d 50       		.byte	0x50
 3683 026e 9F       		.byte	0x9f
 3684 026f 00000000 		.4byte	0
 3685 0273 00000000 		.4byte	0
 3686              	.LLST19:
 3687 0277 00000000 		.4byte	.LVL50
 3688 027b 0F000000 		.4byte	.LVL53-1
 3689 027f 0100     		.2byte	0x1
 3690 0281 51       		.byte	0x51
 3691 0282 0F000000 		.4byte	.LVL53-1
 3692 0286 1E000000 		.4byte	.LVL55
 3693 028a 0100     		.2byte	0x1
 3694 028c 55       		.byte	0x55
 3695 028d 1E000000 		.4byte	.LVL55
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 129


 3696 0291 20000000 		.4byte	.LFE11
 3697 0295 0400     		.2byte	0x4
 3698 0297 F3       		.byte	0xf3
 3699 0298 01       		.uleb128 0x1
 3700 0299 51       		.byte	0x51
 3701 029a 9F       		.byte	0x9f
 3702 029b 00000000 		.4byte	0
 3703 029f 00000000 		.4byte	0
 3704              	.LLST20:
 3705 02a3 00000000 		.4byte	.LVL56
 3706 02a7 0A000000 		.4byte	.LVL58
 3707 02ab 0100     		.2byte	0x1
 3708 02ad 50       		.byte	0x50
 3709 02ae 0A000000 		.4byte	.LVL58
 3710 02b2 1C000000 		.4byte	.LFE12
 3711 02b6 0400     		.2byte	0x4
 3712 02b8 F3       		.byte	0xf3
 3713 02b9 01       		.uleb128 0x1
 3714 02ba 50       		.byte	0x50
 3715 02bb 9F       		.byte	0x9f
 3716 02bc 00000000 		.4byte	0
 3717 02c0 00000000 		.4byte	0
 3718              	.LLST21:
 3719 02c4 00000000 		.4byte	.LVL60
 3720 02c8 0C000000 		.4byte	.LVL62
 3721 02cc 0100     		.2byte	0x1
 3722 02ce 50       		.byte	0x50
 3723 02cf 0C000000 		.4byte	.LVL62
 3724 02d3 22000000 		.4byte	.LFE13
 3725 02d7 0400     		.2byte	0x4
 3726 02d9 F3       		.byte	0xf3
 3727 02da 01       		.uleb128 0x1
 3728 02db 50       		.byte	0x50
 3729 02dc 9F       		.byte	0x9f
 3730 02dd 00000000 		.4byte	0
 3731 02e1 00000000 		.4byte	0
 3732              	.LLST22:
 3733 02e5 00000000 		.4byte	.LVL60
 3734 02e9 0F000000 		.4byte	.LVL63-1
 3735 02ed 0100     		.2byte	0x1
 3736 02ef 51       		.byte	0x51
 3737 02f0 0F000000 		.4byte	.LVL63-1
 3738 02f4 20000000 		.4byte	.LVL65
 3739 02f8 0100     		.2byte	0x1
 3740 02fa 55       		.byte	0x55
 3741 02fb 20000000 		.4byte	.LVL65
 3742 02ff 22000000 		.4byte	.LFE13
 3743 0303 0400     		.2byte	0x4
 3744 0305 F3       		.byte	0xf3
 3745 0306 01       		.uleb128 0x1
 3746 0307 51       		.byte	0x51
 3747 0308 9F       		.byte	0x9f
 3748 0309 00000000 		.4byte	0
 3749 030d 00000000 		.4byte	0
 3750              	.LLST23:
 3751 0311 00000000 		.4byte	.LVL66
 3752 0315 0A000000 		.4byte	.LVL68
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 130


 3753 0319 0100     		.2byte	0x1
 3754 031b 50       		.byte	0x50
 3755 031c 0A000000 		.4byte	.LVL68
 3756 0320 1E000000 		.4byte	.LFE14
 3757 0324 0400     		.2byte	0x4
 3758 0326 F3       		.byte	0xf3
 3759 0327 01       		.uleb128 0x1
 3760 0328 50       		.byte	0x50
 3761 0329 9F       		.byte	0x9f
 3762 032a 00000000 		.4byte	0
 3763 032e 00000000 		.4byte	0
 3764              	.LLST24:
 3765 0332 00000000 		.4byte	.LVL70
 3766 0336 0C000000 		.4byte	.LVL71
 3767 033a 0100     		.2byte	0x1
 3768 033c 50       		.byte	0x50
 3769 033d 0C000000 		.4byte	.LVL71
 3770 0341 4C000000 		.4byte	.LFE15
 3771 0345 0400     		.2byte	0x4
 3772 0347 F3       		.byte	0xf3
 3773 0348 01       		.uleb128 0x1
 3774 0349 50       		.byte	0x50
 3775 034a 9F       		.byte	0x9f
 3776 034b 00000000 		.4byte	0
 3777 034f 00000000 		.4byte	0
 3778              	.LLST25:
 3779 0353 00000000 		.4byte	.LVL70
 3780 0357 0F000000 		.4byte	.LVL72-1
 3781 035b 0100     		.2byte	0x1
 3782 035d 51       		.byte	0x51
 3783 035e 0F000000 		.4byte	.LVL72-1
 3784 0362 4C000000 		.4byte	.LFE15
 3785 0366 0400     		.2byte	0x4
 3786 0368 F3       		.byte	0xf3
 3787 0369 01       		.uleb128 0x1
 3788 036a 51       		.byte	0x51
 3789 036b 9F       		.byte	0x9f
 3790 036c 00000000 		.4byte	0
 3791 0370 00000000 		.4byte	0
 3792              	.LLST26:
 3793 0374 26000000 		.4byte	.LVL75
 3794 0378 45000000 		.4byte	.LVL81-1
 3795 037c 0100     		.2byte	0x1
 3796 037e 50       		.byte	0x50
 3797 037f 00000000 		.4byte	0
 3798 0383 00000000 		.4byte	0
 3799              	.LLST27:
 3800 0387 22000000 		.4byte	.LVL74
 3801 038b 46000000 		.4byte	.LVL82
 3802 038f 0100     		.2byte	0x1
 3803 0391 55       		.byte	0x55
 3804 0392 00000000 		.4byte	0
 3805 0396 00000000 		.4byte	0
 3806              	.LLST28:
 3807 039a 32000000 		.4byte	.LVL76
 3808 039e 38000000 		.4byte	.LVL77
 3809 03a2 0100     		.2byte	0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 131


 3810 03a4 51       		.byte	0x51
 3811 03a5 3A000000 		.4byte	.LVL78
 3812 03a9 3C000000 		.4byte	.LVL79
 3813 03ad 0100     		.2byte	0x1
 3814 03af 51       		.byte	0x51
 3815 03b0 3C000000 		.4byte	.LVL79
 3816 03b4 40000000 		.4byte	.LVL80
 3817 03b8 0100     		.2byte	0x1
 3818 03ba 53       		.byte	0x53
 3819 03bb 40000000 		.4byte	.LVL80
 3820 03bf 45000000 		.4byte	.LVL81-1
 3821 03c3 0100     		.2byte	0x1
 3822 03c5 51       		.byte	0x51
 3823 03c6 00000000 		.4byte	0
 3824 03ca 00000000 		.4byte	0
 3825              	.LLST29:
 3826 03ce 00000000 		.4byte	.LVL83
 3827 03d2 0A000000 		.4byte	.LVL84
 3828 03d6 0100     		.2byte	0x1
 3829 03d8 50       		.byte	0x50
 3830 03d9 0A000000 		.4byte	.LVL84
 3831 03dd 2C000000 		.4byte	.LFE16
 3832 03e1 0400     		.2byte	0x4
 3833 03e3 F3       		.byte	0xf3
 3834 03e4 01       		.uleb128 0x1
 3835 03e5 50       		.byte	0x50
 3836 03e6 9F       		.byte	0x9f
 3837 03e7 00000000 		.4byte	0
 3838 03eb 00000000 		.4byte	0
 3839              	.LLST30:
 3840 03ef 24000000 		.4byte	.LVL86
 3841 03f3 26000000 		.4byte	.LVL87
 3842 03f7 0100     		.2byte	0x1
 3843 03f9 50       		.byte	0x50
 3844 03fa 00000000 		.4byte	0
 3845 03fe 00000000 		.4byte	0
 3846              	.LLST31:
 3847 0402 00000000 		.4byte	.LVL88
 3848 0406 06000000 		.4byte	.LVL89
 3849 040a 0100     		.2byte	0x1
 3850 040c 50       		.byte	0x50
 3851 040d 06000000 		.4byte	.LVL89
 3852 0411 26000000 		.4byte	.LVL93
 3853 0415 0100     		.2byte	0x1
 3854 0417 54       		.byte	0x54
 3855 0418 00000000 		.4byte	0
 3856 041c 00000000 		.4byte	0
 3857              	.LLST32:
 3858 0420 00000000 		.4byte	.LVL94
 3859 0424 08000000 		.4byte	.LVL95
 3860 0428 0100     		.2byte	0x1
 3861 042a 50       		.byte	0x50
 3862 042b 08000000 		.4byte	.LVL95
 3863 042f 14000000 		.4byte	.LFE25
 3864 0433 0400     		.2byte	0x4
 3865 0435 F3       		.byte	0xf3
 3866 0436 01       		.uleb128 0x1
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 132


 3867 0437 50       		.byte	0x50
 3868 0438 9F       		.byte	0x9f
 3869 0439 00000000 		.4byte	0
 3870 043d 00000000 		.4byte	0
 3871              	.LLST33:
 3872 0441 00000000 		.4byte	.LVL97
 3873 0445 1A000000 		.4byte	.LVL98
 3874 0449 0100     		.2byte	0x1
 3875 044b 50       		.byte	0x50
 3876 044c 1A000000 		.4byte	.LVL98
 3877 0450 4C000000 		.4byte	.LFE26
 3878 0454 0400     		.2byte	0x4
 3879 0456 F3       		.byte	0xf3
 3880 0457 01       		.uleb128 0x1
 3881 0458 50       		.byte	0x50
 3882 0459 9F       		.byte	0x9f
 3883 045a 00000000 		.4byte	0
 3884 045e 00000000 		.4byte	0
 3885              	.LLST34:
 3886 0462 00000000 		.4byte	.LVL102
 3887 0466 02000000 		.4byte	.LVL103
 3888 046a 0100     		.2byte	0x1
 3889 046c 50       		.byte	0x50
 3890 046d 02000000 		.4byte	.LVL103
 3891 0471 10000000 		.4byte	.LFE33
 3892 0475 0400     		.2byte	0x4
 3893 0477 F3       		.byte	0xf3
 3894 0478 01       		.uleb128 0x1
 3895 0479 50       		.byte	0x50
 3896 047a 9F       		.byte	0x9f
 3897 047b 00000000 		.4byte	0
 3898 047f 00000000 		.4byte	0
 3899              	.LLST35:
 3900 0483 0C000000 		.4byte	.LVL105
 3901 0487 1C000000 		.4byte	.LVL108
 3902 048b 0100     		.2byte	0x1
 3903 048d 54       		.byte	0x54
 3904 048e 1E000000 		.4byte	.LVL109
 3905 0492 22000000 		.4byte	.LVL110
 3906 0496 0100     		.2byte	0x1
 3907 0498 54       		.byte	0x54
 3908 0499 00000000 		.4byte	0
 3909 049d 00000000 		.4byte	0
 3910              	.LLST36:
 3911 04a1 02000000 		.4byte	.LVL111
 3912 04a5 06000000 		.4byte	.LVL112
 3913 04a9 0200     		.2byte	0x2
 3914 04ab 30       		.byte	0x30
 3915 04ac 9F       		.byte	0x9f
 3916 04ad 06000000 		.4byte	.LVL112
 3917 04b1 1B000000 		.4byte	.LVL114-1
 3918 04b5 0100     		.2byte	0x1
 3919 04b7 53       		.byte	0x53
 3920 04b8 00000000 		.4byte	0
 3921 04bc 00000000 		.4byte	0
 3922              	.LLST37:
 3923 04c0 00000000 		.4byte	.LVL120
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 133


 3924 04c4 06000000 		.4byte	.LVL121
 3925 04c8 0100     		.2byte	0x1
 3926 04ca 50       		.byte	0x50
 3927 04cb 06000000 		.4byte	.LVL121
 3928 04cf 10000000 		.4byte	.LFE38
 3929 04d3 0400     		.2byte	0x4
 3930 04d5 F3       		.byte	0xf3
 3931 04d6 01       		.uleb128 0x1
 3932 04d7 50       		.byte	0x50
 3933 04d8 9F       		.byte	0x9f
 3934 04d9 00000000 		.4byte	0
 3935 04dd 00000000 		.4byte	0
 3936              	.LLST38:
 3937 04e1 00000000 		.4byte	.LVL122
 3938 04e5 02000000 		.4byte	.LVL123
 3939 04e9 0100     		.2byte	0x1
 3940 04eb 50       		.byte	0x50
 3941 04ec 02000000 		.4byte	.LVL123
 3942 04f0 0C000000 		.4byte	.LFE39
 3943 04f4 0400     		.2byte	0x4
 3944 04f6 F3       		.byte	0xf3
 3945 04f7 01       		.uleb128 0x1
 3946 04f8 50       		.byte	0x50
 3947 04f9 9F       		.byte	0x9f
 3948 04fa 00000000 		.4byte	0
 3949 04fe 00000000 		.4byte	0
 3950              		.section	.debug_aranges,"",%progbits
 3951 0000 64010000 		.4byte	0x164
 3952 0004 0200     		.2byte	0x2
 3953 0006 00000000 		.4byte	.Ldebug_info0
 3954 000a 04       		.byte	0x4
 3955 000b 00       		.byte	0
 3956 000c 0000     		.2byte	0
 3957 000e 0000     		.2byte	0
 3958 0010 00000000 		.4byte	.LFB0
 3959 0014 14000000 		.4byte	.LFE0-.LFB0
 3960 0018 00000000 		.4byte	.LFB1
 3961 001c 10000000 		.4byte	.LFE1-.LFB1
 3962 0020 00000000 		.4byte	.LFB2
 3963 0024 20000000 		.4byte	.LFE2-.LFB2
 3964 0028 00000000 		.4byte	.LFB3
 3965 002c 34000000 		.4byte	.LFE3-.LFB3
 3966 0030 00000000 		.4byte	.LFB4
 3967 0034 1C000000 		.4byte	.LFE4-.LFB4
 3968 0038 00000000 		.4byte	.LFB5
 3969 003c 24000000 		.4byte	.LFE5-.LFB5
 3970 0040 00000000 		.4byte	.LFB7
 3971 0044 24000000 		.4byte	.LFE7-.LFB7
 3972 0048 00000000 		.4byte	.LFB8
 3973 004c 14000000 		.4byte	.LFE8-.LFB8
 3974 0050 00000000 		.4byte	.LFB9
 3975 0054 10000000 		.4byte	.LFE9-.LFB9
 3976 0058 00000000 		.4byte	.LFB10
 3977 005c 0C000000 		.4byte	.LFE10-.LFB10
 3978 0060 00000000 		.4byte	.LFB17
 3979 0064 14000000 		.4byte	.LFE17-.LFB17
 3980 0068 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 134


 3981 006c 18000000 		.4byte	.LFE18-.LFB18
 3982 0070 00000000 		.4byte	.LFB19
 3983 0074 14000000 		.4byte	.LFE19-.LFB19
 3984 0078 00000000 		.4byte	.LFB20
 3985 007c 14000000 		.4byte	.LFE20-.LFB20
 3986 0080 00000000 		.4byte	.LFB21
 3987 0084 14000000 		.4byte	.LFE21-.LFB21
 3988 0088 00000000 		.4byte	.LFB22
 3989 008c 04000000 		.4byte	.LFE22-.LFB22
 3990 0090 00000000 		.4byte	.LFB6
 3991 0094 AC000000 		.4byte	.LFE6-.LFB6
 3992 0098 00000000 		.4byte	.LFB11
 3993 009c 20000000 		.4byte	.LFE11-.LFB11
 3994 00a0 00000000 		.4byte	.LFB12
 3995 00a4 1C000000 		.4byte	.LFE12-.LFB12
 3996 00a8 00000000 		.4byte	.LFB13
 3997 00ac 22000000 		.4byte	.LFE13-.LFB13
 3998 00b0 00000000 		.4byte	.LFB14
 3999 00b4 1E000000 		.4byte	.LFE14-.LFB14
 4000 00b8 00000000 		.4byte	.LFB15
 4001 00bc 4C000000 		.4byte	.LFE15-.LFB15
 4002 00c0 00000000 		.4byte	.LFB16
 4003 00c4 2C000000 		.4byte	.LFE16-.LFB16
 4004 00c8 00000000 		.4byte	.LFB23
 4005 00cc 18000000 		.4byte	.LFE23-.LFB23
 4006 00d0 00000000 		.4byte	.LFB24
 4007 00d4 30000000 		.4byte	.LFE24-.LFB24
 4008 00d8 00000000 		.4byte	.LFB25
 4009 00dc 14000000 		.4byte	.LFE25-.LFB25
 4010 00e0 00000000 		.4byte	.LFB26
 4011 00e4 4C000000 		.4byte	.LFE26-.LFB26
 4012 00e8 00000000 		.4byte	.LFB30
 4013 00ec 10000000 		.4byte	.LFE30-.LFB30
 4014 00f0 00000000 		.4byte	.LFB31
 4015 00f4 10000000 		.4byte	.LFE31-.LFB31
 4016 00f8 00000000 		.4byte	.LFB29
 4017 00fc 18000000 		.4byte	.LFE29-.LFB29
 4018 0100 00000000 		.4byte	.LFB32
 4019 0104 10000000 		.4byte	.LFE32-.LFB32
 4020 0108 00000000 		.4byte	.LFB33
 4021 010c 10000000 		.4byte	.LFE33-.LFB33
 4022 0110 00000000 		.4byte	.LFB34
 4023 0114 10000000 		.4byte	.LFE34-.LFB34
 4024 0118 00000000 		.4byte	.LFB35
 4025 011c 10000000 		.4byte	.LFE35-.LFB35
 4026 0120 00000000 		.4byte	.LFB36
 4027 0124 10000000 		.4byte	.LFE36-.LFB36
 4028 0128 00000000 		.4byte	.LFB40
 4029 012c 28000000 		.4byte	.LFE40-.LFB40
 4030 0130 00000000 		.4byte	.LFB37
 4031 0134 0C000000 		.4byte	.LFE37-.LFB37
 4032 0138 00000000 		.4byte	.LFB28
 4033 013c 40000000 		.4byte	.LFE28-.LFB28
 4034 0140 00000000 		.4byte	.LFB27
 4035 0144 20000000 		.4byte	.LFE27-.LFB27
 4036 0148 00000000 		.4byte	.LFB38
 4037 014c 10000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 135


 4038 0150 00000000 		.4byte	.LFB39
 4039 0154 0C000000 		.4byte	.LFE39-.LFB39
 4040 0158 00000000 		.4byte	.LFB41
 4041 015c 70000000 		.4byte	.LFE41-.LFB41
 4042 0160 00000000 		.4byte	0
 4043 0164 00000000 		.4byte	0
 4044              		.section	.debug_ranges,"",%progbits
 4045              	.Ldebug_ranges0:
 4046 0000 00000000 		.4byte	.LFB0
 4047 0004 14000000 		.4byte	.LFE0
 4048 0008 00000000 		.4byte	.LFB1
 4049 000c 10000000 		.4byte	.LFE1
 4050 0010 00000000 		.4byte	.LFB2
 4051 0014 20000000 		.4byte	.LFE2
 4052 0018 00000000 		.4byte	.LFB3
 4053 001c 34000000 		.4byte	.LFE3
 4054 0020 00000000 		.4byte	.LFB4
 4055 0024 1C000000 		.4byte	.LFE4
 4056 0028 00000000 		.4byte	.LFB5
 4057 002c 24000000 		.4byte	.LFE5
 4058 0030 00000000 		.4byte	.LFB7
 4059 0034 24000000 		.4byte	.LFE7
 4060 0038 00000000 		.4byte	.LFB8
 4061 003c 14000000 		.4byte	.LFE8
 4062 0040 00000000 		.4byte	.LFB9
 4063 0044 10000000 		.4byte	.LFE9
 4064 0048 00000000 		.4byte	.LFB10
 4065 004c 0C000000 		.4byte	.LFE10
 4066 0050 00000000 		.4byte	.LFB17
 4067 0054 14000000 		.4byte	.LFE17
 4068 0058 00000000 		.4byte	.LFB18
 4069 005c 18000000 		.4byte	.LFE18
 4070 0060 00000000 		.4byte	.LFB19
 4071 0064 14000000 		.4byte	.LFE19
 4072 0068 00000000 		.4byte	.LFB20
 4073 006c 14000000 		.4byte	.LFE20
 4074 0070 00000000 		.4byte	.LFB21
 4075 0074 14000000 		.4byte	.LFE21
 4076 0078 00000000 		.4byte	.LFB22
 4077 007c 04000000 		.4byte	.LFE22
 4078 0080 00000000 		.4byte	.LFB6
 4079 0084 AC000000 		.4byte	.LFE6
 4080 0088 00000000 		.4byte	.LFB11
 4081 008c 20000000 		.4byte	.LFE11
 4082 0090 00000000 		.4byte	.LFB12
 4083 0094 1C000000 		.4byte	.LFE12
 4084 0098 00000000 		.4byte	.LFB13
 4085 009c 22000000 		.4byte	.LFE13
 4086 00a0 00000000 		.4byte	.LFB14
 4087 00a4 1E000000 		.4byte	.LFE14
 4088 00a8 00000000 		.4byte	.LFB15
 4089 00ac 4C000000 		.4byte	.LFE15
 4090 00b0 00000000 		.4byte	.LFB16
 4091 00b4 2C000000 		.4byte	.LFE16
 4092 00b8 00000000 		.4byte	.LFB23
 4093 00bc 18000000 		.4byte	.LFE23
 4094 00c0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 136


 4095 00c4 30000000 		.4byte	.LFE24
 4096 00c8 00000000 		.4byte	.LFB25
 4097 00cc 14000000 		.4byte	.LFE25
 4098 00d0 00000000 		.4byte	.LFB26
 4099 00d4 4C000000 		.4byte	.LFE26
 4100 00d8 00000000 		.4byte	.LFB30
 4101 00dc 10000000 		.4byte	.LFE30
 4102 00e0 00000000 		.4byte	.LFB31
 4103 00e4 10000000 		.4byte	.LFE31
 4104 00e8 00000000 		.4byte	.LFB29
 4105 00ec 18000000 		.4byte	.LFE29
 4106 00f0 00000000 		.4byte	.LFB32
 4107 00f4 10000000 		.4byte	.LFE32
 4108 00f8 00000000 		.4byte	.LFB33
 4109 00fc 10000000 		.4byte	.LFE33
 4110 0100 00000000 		.4byte	.LFB34
 4111 0104 10000000 		.4byte	.LFE34
 4112 0108 00000000 		.4byte	.LFB35
 4113 010c 10000000 		.4byte	.LFE35
 4114 0110 00000000 		.4byte	.LFB36
 4115 0114 10000000 		.4byte	.LFE36
 4116 0118 00000000 		.4byte	.LFB40
 4117 011c 28000000 		.4byte	.LFE40
 4118 0120 00000000 		.4byte	.LFB37
 4119 0124 0C000000 		.4byte	.LFE37
 4120 0128 00000000 		.4byte	.LFB28
 4121 012c 40000000 		.4byte	.LFE28
 4122 0130 00000000 		.4byte	.LFB27
 4123 0134 20000000 		.4byte	.LFE27
 4124 0138 00000000 		.4byte	.LFB38
 4125 013c 10000000 		.4byte	.LFE38
 4126 0140 00000000 		.4byte	.LFB39
 4127 0144 0C000000 		.4byte	.LFE39
 4128 0148 00000000 		.4byte	.LFB41
 4129 014c 70000000 		.4byte	.LFE41
 4130 0150 00000000 		.4byte	0
 4131 0154 00000000 		.4byte	0
 4132              		.section	.debug_line,"",%progbits
 4133              	.Ldebug_line0:
 4134 0000 1A040000 		.section	.debug_str,"MS",%progbits,1
 4134      02004D00 
 4134      00000201 
 4134      FB0E0D00 
 4134      01010101 
 4135              	.LASF54:
 4136 0000 72616D56 		.ascii	"ramVectorTable\000"
 4136      6563746F 
 4136      72546162 
 4136      6C6500
 4137              	.LASF10:
 4138 000f 75696E74 		.ascii	"uint16\000"
 4138      313600
 4139              	.LASF38:
 4140 0016 696E7453 		.ascii	"intState\000"
 4140      74617465 
 4140      00
 4141              	.LASF25:
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 137


 4142 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4142      73436C6B 
 4142      57726974 
 4142      65486663 
 4142      6C6B4469 
 4143              	.LASF92:
 4144 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4144      73436C6B 
 4144      50756D70 
 4144      436F6E66 
 4144      696700
 4145              	.LASF53:
 4146 004b 6F6C6449 		.ascii	"oldIsr\000"
 4146      737200
 4147              	.LASF82:
 4148 0052 72657456 		.ascii	"retVal\000"
 4148      616C00
 4149              	.LASF37:
 4150 0059 43794469 		.ascii	"CyDisableInts\000"
 4150      7361626C 
 4150      65496E74 
 4150      7300
 4151              	.LASF96:
 4152 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4152      43313120 
 4152      352E342E 
 4152      31203230 
 4152      31363036 
 4153 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4153      20726576 
 4153      6973696F 
 4153      6E203233 
 4153      37373135 
 4154 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4154      66756E63 
 4154      74696F6E 
 4154      2D736563 
 4154      74696F6E 
 4155              	.LASF7:
 4156 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4156      206C6F6E 
 4156      6720756E 
 4156      7369676E 
 4156      65642069 
 4157              	.LASF91:
 4158 010c 43795379 		.ascii	"CySysTickInitVar\000"
 4158      73546963 
 4158      6B496E69 
 4158      74566172 
 4158      00
 4159              	.LASF39:
 4160 011d 4379456E 		.ascii	"CyEnableInts\000"
 4160      61626C65 
 4160      496E7473 
 4160      00
 4161              	.LASF63:
 4162 012a 4379536F 		.ascii	"CySoftwareReset\000"
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 138


 4162      66747761 
 4162      72655265 
 4162      73657400 
 4163              	.LASF70:
 4164 013a 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4164      73546963 
 4164      6B456E61 
 4164      626C6549 
 4164      6E746572 
 4165              	.LASF43:
 4166 0153 4379496E 		.ascii	"CyIntGetState\000"
 4166      74476574 
 4166      53746174 
 4166      6500
 4167              	.LASF6:
 4168 0161 6C6F6E67 		.ascii	"long long int\000"
 4168      206C6F6E 
 4168      6720696E 
 4168      7400
 4169              	.LASF0:
 4170 016f 7369676E 		.ascii	"signed char\000"
 4170      65642063 
 4170      68617200 
 4171              	.LASF49:
 4172 017b 66726571 		.ascii	"freq\000"
 4172      00
 4173              	.LASF68:
 4174 0180 43794465 		.ascii	"CyDelayFreq\000"
 4174      6C617946 
 4174      72657100 
 4175              	.LASF23:
 4176 018c 696E7465 		.ascii	"interruptState\000"
 4176      72727570 
 4176      74537461 
 4176      746500
 4177              	.LASF74:
 4178 019b 43795379 		.ascii	"CySysTickGetReload\000"
 4178      73546963 
 4178      6B476574 
 4178      52656C6F 
 4178      616400
 4179              	.LASF4:
 4180 01ae 6C6F6E67 		.ascii	"long int\000"
 4180      20696E74 
 4180      00
 4181              	.LASF44:
 4182 01b7 4379496E 		.ascii	"CyIntDisable\000"
 4182      74446973 
 4182      61626C65 
 4182      00
 4183              	.LASF83:
 4184 01c4 43795379 		.ascii	"CySysTickGetCallback\000"
 4184      73546963 
 4184      6B476574 
 4184      43616C6C 
 4184      6261636B 
 4185              	.LASF9:
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 139


 4186 01d9 75696E74 		.ascii	"uint8\000"
 4186      3800
 4187              	.LASF88:
 4188 01df 63796465 		.ascii	"cydelayFreqKhz\000"
 4188      6C617946 
 4188      7265714B 
 4188      687A00
 4189              	.LASF28:
 4190 01ee 656E6162 		.ascii	"enable\000"
 4190      6C6500
 4191              	.LASF13:
 4192 01f5 646F7562 		.ascii	"double\000"
 4192      6C6500
 4193              	.LASF60:
 4194 01fc 73686966 		.ascii	"shift\000"
 4194      7400
 4195              	.LASF11:
 4196 0202 75696E74 		.ascii	"uint32\000"
 4196      333200
 4197              	.LASF40:
 4198 0209 6D61736B 		.ascii	"mask\000"
 4198      00
 4199              	.LASF33:
 4200 020e 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4200      73436C6B 
 4200      47657453 
 4200      7973636C 
 4200      6B536F75 
 4201              	.LASF62:
 4202 0226 4379496E 		.ascii	"CyIntGetPriority\000"
 4202      74476574 
 4202      5072696F 
 4202      72697479 
 4202      00
 4203              	.LASF90:
 4204 0237 63796465 		.ascii	"cydelay32kMs\000"
 4204      6C617933 
 4204      326B4D73 
 4204      00
 4205              	.LASF78:
 4206 0244 43795379 		.ascii	"CySysTickInit\000"
 4206      73546963 
 4206      6B496E69 
 4206      7400
 4207              	.LASF61:
 4208 0252 76616C75 		.ascii	"value\000"
 4208      6500
 4209              	.LASF84:
 4210 0258 43794765 		.ascii	"CyGetUniqueId\000"
 4210      74556E69 
 4210      71756549 
 4210      6400
 4211              	.LASF76:
 4212 0266 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4212      73546963 
 4212      6B476574 
 4212      436F756E 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 140


 4212      74466C61 
 4213              	.LASF8:
 4214 027c 756E7369 		.ascii	"unsigned int\000"
 4214      676E6564 
 4214      20696E74 
 4214      00
 4215              	.LASF77:
 4216 0289 43795379 		.ascii	"CySysTickClear\000"
 4216      73546963 
 4216      6B436C65 
 4216      617200
 4217              	.LASF5:
 4218 0298 6C6F6E67 		.ascii	"long unsigned int\000"
 4218      20756E73 
 4218      69676E65 
 4218      6420696E 
 4218      7400
 4219              	.LASF98:
 4220 02aa 433A5C55 		.ascii	"C:\\Users\\mac_000\\Documents\\Git_IR_REMO\\PSoC\\D"
 4220      73657273 
 4220      5C6D6163 
 4220      5F303030 
 4220      5C446F63 
 4221 02d7 65736967 		.ascii	"esign01.cydsn\000"
 4221      6E30312E 
 4221      63796473 
 4221      6E00
 4222              	.LASF22:
 4223 02e5 43795379 		.ascii	"CySysClkImoStop\000"
 4223      73436C6B 
 4223      496D6F53 
 4223      746F7000 
 4224              	.LASF93:
 4225 02f5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4225      74657243 
 4225      72697469 
 4225      63616C53 
 4225      65637469 
 4226              	.LASF45:
 4227 030c 4379496E 		.ascii	"CyIntSetPending\000"
 4227      74536574 
 4227      50656E64 
 4227      696E6700 
 4228              	.LASF34:
 4229 031c 43795379 		.ascii	"CySysGetResetReason\000"
 4229      73476574 
 4229      52657365 
 4229      74526561 
 4229      736F6E00 
 4230              	.LASF3:
 4231 0330 73686F72 		.ascii	"short unsigned int\000"
 4231      7420756E 
 4231      7369676E 
 4231      65642069 
 4231      6E7400
 4232              	.LASF56:
 4233 0343 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 141


 4233      74536574 
 4233      56656374 
 4233      6F7200
 4234              	.LASF42:
 4235 0352 6E756D62 		.ascii	"number\000"
 4235      657200
 4236              	.LASF59:
 4237 0359 7072696F 		.ascii	"priority\000"
 4237      72697479 
 4237      00
 4238              	.LASF48:
 4239 0362 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4239      73436C6B 
 4239      57726974 
 4239      65496D6F 
 4239      46726571 
 4240              	.LASF51:
 4241 0377 4379496E 		.ascii	"CyIntSetSysVector\000"
 4241      74536574 
 4241      53797356 
 4241      6563746F 
 4241      7200
 4242              	.LASF26:
 4243 0389 43795379 		.ascii	"CySysEnablePumpClock\000"
 4243      73456E61 
 4243      626C6550 
 4243      756D7043 
 4243      6C6F636B 
 4244              	.LASF16:
 4245 039e 72656733 		.ascii	"reg32\000"
 4245      3200
 4246              	.LASF79:
 4247 03a4 43795379 		.ascii	"CySysTickStart\000"
 4247      73546963 
 4247      6B537461 
 4247      727400
 4248              	.LASF36:
 4249 03b3 72657475 		.ascii	"returnStatus\000"
 4249      726E5374 
 4249      61747573 
 4249      00
 4250              	.LASF19:
 4251 03c0 73697A65 		.ascii	"sizetype\000"
 4251      74797065 
 4251      00
 4252              	.LASF46:
 4253 03c9 4379496E 		.ascii	"CyIntClearPending\000"
 4253      74436C65 
 4253      61725065 
 4253      6E64696E 
 4253      6700
 4254              	.LASF18:
 4255 03db 6C6F6E67 		.ascii	"long double\000"
 4255      20646F75 
 4255      626C6500 
 4256              	.LASF52:
 4257 03e7 61646472 		.ascii	"address\000"
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 142


 4257      65737300 
 4258              	.LASF29:
 4259 03ef 73797363 		.ascii	"sysclkSource\000"
 4259      6C6B536F 
 4259      75726365 
 4259      00
 4260              	.LASF81:
 4261 03fc 66756E63 		.ascii	"function\000"
 4261      74696F6E 
 4261      00
 4262              	.LASF75:
 4263 0405 43795379 		.ascii	"CySysTickGetValue\000"
 4263      73546963 
 4263      6B476574 
 4263      56616C75 
 4263      6500
 4264              	.LASF87:
 4265 0417 63796465 		.ascii	"cydelayFreqHz\000"
 4265      6C617946 
 4265      72657148 
 4265      7A00
 4266              	.LASF58:
 4267 0425 4379496E 		.ascii	"CyIntSetPriority\000"
 4267      74536574 
 4267      5072696F 
 4267      72697479 
 4267      00
 4268              	.LASF12:
 4269 0436 666C6F61 		.ascii	"float\000"
 4269      7400
 4270              	.LASF94:
 4271 043c 43794578 		.ascii	"CyExitCriticalSection\000"
 4271      69744372 
 4271      69746963 
 4271      616C5365 
 4271      6374696F 
 4272              	.LASF20:
 4273 0452 63795379 		.ascii	"cySysTickCallback\000"
 4273      73546963 
 4273      6B43616C 
 4273      6C626163 
 4273      6B00
 4274              	.LASF57:
 4275 0464 4379496E 		.ascii	"CyIntGetVector\000"
 4275      74476574 
 4275      56656374 
 4275      6F7200
 4276              	.LASF65:
 4277 0473 6D696C6C 		.ascii	"milliseconds\000"
 4277      69736563 
 4277      6F6E6473 
 4277      00
 4278              	.LASF95:
 4279 0480 43794465 		.ascii	"CyDelayCycles\000"
 4279      6C617943 
 4279      79636C65 
 4279      7300
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 143


 4280              	.LASF15:
 4281 048e 72656738 		.ascii	"reg8\000"
 4281      00
 4282              	.LASF47:
 4283 0493 43794861 		.ascii	"CyHalt\000"
 4283      6C7400
 4284              	.LASF1:
 4285 049a 756E7369 		.ascii	"unsigned char\000"
 4285      676E6564 
 4285      20636861 
 4285      7200
 4286              	.LASF2:
 4287 04a8 73686F72 		.ascii	"short int\000"
 4287      7420696E 
 4287      7400
 4288              	.LASF41:
 4289 04b2 4379496E 		.ascii	"CyIntEnable\000"
 4289      74456E61 
 4289      626C6500 
 4290              	.LASF55:
 4291 04be 4379496E 		.ascii	"CyIntGetSysVector\000"
 4291      74476574 
 4291      53797356 
 4291      6563746F 
 4291      7200
 4292              	.LASF27:
 4293 04d0 636C6B53 		.ascii	"clkSelect\000"
 4293      656C6563 
 4293      7400
 4294              	.LASF66:
 4295 04da 43794465 		.ascii	"CyDelayUs\000"
 4295      6C617955 
 4295      7300
 4296              	.LASF35:
 4297 04e4 72656173 		.ascii	"reason\000"
 4297      6F6E00
 4298              	.LASF14:
 4299 04eb 63686172 		.ascii	"char\000"
 4299      00
 4300              	.LASF17:
 4301 04f0 63796973 		.ascii	"cyisraddress\000"
 4301      72616464 
 4301      72657373 
 4301      00
 4302              	.LASF71:
 4303 04fd 43795379 		.ascii	"CySysTickEnable\000"
 4303      73546963 
 4303      6B456E61 
 4303      626C6500 
 4304              	.LASF32:
 4305 050d 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 4305      73436C6B 
 4305      57726974 
 4305      65486663 
 4305      6C6B4469 
 4306              	.LASF30:
 4307 0523 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 144


 4307      73436C6B 
 4307      57726974 
 4307      65537973 
 4307      636C6B44 
 4308              	.LASF80:
 4309 053a 43795379 		.ascii	"CySysTickSetCallback\000"
 4309      73546963 
 4309      6B536574 
 4309      43616C6C 
 4309      6261636B 
 4310              	.LASF86:
 4311 054f 43795379 		.ascii	"CySysTickCallbacks\000"
 4311      73546963 
 4311      6B43616C 
 4311      6C626163 
 4311      6B7300
 4312              	.LASF50:
 4313 0562 696D6F54 		.ascii	"imoTrim1Value\000"
 4313      72696D31 
 4313      56616C75 
 4313      6500
 4314              	.LASF85:
 4315 0570 756E6971 		.ascii	"uniqueId\000"
 4315      75654964 
 4315      00
 4316              	.LASF64:
 4317 0579 43794465 		.ascii	"CyDelay\000"
 4317      6C617900 
 4318              	.LASF72:
 4319 0581 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4319      73546963 
 4319      6B446973 
 4319      61626C65 
 4319      496E7465 
 4320              	.LASF89:
 4321 059b 63796465 		.ascii	"cydelayFreqMhz\000"
 4321      6C617946 
 4321      7265714D 
 4321      687A00
 4322              	.LASF69:
 4323 05aa 43795379 		.ascii	"CySysTickStop\000"
 4323      73546963 
 4323      6B53746F 
 4323      7000
 4324              	.LASF31:
 4325 05b8 64697669 		.ascii	"divider\000"
 4325      64657200 
 4326              	.LASF21:
 4327 05c0 43795379 		.ascii	"CySysClkImoStart\000"
 4327      73436C6B 
 4327      496D6F53 
 4327      74617274 
 4327      00
 4328              	.LASF97:
 4329 05d1 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4329      72617465 
 4329      645F536F 
ARM GAS  C:\Users\mac_000\AppData\Local\Temp\ccYCnAoB.s 			page 145


 4329      75726365 
 4329      5C50536F 
 4330              	.LASF67:
 4331 05f0 6D696372 		.ascii	"microseconds\000"
 4331      6F736563 
 4331      6F6E6473 
 4331      00
 4332              	.LASF24:
 4333 05fd 746D7052 		.ascii	"tmpReg\000"
 4333      656700
 4334              	.LASF73:
 4335 0604 43795379 		.ascii	"CySysTickSetReload\000"
 4335      73546963 
 4335      6B536574 
 4335      52656C6F 
 4335      616400
 4336              	.LASF99:
 4337 0617 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4337      73546963 
 4337      6B536572 
 4337      76696365 
 4337      43616C6C 
 4338              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
